{"version":3,"file":"static/js/922.03f83d70.chunk.js","mappings":"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","sources":["components/ModalPopups/CandidateDetails/FBLeadDetailsview.js","pages/pipelines/candidatePipeline/components/LeadPipelineFilter.js","pages/pipelines/candidatePipeline/components/leadGenerationPipeline.js","pages/pipelines/candidatePipeline/components/callRemainderFilter..js","pages/pipelines/candidatePipeline/components/callRemainderPipeline.js","pages/pipelines/candidatePipeline/components/notQualifiedFilter.js","pages/pipelines/candidatePipeline/components/notQualifiedPipeline.js","pages/pipelines/candidatePipeline/components/canRegisteredFilter.js","pages/pipelines/candidatePipeline/components/canRegisteredPipeline.js","pages/pipelines/candidatePipeline/components/interviewFollowUpFilter.js","pages/pipelines/candidatePipeline/components/interviewFollowUpPipeline.js","pages/pipelines/candidatePipeline/components/candidateLeadlostFilter.js","pages/pipelines/candidatePipeline/components/candidateLeadlost.js","pages/pipelines/candidatePipeline/pipeline.js"],"sourcesContent":["/* eslint-disable react/jsx-pascal-case */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { RxCross2 } from \"react-icons/rx\";\r\nimport { DDMMYYYY_formate, Detailsshow, MyModal } from \"../../../utility\";\r\nimport ModalContainer from \"../../modal_popup\";\r\nimport DetailsContainer from \"../../DetailsContainer\";\r\nimport Candidatedetailstyle from \"./CandidateDetails.module.scss\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  GetAllsdminDetails,\r\n  PutCandidateLeadCheck,\r\n  PutMetaLeadAssign,\r\n  getCandidateLead,\r\n} from \"../../../apiServices\";\r\nimport companylogo from \"../../../assets/images/user.png\";\r\nimport FBStyle from \"../../../pages/Candidate/FacebookMeta/candidateFacebookMeta.module.scss\";\r\nimport { useRef } from \"react\";\r\nimport { PiDotsThreeOutlineVerticalFill } from \"react-icons/pi\";\r\nimport { FaWhatsapp } from \"react-icons/fa\";\r\nimport flag from \"../../../assets/images/flag.png\";\r\n// import companylogo from \"../../assets/images/Company-Logo.png\";\r\nimport WhatsappImage from \"../../../assets/images/whatsapp-logo-removebg-preview.png\";\r\nimport { MdCall, MdOutlineContentCopy } from \"react-icons/md\";\r\nimport candidateTabsviewStyle from \"../../../pages/Tabsview/Candidate/CandidateTabsview.module.scss\";\r\nimport { Autocomplete, Card, CardContent, TextField } from \"@mui/material\";\r\nimport ScheduleInterview from \"../../../pages/Candidate/CandidateInterview/scheduleInterview\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SuccessTick from \"../../success_tick\";\r\nimport TimelineFacebookMeta from \"../../../pages/Candidate/FacebookMeta/TimelineFacebookMeta\";\r\nimport AddNotesFBLead from \"../../../pages/Candidate/FacebookMeta/PostCandidateNotes\";\r\n\r\nconst CandidateFBLeadDetailsview = ({\r\n  data,\r\n  onClose,\r\n  onAssignChange,\r\n  textHeading,\r\n}) => {\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const [candiateDetails, setCandidateDetails] = useState({});\r\n  const [putCandidateLead, setPutcandidateLead] = useState({\r\n    canLeadId: \"\",\r\n    qualified: false,\r\n    notQualified: false,\r\n  });\r\n  const adminDetailsRole = useSelector((state) => state.adminDetails);\r\n  let isSuperAdmin = adminDetailsRole.roleID === 1;\r\n  const [enableSubmit, setEnableSubmit] = useState(false);\r\n  const [CanputLead, setCanputLead] = useState(null);\r\n  const [activeTab, setActiveTab] = useState(1);\r\n  const [showConfirmationPopup, setShowConfirmPopup] = useState(false);\r\n  const [showConfirmationqualifiedPopup, setShowConfirmQualifiedPopup] =\r\n    useState(false);\r\n\r\n  console.log(data, \"jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj\");\r\n\r\n  const [assignAdminto, setAssignAdminto] = useState({\r\n    metaLeadId: \"\",\r\n    adminId: \"\",\r\n  });\r\n\r\n  const [adminDetails, setAdminDetails] = useState({\r\n    id: null,\r\n    adminName: [],\r\n  });\r\n\r\n  const handleCancelClick = () => {\r\n    console.log(\"Cancel button clicked\");\r\n    setShowConfirmQualifiedPopup(false);\r\n    setEnableSubmit(false);\r\n  };\r\n\r\n  const handleCancelClicknotqualify = () => {\r\n    console.log(\"Cancel button clicked\");\r\n    setShowConfirmPopup(false);\r\n    setEnableSubmit(false);\r\n  };\r\n\r\n  // const navigate = useNavigate();\r\n\r\n  const [showScheduleInterview, setShowScheduleInterview] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const params = window.location.href;\r\n\r\n    let isShowScheduleInterview = params.includes(\"interview_schedule_list\");\r\n    console.log(params, \"parameterrrs\");\r\n    setShowScheduleInterview(!isShowScheduleInterview);\r\n  }, []);\r\n\r\n  const handleTabClick = (tabNumber) => {\r\n    setActiveTab(tabNumber);\r\n  };\r\n\r\n  const inputRef = {\r\n    qualified: useRef(),\r\n    notQualified: useRef(),\r\n    // rescheduled: useRef(),\r\n  };\r\n\r\n  const handleLeadAssignfromAdmin = (metaLeadId, adminId) => {\r\n    // let selectedAdminName = event.target.value;\r\n    setAssignAdminto((prev) => ({\r\n      ...prev,\r\n      adminId: adminId,\r\n      metaLeadId: metaLeadId,\r\n    }));\r\n  };\r\n\r\n  function ConfirmFormSubmit() {\r\n    if (putCandidateLead.canLeadId) {\r\n      setEnableSubmit(true);\r\n      putCandidateLead.notes = CanputLead.notes;\r\n      PutCandidateLeadCheck(putCandidateLead).then(() => {\r\n        setShowConfirmPopup(false);\r\n        setShowConfirmQualifiedPopup(false);\r\n\r\n        getCandidateLead().then((data) => {\r\n          console.log(data);\r\n          setCandidateDetails(data);\r\n        });\r\n        setEnableSubmit(false);\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (assignAdminto.adminId && assignAdminto.metaLeadId) {\r\n      PutMetaLeadAssign(assignAdminto).then((data) => {\r\n        // console.log(data, \"kdksjkbbh\");\r\n        if (data.code !== 200) {\r\n          alert(\"something went wrong\");\r\n          return false;\r\n        }\r\n        setShowSuccess(true);\r\n        setTimeout(() => {\r\n          setShowSuccess(false);\r\n        }, 3000);\r\n        onAssignChange();\r\n      });\r\n    }\r\n  }, [assignAdminto]);\r\n  useEffect(() => {\r\n    GetAllsdminDetails().then((data) => {\r\n      console.log(data, \"All admin details\");\r\n      const adminName = data.map((item) => item.userName);\r\n      const adminid = data.map((item) => item.id);\r\n      console.log(adminName);\r\n      console.log(adminid);\r\n      setAdminDetails((prev) => ({\r\n        ...prev,\r\n        adminName: adminName,\r\n        id: adminid,\r\n      }));\r\n    });\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   const assignToIndex = adminid.indexOf(data.assignTo);\r\n  //   if (assignToIndex !== -1) {\r\n  //     setAssignToName(adminName[assignToIndex]);\r\n  //   }\r\n  // }, [candiateDetails.assignTo, adminid, adminName]);\r\n\r\n  const handleWhatsAppIconClick = (phoneNumber) => {\r\n    // console.log(event)\r\n    const whatsappURL = `https://api.whatsapp.com/send?phone=${phoneNumber}`;\r\n    window.open(whatsappURL, \"_blank\");\r\n  };\r\n  const [isCopied, setIsCopied] = useState(false);\r\n\r\n  const handleCopyNumber = (phoneNumber, whatsappNumber) => {\r\n    navigator.clipboard.writeText(phoneNumber, whatsappNumber).then(() => {\r\n      setIsCopied(true);\r\n    });\r\n  };\r\n\r\n  const keySkillsArray =\r\n    candiateDetails.keySkill && typeof candiateDetails.keySkill === \"string\"\r\n      ? candiateDetails.keySkill.split(\",\")\r\n      : [];\r\n  return (\r\n    <div>\r\n      {/* <div className=\"container-fluid\">\r\n        <div className=\"row d-flex justify-content-end\">\r\n          <RxCross2 />\r\n        </div>\r\n      </div> */}\r\n      <Detailsshow>\r\n        <DetailsContainer\r\n          topComponent={\r\n            <>\r\n              <div className={`${Candidatedetailstyle.boxcross}`}>\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <div>\r\n                    <h4 className=\"text-light ms-3\">{textHeading}</h4>\r\n                  </div>\r\n                  <div\r\n                    className={` ${Candidatedetailstyle.CrossStyle} pe-5 pe-lg-4`}\r\n                  >\r\n                    <b>\r\n                      <RxCross2\r\n                        onClick={() => {\r\n                          onClose();\r\n                        }}\r\n                      />\r\n                    </b>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          }\r\n          childComponent={\r\n            <>\r\n              <div className={`${Candidatedetailstyle.boxwidth}`}>\r\n                <div className=\"container-fluid\">\r\n                  <div className={`row ${Candidatedetailstyle.topcontainer}`}>\r\n                    <div className=\"col-sm-4\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-sm-4\">\r\n                          {\" \"}\r\n                          {data.profilePic ? (\r\n                            <img\r\n                              src={data.profilePic}\r\n                              alt=\"Candidate Profile\"\r\n                              width={70}\r\n                            />\r\n                          ) : (\r\n                            <img src={companylogo} alt=\"Profile\" width={100} />\r\n                          )}\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                          <div>\r\n                            <b>{data.candidateName} </b>\r\n                          </div>\r\n                          <div>\r\n                            {data.jobCategory ? (\r\n                              <>{data.jobCategory}</>\r\n                            ) : (\r\n                              <> {\"Fresher\"}</>\r\n                            )}{\" \"}\r\n                          </div>\r\n                          <div>\r\n                            <div className={``}>\r\n                              <div className={`${FBStyle.StatusStyle}`}>\r\n                                <div>\r\n                                  <>\r\n                                    {data.qualified === true && (\r\n                                      <div className={`${FBStyle.Green_wrp}`}>\r\n                                        <input\r\n                                          type=\"radio\"\r\n                                          name={`status_${data.id}`}\r\n                                          checked={data.qualified}\r\n                                          id={`qualified_${data.id}`}\r\n                                        />\r\n                                        <label htmlFor={`qualified_${data.id}`}>\r\n                                          Qualified\r\n                                        </label>\r\n                                      </div>\r\n                                    )}\r\n\r\n                                    {data.notQualified === true && (\r\n                                      <div className={`${FBStyle.chips_wrp}`}>\r\n                                        <input\r\n                                          type=\"radio\"\r\n                                          checked={data.notQualified}\r\n                                          name={`status_${data.id}`}\r\n                                          id={`notQualified_${data.id}`}\r\n                                        />\r\n                                        <label\r\n                                          htmlFor={`notQualified_${data.id}`}\r\n                                        >\r\n                                          Not Qualified\r\n                                        </label>\r\n                                      </div>\r\n                                    )}\r\n                                  </>\r\n                                </div>\r\n                                {/* <div className=\"btn-group dropstart\">\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    // className={`btn btn-light `}\r\n\r\n                                    data-bs-toggle=\"dropdown\"\r\n                                    data-bs-no-caret=\"true\"\r\n                                    aria-expanded=\"false\"\r\n                                    style={{\r\n                                      border: \"none\",\r\n                                      background: \"none\",\r\n                                      color: \"#000\",\r\n                                      cursor: \"pointer\",\r\n                                      outline: \"none\",\r\n                                      position: \"relative\",\r\n                                      right: \"5px\",\r\n                                      // backgroundColor: \"red\",\r\n                                      fontSize: 20,\r\n                                      zIndex: 1,\r\n                                    }}\r\n                                  >\r\n                                    <span className=\"\">\r\n                                      {\" \"}\r\n                                      <BsThreeDotsVertical />{\" \"}\r\n                                    </span>\r\n                                    <AiOutlineEdit />\r\n                                  </button>{\" \"}\r\n                                  <ul\r\n                                    className=\"dropdown-menu\"\r\n                                    style={{ textAlign: \"left\" }}\r\n                                    // ref={dropdownRef}\r\n                                  >\r\n                                    <li\r\n                                      onClick={() => {\r\n                                        handleConfirmationOpenQualify(true);\r\n                                        handleIsQualified(\"qualified\");\r\n                                      }}\r\n                                    >\r\n                                      <a className=\"dropdown-item\" href=\"#\">\r\n                                        <div\r\n                                          className={`${FBStyle.select_wrp}`}\r\n                                          onClick={() => {\r\n                                            handleButtonClick(\"qualified\");\r\n                                          }}\r\n                                        >\r\n                                          <input\r\n                                            type=\"radio\"\r\n                                            // ref={inputRef.qualified}\r\n                                            name={`status_${data.id}`}\r\n                                            checked={data.qualified}\r\n                                            id={`qualified_${data.id}`}\r\n                                          />\r\n\r\n                                          <label\r\n                                            htmlFor={`qualified_${data.id}`}\r\n                                          >\r\n                                            {\" \"}\r\n                                            <GoDotFill\r\n                                              style={{\r\n                                                color: \"#169C50\",\r\n                                                fontSize: 20,\r\n                                              }}\r\n                                            />\r\n                                            Qualified\r\n                                          </label>\r\n                                        </div>\r\n                                      </a>\r\n                                    </li>\r\n\r\n                                    <li\r\n                                      onClick={() => {\r\n                                        handleConfirmationOpen(true);\r\n                                        handleIsQualified(\"notQualified\");\r\n                                      }}\r\n                                    >\r\n                                      <a\r\n                                        className=\"dropdown-item\"\r\n                                        href=\"#\"\r\n                                        onClick={() =>\r\n                                          handleButtonClick(\"notQualified\")\r\n                                        }\r\n                                      >\r\n                                        <div\r\n                                          className={`${FBStyle.select_wrp}`}\r\n                                        >\r\n                                          <input\r\n                                            // ref={inputRef.notQualified}\r\n                                            type=\"radio\"\r\n                                            checked={data.notQualified}\r\n                                            name={`status_${data.id}`}\r\n                                            id={`notQualified_${data.id}`}\r\n                                          />\r\n                                          <label\r\n                                            htmlFor={`notQualified_${data.id}`}\r\n                                          >\r\n                                            <GoDotFill\r\n                                              style={{\r\n                                                color: \"#b2261c\",\r\n                                                fontSize: 20,\r\n                                              }}\r\n                                            />{\" \"}\r\n                                            Not Qualified\r\n                                          </label>\r\n                                        </div>\r\n                                      </a>\r\n                                    </li>\r\n                                  </ul>\r\n                                </div> */}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row mt-1\">\r\n                        <div className={`${Candidatedetailstyle.Createdon}`}>\r\n                          Created on :{\" \"}\r\n                          <DDMMYYYY_formate dateValue={data.createdTime} />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    {/* <div className=\"col\">\r\n                      {\" \"}\r\n                      \r\n                    </div> */}\r\n                    <div className={`col-sm-8`}>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-sm-4\">\r\n                          {/* <div\r\n                            className={`${Candidatedetailstyle.verticalLine}`}\r\n                          ></div> */}\r\n                          {/* <div\r\n                            className={`${Candidatedetailstyle.CandidatepastDetails}`}\r\n                          >\r\n                            <div>\r\n                              {\" \"}\r\n                              Joining Status <PiWarningCircleLight /> :\r\n                              immediate\r\n                            </div>\r\n                            <div>\r\n                              {\" \"}\r\n                              Employer Status <PiWarningCircleLight /> : working\r\n                            </div>\r\n                            <div>\r\n                              {\" \"}\r\n                              Previous Company <PiWarningCircleLight /> : Taizo\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-end\">\r\n                              <button className=\"btn\">\r\n                                <span className=\"\">\r\n                                  {\" \"}\r\n                                  <BsThreeDotsVertical />{\" \"}\r\n                                </span>\r\n                                <AiOutlineEdit />\r\n                              </button>\r\n                            </div>\r\n                          </div> */}\r\n                        </div>\r\n                        <div className=\"col-sm-8 \">\r\n                          <div className={`row `}>\r\n                            {/* ${Candidatedetailstyle.flexContainer} */}\r\n                            <div\r\n                              className={`col-sm-12 ${Candidatedetailstyle.flexContainer}`}\r\n                            >\r\n                              {/* <a\r\n                                href={`${webConsoleBaseUrl}/waNotifications/customCandidateupdate.html?id=${data.id}&adminId=${adminId}`}\r\n                                target=\"_blank\"\r\n                                // className=\"nav-link\"\r\n                                style={{\r\n                                  textDecoration: \"none\",\r\n                                  color: \"black\",\r\n                                }}\r\n                              >\r\n                                <div\r\n                                  className={`${Candidatedetailstyle.LiaUserEditSolid}`}\r\n                                >\r\n                                  <div className=\"mb-1\">\r\n                                    {\" \"}\r\n                                    <LiaUserEditSolid />\r\n                                  </div>\r\n                                </div>\r\n                              </a> */}\r\n                              <div\r\n                                className={`${Candidatedetailstyle.LiaUserEditSolid}`}\r\n                              >\r\n                                <div\r\n                                  className=\"mb-1\"\r\n                                  onClick={() =>\r\n                                    handleWhatsAppIconClick(data.whatsappNumber)\r\n                                  }\r\n                                >\r\n                                  <FaWhatsapp />\r\n                                </div>\r\n                              </div>\r\n                              <div>\r\n                                {/* <div\r\n                                  className={`${Candidatedetailstyle.scheduleinterview}`}\r\n                                >\r\n                                  {showScheduleInterview &&\r\n                                    data.id && (\r\n                                      <ScheduleInterview\r\n                                        candidateId={data.id}\r\n                                      />\r\n                                    )}{\" \"}\r\n                                </div> */}\r\n                              </div>\r\n                              <div class=\"btn-group\">\r\n                                <button\r\n                                  type=\"button\"\r\n                                  // class=\"btn btn-secondary\"\r\n                                  data-bs-toggle=\"dropdown\"\r\n                                  data-bs-display=\"static\"\r\n                                  aria-expanded=\"false\"\r\n                                  style={{ border: \"none\" }}\r\n                                  className={`${Candidatedetailstyle.ThreeOutline}`}\r\n                                >\r\n                                  <PiDotsThreeOutlineVerticalFill />\r\n                                </button>\r\n                                <ul class=\"dropdown-menu dropdown-menu-end dropdown-menu-lg-end\">\r\n                                  <li>\r\n                                    <button class=\"dropdown-item\" type=\"button\">\r\n                                      {showScheduleInterview && data.id && (\r\n                                        <ScheduleInterview\r\n                                          candidateId={data.id}\r\n                                        />\r\n                                      )}\r\n                                    </button>\r\n                                  </li>\r\n                                  <li>\r\n                                    <button class=\"dropdown-item\" type=\"button\">\r\n                                      <MdCall /> +91 {data.mobileNumber}{\" \"}\r\n                                      <MdOutlineContentCopy\r\n                                        onClick={() =>\r\n                                          handleCopyNumber(data.mobileNumber)\r\n                                        }\r\n                                        className=\"ms-5\"\r\n                                      />\r\n                                    </button>\r\n                                  </li>\r\n                                  <li>\r\n                                    <button class=\"dropdown-item\" type=\"button\">\r\n                                      <FaWhatsapp /> +91 {data.whatsappNumber}{\" \"}\r\n                                      <MdOutlineContentCopy\r\n                                        onClick={() =>\r\n                                          handleCopyNumber(data.whatsappNumber)\r\n                                        }\r\n                                        className=\"ms-5\"\r\n                                      />\r\n                                    </button>\r\n                                  </li>\r\n                                  {/* <li>\r\n                                    <a\r\n                                      href={`${webConsoleBaseUrl}/waNotifications/customCandidateupdate.html?id=${data.id}&adminId=${adminId}`}\r\n                                      target=\"_blank\"\r\n                                      // className=\"nav-link\"\r\n                                      style={{\r\n                                        textDecoration: \"none\",\r\n                                        color: \"black\",\r\n                                      }}\r\n                                    >\r\n                                      <button\r\n                                        class=\"dropdown-item\"\r\n                                        type=\"button\"\r\n                                      >\r\n                                        <LiaUserEditSolid /> Edit Profile\r\n                                      </button>\r\n                                    </a>\r\n                                  </li> */}\r\n                                </ul>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"row mt-2 px-4 \">\r\n                    <div\r\n                      className={`col-sm-4 pb-4 rounded ${Candidatedetailstyle.personalDetails}`}\r\n                    >\r\n                      <div className=\"mt-2\">\r\n                        {\" \"}\r\n                        <h6>\r\n                          <b>Personal Details</b>\r\n                        </h6>\r\n                        <div\r\n                          className={`row ${Candidatedetailstyle.CanDetailsRow}`}\r\n                        >\r\n                          <div className=\"col-5\">\r\n                            <div style={{ lineHeight: \"2\" }}>Name </div>\r\n                            {/* <div style={{ lineHeight: \"2\" }}>Gender</div> */}\r\n                            {/* <div style={{ lineHeight: \"2\" }}>\r\n                              Current Location\r\n                            </div> */}\r\n                            <div style={{ lineHeight: \"2\" }}>Mobile Number</div>\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              Whatsapp Number\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-7\">\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {\" \"}\r\n                              {data.candidateName != null\r\n                                ? data.candidateName\r\n                                : \"-\"}\r\n                            </div>\r\n                            {/* <div style={{ lineHeight: \"2\" }}>\r\n                              {data.gender != null ? data.gender : \"-\"}\r\n                            </div> */}\r\n                            {/* <div style={{ lineHeight: \"2\" }}>\r\n                              {data.city != null ? data.city : \"-\"} ,{\" \"}\r\n                              {data.state != null ? data.state : \"-\"}\r\n                            </div> */}\r\n                            <div\r\n                              className=\"d-flex \"\r\n                              style={{ lineHeight: \"2\" }}\r\n                            >\r\n                              <div\r\n                                className={`me-3 ${Candidatedetailstyle.numbersstyle}`}\r\n                              >\r\n                                <img src={flag} alt=\"\" width={15} />{\" \"}\r\n                                <span>{data.mobileNumber} </span>\r\n                                <MdOutlineContentCopy\r\n                                  onClick={() =>\r\n                                    handleCopyNumber(data.mobileNumber)\r\n                                  }\r\n                                />\r\n                              </div>\r\n                              <div\r\n                                className={`${Candidatedetailstyle.Phonecall}`}\r\n                              >\r\n                                <MdCall />\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"d-flex\" style={{ lineHeight: \"2\" }}>\r\n                              <div\r\n                                className={`me-3 ${Candidatedetailstyle.Whatsapnumbersstyle}`}\r\n                              >\r\n                                <img src={WhatsappImage} alt=\"\" width={16} />\r\n                                <span>\r\n                                  {data.whatsappNumber\r\n                                    ? data.whatsappNumber.slice(-10)\r\n                                    : \"\"}\r\n                                </span>\r\n\r\n                                <MdOutlineContentCopy\r\n                                  onClick={() =>\r\n                                    handleCopyNumber(data.whatsappNumber)\r\n                                  }\r\n                                />\r\n                              </div>\r\n                              <div\r\n                                className={`${Candidatedetailstyle.Phonecall}`}\r\n                              >\r\n                                <FaWhatsapp\r\n                                  onClick={() =>\r\n                                    handleWhatsAppIconClick(data.whatsappNumber)\r\n                                  }\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mt-2\">\r\n                        <h6>\r\n                          <b>Education Details</b>\r\n                        </h6>\r\n                        <div\r\n                          className={`row ${Candidatedetailstyle.CanDetailsRow}`}\r\n                        >\r\n                          <div className=\"col-5\">\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {\" \"}\r\n                              Qualification\r\n                            </div>\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              Degree/Specialization\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-7\">\r\n                            {\" \"}\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {data.educationQualification != null\r\n                                ? data.educationQualification\r\n                                : \"-\"}{\" \"}\r\n                            </div>\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {data.specification != null\r\n                                ? data.specification\r\n                                : \"-\"}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mt-2\">\r\n                        <h6>\r\n                          <b>Work Details</b>\r\n                        </h6>\r\n                        <div\r\n                          className={`row ${Candidatedetailstyle.CanDetailsRow}`}\r\n                        >\r\n                          <div className=\"col-5\">\r\n                            <div style={{ lineHeight: \"2\" }}>Job Category </div>\r\n                            <div style={{ lineHeight: \"2\" }}>Industry</div>\r\n                            <div style={{ lineHeight: \"2\" }}>Experience</div>\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              Preferred Job City\r\n                            </div>\r\n                            {/* <div style={{ lineHeight: \"2\" }}>\r\n                              Preferred Job Area\r\n                            </div> */}\r\n                          </div>\r\n                          <div className=\"col-7\">\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {data.jobCategory != null\r\n                                ? data.jobCategory\r\n                                : \"-\"}{\" \"}\r\n                            </div>\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {data.industry != null ? data.industry : \"-\"}\r\n                            </div>\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {data.experience != null ? data.experience : \"-\"}\r\n                            </div>\r\n                            <div style={{ lineHeight: \"2\" }}>\r\n                              {data.preferredLocation != null\r\n                                ? data.preferredLocation\r\n                                : \"-\"}\r\n                            </div>\r\n                            {/* <div style={{ lineHeight: \"2\" }}>\r\n                              {data.prefArea != null ? data.prefArea : \"-\"}\r\n                            </div> */}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {/* <div className=\"mt-2\">\r\n                        <h6>\r\n                          <b>Other Details</b>\r\n                        </h6>\r\n                        <div\r\n                          className={`row ${Candidatedetailstyle.CanDetailsRow}`}\r\n                        >\r\n                          <div className=\"col-5\">\r\n                            <div>Key Skills</div>\r\n                          </div>\r\n                          <div className=\"col-7 \">\r\n                            <div>\r\n                              <div>\r\n                                {/* {data.keySkill} \r\n                                {keySkillsArray.map((skill, index) =>\r\n                                  skill && typeof skill === \"string\" ? (\r\n                                    <div\r\n                                      className={`${Candidatedetailstyle.KeySkills}`}\r\n                                      key={index}\r\n                                    >\r\n                                      {skill.trim()}\r\n                                    </div>\r\n                                  ) : null\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div> */}\r\n                      {isSuperAdmin && (\r\n                        <div className=\"mt-2\">\r\n                          <h6>\r\n                            <b>Admin Details</b>\r\n                          </h6>\r\n                          <div\r\n                            className={`row ${Candidatedetailstyle.CanDetailsRow}`}\r\n                          >\r\n                            <div className=\"col-5\">\r\n                              <div>Assigned To</div>\r\n                            </div>\r\n                            <div className=\"col-7\">\r\n                              <div>\r\n                                <Autocomplete\r\n                                  id=\"clear-on-escape\"\r\n                                  clearOnEscape\r\n                                  // disableClearable\r\n                                  onChange={(event, newValue) => {\r\n                                    if (newValue) {\r\n                                      const selectedAdminName = newValue;\r\n                                      if (\r\n                                        adminDetails &&\r\n                                        adminDetails.adminName &&\r\n                                        adminDetails.id &&\r\n                                        adminDetails.adminName.indexOf &&\r\n                                        adminDetails.id.indexOf\r\n                                      ) {\r\n                                        const adminNameIndex =\r\n                                          adminDetails.adminName.indexOf(\r\n                                            selectedAdminName\r\n                                          );\r\n                                        if (\r\n                                          adminNameIndex !== -1 &&\r\n                                          adminDetails.id[adminNameIndex] !==\r\n                                            undefined\r\n                                        ) {\r\n                                          const adminId =\r\n                                            adminDetails.id[adminNameIndex];\r\n                                          handleLeadAssignfromAdmin(\r\n                                            data.id,\r\n                                            adminId\r\n                                          );\r\n                                        } else {\r\n                                          // Handle the case where selectedAdminName is not found\r\n                                          console.error(\r\n                                            `Admin with name ${selectedAdminName} not found.`\r\n                                          );\r\n                                        }\r\n                                      } else {\r\n                                        // Handle the case where adminDetails or its properties are null\r\n                                        console.error(\r\n                                          \"Invalid adminDetails structure\"\r\n                                        );\r\n                                      }\r\n                                    }\r\n                                  }}\r\n                                  value={\r\n                                    adminDetails.adminName &&\r\n                                    adminDetails.id &&\r\n                                    adminDetails.adminName[\r\n                                      adminDetails.id.indexOf(data.assignTo)\r\n                                    ]\r\n                                  }\r\n                                  options={adminDetails.adminName}\r\n                                  renderInput={(params) => (\r\n                                    <TextField\r\n                                      {...params}\r\n                                      label=\"Assign to\"\r\n                                      variant=\"standard\"\r\n                                    />\r\n                                  )}\r\n                                />\r\n                              </div>\r\n                              {/* {!isSuperAdmin && (\r\n                              <div style={{ lineHeight: \"2\" }}>\r\n                                {adminDetails.adminName &&\r\n                                  adminDetails.id &&\r\n                                  adminDetails.adminName[\r\n                                    adminDetails.id.indexOf(data.assignTo)\r\n                                  ]}\r\n                              </div>\r\n                            )} */}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div\r\n                      className={` col-sm-8 rounded  ${Candidatedetailstyle.DailyDetailsupdate}`}\r\n                    >\r\n                      <div>\r\n                        <div\r\n                          className={`tab-buttons ${candidateTabsviewStyle.tab_buttons}`}\r\n                        >\r\n                          <div\r\n                            className={`d-flex ${candidateTabsviewStyle.tab_hr}`}\r\n                          >\r\n                            <div\r\n                              onClick={() => handleTabClick(1)}\r\n                              className={` ${\r\n                                activeTab === 1\r\n                                  ? candidateTabsviewStyle.activetag\r\n                                  : candidateTabsviewStyle.unactivetag\r\n                              } `}\r\n                            >\r\n                              TimeLine\r\n                            </div>\r\n                            <div\r\n                              onClick={() => handleTabClick(2)}\r\n                              className={` ${\r\n                                activeTab === 2\r\n                                  ? candidateTabsviewStyle.activetag\r\n                                  : candidateTabsviewStyle.unactivetag\r\n                              }`}\r\n                            >\r\n                              Notes\r\n                            </div>\r\n                            {/* <div\r\n                              onClick={() => handleTabClick(3)}\r\n                              className={` ${\r\n                                activeTab === 3\r\n                                  ? candidateTabsviewStyle.activetag\r\n                                  : candidateTabsviewStyle.unactivetag\r\n                              }`}\r\n                            >\r\n                              Calls\r\n                            </div> */}\r\n                            {/* <div\r\n                              onClick={() => handleTabClick(4)}\r\n                              className={` ${\r\n                                activeTab === 4\r\n                                  ? candidateTabsviewStyle.activetag\r\n                                  : candidateTabsviewStyle.unactivetag\r\n                              }`}\r\n                            >\r\n                              Files\r\n                            </div> */}\r\n                          </div>\r\n                          <hr style={{ borderTop: \"10px solid #ccc\" }} />\r\n                        </div>\r\n\r\n                        <div\r\n                          className={`tab-content ${candidateTabsviewStyle.tab_content}`}\r\n                        >\r\n                          {data.id && activeTab === 1 && (\r\n                            <p>\r\n                              <TimelineFacebookMeta facebookId={data.id} />\r\n                            </p>\r\n                          )}\r\n                          {data.id && activeTab === 2 && (\r\n                            <p>\r\n                              {/* <TimeLineForm canId={data.id} /> */}\r\n                              <Card\r\n                                style={{\r\n                                  maxWidth: 700,\r\n                                  minWidth: 350,\r\n                                  margin: \"0 auto\",\r\n                                }}\r\n                              >\r\n                                <CardContent>\r\n                                  <AddNotesFBLead\r\n                                    facebookId={data.id}\r\n\r\n                                    // close={() => {\r\n                                    //   showTimeLineDetails(\"addNotes\", false);\r\n                                    // }}\r\n                                  />\r\n                                </CardContent>\r\n                              </Card>\r\n                            </p>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {showConfirmationqualifiedPopup && (\r\n                <MyModal>\r\n                  <ModalContainer\r\n                    zIndex={1005}\r\n                    childComponent={\r\n                      <>\r\n                        <div>\r\n                          <div className=\"text-center mb-3\">\r\n                            Qualify Candidate\r\n                          </div>\r\n                          <TextField\r\n                            id=\"outlined-multiline-flexible\"\r\n                            label=\"Add Notes\"\r\n                            multiline\r\n                            required\r\n                            onChange={(event) => {\r\n                              setCanputLead((prev) => ({\r\n                                ...prev,\r\n                                notes: event.target.value,\r\n                              }));\r\n                            }}\r\n                            maxRows={4}\r\n                            fullWidth\r\n                          />\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-end gap-1 mt-4\">\r\n                          <button\r\n                            className=\"btn text-white me-3\"\r\n                            onClick={handleCancelClick}\r\n                            style={{ backgroundColor: \"#d00a0a\" }}\r\n                          >\r\n                            Cancel\r\n                          </button>\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn text-white\"\r\n                            onClick={ConfirmFormSubmit}\r\n                            disabled={enableSubmit}\r\n                            style={{ backgroundColor: \"#169C50\" }}\r\n                          >\r\n                            Qualify\r\n                          </button>\r\n                        </div>\r\n                      </>\r\n                    }\r\n                  />\r\n                </MyModal>\r\n              )}\r\n\r\n              {showConfirmationPopup && (\r\n                <MyModal>\r\n                  <ModalContainer\r\n                    zIndex={1005}\r\n                    childComponent={\r\n                      <>\r\n                        <div>\r\n                          <div className=\"text-center mb-3\">\r\n                            Disqualify Candidate\r\n                          </div>\r\n                          <TextField\r\n                            id=\"outlined-multiline-flexible\"\r\n                            label=\"Add Notes\"\r\n                            multiline\r\n                            required\r\n                            onChange={(event) => {\r\n                              setCanputLead((prev) => ({\r\n                                ...prev,\r\n                                notes: event.target.value,\r\n                              }));\r\n                            }}\r\n                            maxRows={4}\r\n                            fullWidth\r\n                          />\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-end gap-1 mt-4\">\r\n                          <button\r\n                            className=\"btn text-white me-3\"\r\n                            onClick={handleCancelClicknotqualify}\r\n                            style={{ backgroundColor: \"#d00a0a\" }}\r\n                          >\r\n                            Cancel\r\n                          </button>\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn text-white\"\r\n                            onClick={ConfirmFormSubmit}\r\n                            disabled={enableSubmit}\r\n                            style={{ backgroundColor: \"#169C50\" }}\r\n                          >\r\n                            Disqualify\r\n                          </button>\r\n                        </div>\r\n                      </>\r\n                    }\r\n                  />\r\n                </MyModal>\r\n              )}\r\n              {showSuccess && (\r\n                <MyModal>\r\n                  <ModalContainer\r\n                    zIndex={2000}\r\n                    childComponent={\r\n                      <SuccessTick HeadText=\"Successfully Updated\" />\r\n                    }\r\n                  />\r\n                </MyModal>\r\n              )}\r\n            </>\r\n          }\r\n        />\r\n      </Detailsshow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CandidateFBLeadDetailsview;\r\n","import {\r\n  Autocomplete,\r\n  FormControl,\r\n  InputLabel,\r\n  Menu,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { AiOutlineClose, AiOutlinePhone } from \"react-icons/ai\";\r\nimport {\r\n  GetAllsdminDetails,\r\n  getJobFilterOptions,\r\n} from \"../../../../apiServices\";\r\nimport { MyModal, addDaysToDate, dateFormate } from \"../../../../utility\";\r\nimport ModalContainer from \"../../../../components/modal_popup\";\r\nimport { IoMdClose } from \"react-icons/io\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CandidatePipelineActions } from \"../../../../redux-store/store\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction LeadPipelineFilter({ onclose }) {\r\n  let filterDetails = useSelector(\r\n    (state) => state.CandidatePipelineDetails.leadGenerationFilter\r\n  );\r\n\r\n  const [filterData, setFilterData] = useState({\r\n    mobileNumber: filterDetails.mobileNumber,\r\n    assignTo: filterDetails.assignTo,\r\n    profilePageNo: filterDetails.profilePageNo,\r\n    fromSource: filterDetails.fromSource,\r\n    jobCategory: filterDetails.jobCategory,\r\n    currentStatus: filterDetails.currentStatus,\r\n    dateFilterType: filterDetails.dateFilterType,\r\n    expYearsMax: filterDetails.expYearsMax,\r\n    expYearsMin: filterDetails.expYearsMin,\r\n    createdTimeStart: filterDetails.createdTimeStart,\r\n    createdTimeEnd: filterDetails.createdTimeEnd,\r\n    page: 0,\r\n    currentPipeline: filterDetails.currentPipeline,\r\n    pipelineStage: filterDetails.pipelineStage,\r\n    stages: filterDetails.stages,\r\n    // startDate: dateFormate(new Date()),\r\n    // endDate: dateFormate(new Date()),\r\n  });\r\n\r\n  const [adminList, setAdminList] = useState([]);\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const [showCustom, setshowCustom] = useState(false);\r\n\r\n  const [validationErrors, setValidationErrors] = useState({\r\n    start: false,\r\n    end: false,\r\n  });\r\n\r\n  const experience = [\r\n    {\r\n      value: \"0\",\r\n      label: \"0\",\r\n    },\r\n    {\r\n      value: \"1\",\r\n      label: \"1\",\r\n    },\r\n    {\r\n      value: \"2\",\r\n      label: \"2\",\r\n    },\r\n    {\r\n      value: \"3\",\r\n      label: \"3\",\r\n    },\r\n    {\r\n      value: \"4\",\r\n      label: \"4\",\r\n    },\r\n\r\n    {\r\n      value: \"5\",\r\n      label: \"5\",\r\n    },\r\n    {\r\n      value: \"6\",\r\n      label: \"6\",\r\n    },\r\n    {\r\n      value: \"7\",\r\n      label: \"7\",\r\n    },\r\n    {\r\n      value: \"8\",\r\n      label: \"8\",\r\n    },\r\n    {\r\n      value: \"9\",\r\n      label: \"9\",\r\n    },\r\n    {\r\n      value: \"10\",\r\n      label: \"10\",\r\n    },\r\n    {\r\n      value: \"11\",\r\n      label: \"11\",\r\n    },\r\n    {\r\n      value: \"12\",\r\n      label: \"12\",\r\n    },\r\n    {\r\n      value: \"13\",\r\n      label: \"13\",\r\n    },\r\n    {\r\n      value: \"14\",\r\n      label: \"14\",\r\n    },\r\n    {\r\n      value: \"15+\",\r\n      label: \"15+\",\r\n    },\r\n  ];\r\n\r\n  const Dispatch = useDispatch();\r\n\r\n  function handleCustomDate(value, type) {\r\n    const val = value.target.value;\r\n\r\n    if (type === \"startDate\") {\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        createdTimeStart: val,\r\n        dateFilterType: \"custom\",\r\n      }));\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        start: false,\r\n      }));\r\n    } else {\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        createdTimeEnd: val,\r\n        dateFilterType: \"custom\",\r\n      }));\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        end: false,\r\n      }));\r\n    }\r\n  }\r\n\r\n  const isFormValid = () => {\r\n    const isValid = filterData.createdTimeStart && filterData.createdTimeEnd;\r\n\r\n    if (!filterData.createdTimeStart) {\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        start: true,\r\n      }));\r\n    }\r\n\r\n    if (!filterData.createdTimeEnd) {\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        end: true,\r\n      }));\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n  const handleApplyCustomDate = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isFormValid()) {\r\n      // console.log(\"Form submitted:\", dateRange);\r\n      setValidationErrors({\r\n        start: false,\r\n        end: false,\r\n      });\r\n      setshowCustom(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = (val) => {\r\n    console.log(val);\r\n\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const [options, setOptions] = useState({\r\n    jobCategory: [],\r\n  });\r\n\r\n  const handleDateSelect = (val) => {\r\n    let selectedOption = val;\r\n    const today = new Date();\r\n    let endDate = new Date();\r\n    // endDate.setDate(endDate.getDate() + 1);\r\n    if (selectedOption === \"lastWeek\") {\r\n      const startDate = new Date();\r\n\r\n      startDate.setDate(today.getDate() - 7);\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last 1 Week\",\r\n        createdTimeStart: startDate.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"today\") {\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Today\",\r\n        createdTimeStart: today.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"lastMonth\") {\r\n      const startDate = new Date();\r\n      startDate.setMonth(startDate.getMonth() - 1);\r\n\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last Month\",\r\n        createdTimeStart: startDate.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"lastTwoWeeks\") {\r\n      const startDate = new Date(today);\r\n      startDate.setDate(today.getDate() - 13);\r\n\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last 2 Week\",\r\n        createdTimeStart: startDate.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"yesterday\") {\r\n      const startDate = new Date();\r\n      startDate.setDate(startDate.getDate() - 1);\r\n\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Yesterday\",\r\n        createdTimeStart: startDate.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"custom\") {\r\n      setshowCustom(true);\r\n      setAnchorEl(null);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getJobFilterOptions().then((data) => {\r\n      setOptions((prev) => ({\r\n        ...prev,\r\n        jobCategory: data\r\n          .filter((el) => el.category == \"job category\")\r\n          .map((el) => el.options),\r\n      }));\r\n    });\r\n    GetAllsdminDetails()\r\n      .then((data) => {\r\n        console.log(data);\r\n        const activeAdmins = data.filter((item) => !item.Deactived);\r\n        setAdminList(activeAdmins);\r\n      })\r\n      .catch(() => {\r\n        alert(\"Something Went wrong\");\r\n      });\r\n  }, []);\r\n\r\n  function handleFieldChange(field, value) {\r\n    switch (field) {\r\n      case \"mobileNumber\":\r\n        // Check if the value is numeric before updating the state\r\n        if (/^\\d*$/.test(value) || value === \"\") {\r\n          setFilterData((prev) => ({ ...prev, [field]: value }));\r\n        }\r\n        break;\r\n\r\n      default:\r\n        setFilterData((prev) => ({ ...prev, [field]: value }));\r\n        break;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    Dispatch(CandidatePipelineActions.setLeadGenerationFilter(filterData));\r\n  }, [filterData]);\r\n\r\n  function handleSubmit() {\r\n    Dispatch(CandidatePipelineActions.setLeadGenerationFilter(filterData));\r\n    onclose();\r\n    // console.log(CandidatePipelineActions.setLeadGenerationFilter(filterData));\r\n  }\r\n\r\n  function clearAllFilter() {\r\n    setFilterData({\r\n      mobileNumber: -1,\r\n      assignTo: localStorage.getItem(\"adminID\"),\r\n      profilePageNo: -1,\r\n      fromSource: \"\",\r\n      jobCategory: \"\",\r\n      currentStatus: \"\",\r\n      dateFilterType: \"\",\r\n      createdTimeStart: \"2020-01-01\",\r\n      createdTimeEnd: dateFormate(addDaysToDate(1)),\r\n      expYearsMax: -1,\r\n      expYearsMin: -1,\r\n      page: \"\",\r\n      currentPipeline: \"New candidate lead\",\r\n      pipelineStage: \"New leads\",\r\n      stages: 1,\r\n      // startDate: dateFormate(new Date()),\r\n      // endDate: dateFormate(new Date()),\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log(filterDetails);\r\n  }, [filterDetails]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"70vw\",\r\n      }}\r\n    >\r\n      <div className=\"d-flex justify-content-between \">\r\n        <span>\r\n          <p>\r\n            <b>Candidate Lead Filter</b>{\" \"}\r\n          </p>\r\n        </span>\r\n        <span\r\n          onClick={() => {\r\n            onclose();\r\n          }}\r\n          className=\"btn btn-danger\"\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          <AiOutlineClose style={{ fontSize: \"20px\" }} />\r\n        </span>\r\n      </div>\r\n      <div className=\"row my-3 \">\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Mobile number\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={filterData.mobileNumber == -1 ? \"\" : filterData.mobileNumber}\r\n            onChange={(event) =>\r\n              handleFieldChange(\"mobileNumber\", event.target.value)\r\n            }\r\n            inputProps={{ maxLength: 15 }}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <span\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <AiOutlinePhone style={{ marginRight: \"5px\" }} /> +91\r\n                </span>\r\n              ),\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            onChange={(e) => handleFieldChange(\"assignTo\", e.target.value)}\r\n            name=\"AssignedTo\"\r\n            id=\"AssignedTo\"\r\n            className=\"form-control\"\r\n            select\r\n            label=\"Assigned To\"\r\n            value={filterData.assignTo}\r\n            defaultValue={filterData.assignTo}\r\n          >\r\n            <MenuItem value={-1}>ALL</MenuItem>\r\n            {adminList.map((el) => (\r\n              <MenuItem key={el.id} value={el.id}>\r\n                {el.userName}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </div>\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            fullWidth\r\n            label=\"Stage\"\r\n            id=\"fullWidth\"\r\n            placeholder=\"Stage\"\r\n            select\r\n            name=\"profileNo\"\r\n            value={filterData.profilePageNo}\r\n            onChange={(event) =>\r\n              handleFieldChange(\"profilePageNo\", event.target.value)\r\n            }\r\n          >\r\n            <MenuItem value={-1}>ALL</MenuItem>\r\n            <MenuItem value={1}>1</MenuItem>\r\n            <MenuItem value={2}>2</MenuItem>\r\n            <MenuItem value={3}>3</MenuItem>\r\n            <MenuItem value={4}>4</MenuItem>\r\n            <MenuItem value={5}>5</MenuItem>\r\n            <MenuItem value={6}>6</MenuItem>\r\n          </TextField>\r\n        </div>\r\n      </div>\r\n      <div className=\"row my-3 \">\r\n        <div className=\"col-sm-4\">\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"select-label\">Source</InputLabel>\r\n            <Select\r\n              labelId=\"select-label\"\r\n              id=\"select\"\r\n              label=\"Select option\"\r\n              value={filterData.fromSource}\r\n              onChange={(event) =>\r\n                handleFieldChange(\"fromSource\", event.target.value)\r\n              }\r\n              // onChange={(e) => HandleCanlead(e, \"fromSource\")}\r\n            >\r\n              <MenuItem value={\"\"}>ALL</MenuItem>\r\n              <MenuItem value=\"Retention\">Old lead</MenuItem>\r\n              <MenuItem value=\"Reference\">Reference</MenuItem>\r\n              <MenuItem value=\"Whatsapp\">Whatsapp</MenuItem>\r\n              <MenuItem value=\"App\">App</MenuItem>\r\n              <MenuItem value=\"Meta lead\">Meta lead</MenuItem>\r\n              <MenuItem value=\"Naukri\">Naukri</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div className=\"col-sm-4\">\r\n          <Autocomplete\r\n            id=\"tags-outlined\"\r\n            options={options.jobCategory.map((option) => option)}\r\n            fullWidth\r\n            getOptionLabel={(option) => option}\r\n            // onChange={(event, value) => {\r\n            //   updateJobCategory(value);\r\n            //   console.log(value, \"value jobs\");\r\n            // }}\r\n\r\n            value={filterData.jobCategory}\r\n            onChange={(event, value, reason) => {\r\n              if (reason === \"clear\") {\r\n                handleFieldChange(\"jobCategory\", \"\");\r\n              } else {\r\n                handleFieldChange(\"jobCategory\", value);\r\n              }\r\n            }}\r\n            filterSelectedOptions\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Job category\"\r\n                placeholder=\"Job category\"\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className=\"col-sm-4\">\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <TextField\r\n              label=\"Created on\"\r\n              id=\"basic-button\"\r\n              value={`${filterData.dateFilterType}`}\r\n              // value={`${dateRange.start} - ${dateRange.end}`}\r\n              aria-controls={open ? \"basic-menu\" : undefined}\r\n              aria-haspopup=\"true\"\r\n              aria-expanded={open ? \"true\" : undefined}\r\n              onClick={handleClick}\r\n            ></TextField>\r\n            <Menu\r\n              id=\"basic-menu\"\r\n              anchorEl={anchorEl}\r\n              open={open}\r\n              onClose={handleClose}\r\n              fullWidth\r\n              MenuListProps={{\r\n                \"aria-labelledby\": \"basic-button\",\r\n              }}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"today\");\r\n                }}\r\n                style={{ width: \"180px\" }}\r\n              >\r\n                Today\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"yesterday\");\r\n                }}\r\n              >\r\n                Yesterday\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"lastWeek\");\r\n                }}\r\n              >\r\n                Last 1 Week\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"lastTwoWeeks\");\r\n                }}\r\n              >\r\n                Last 2 Week\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"lastMonth\");\r\n                }}\r\n              >\r\n                Last Month\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"custom\");\r\n                }}\r\n              >\r\n                Custom Date\r\n              </MenuItem>\r\n            </Menu>\r\n          </FormControl>\r\n          {showCustom && (\r\n            <MyModal>\r\n              <ModalContainer\r\n                zIndex={1005}\r\n                childComponent={\r\n                  <div\r\n                    style={{\r\n                      minWidth: \"400px\",\r\n                      width: \"auto\",\r\n                    }}\r\n                  >\r\n                    <>\r\n                      <div>\r\n                        <form>\r\n                          <p className=\"text-center \">Select Custom Date </p>\r\n                          <div className=\"mt-2\">\r\n                            <label htmlFor=\"start\">From</label>\r\n                            <input\r\n                              className={`form-control ${\r\n                                validationErrors.start ? \"is-invalid\" : \"\"\r\n                              }`}\r\n                              style={{ width: \"100%\" }}\r\n                              type=\"date\"\r\n                              id=\"start\"\r\n                              onChange={(value) =>\r\n                                handleCustomDate(value, \"startDate\")\r\n                              }\r\n                              value={filterData.createdTimeStart}\r\n                              name=\"trip-start\"\r\n                              min=\"2020-01-01\"\r\n                              max={new Date().toISOString().split(\"T\")[0]}\r\n                            />\r\n                            {validationErrors.start && (\r\n                              <div className=\"invalid-feedback\">\r\n                                Start date is required.\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"mt-2\">\r\n                            <label htmlFor=\"end\">To</label>\r\n                            <input\r\n                              className={`form-control ${\r\n                                validationErrors.end ? \"is-invalid\" : \"\"\r\n                              }`}\r\n                              value={filterData.createdTimeEnd}\r\n                              style={{ width: \"100%\" }}\r\n                              type=\"date\"\r\n                              id=\"end\"\r\n                              onChange={(value) =>\r\n                                handleCustomDate(value, \"endDate\")\r\n                              }\r\n                              name=\"trip-end\"\r\n                              min=\"2020-01-01\"\r\n                              max={new Date().toISOString().split(\"T\")[0]}\r\n                            />\r\n                            {validationErrors.end && (\r\n                              <div className=\"invalid-feedback\">\r\n                                End date is required.\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-end mt-3 \">\r\n                            <button\r\n                              onClick={() => {\r\n                                setValidationErrors({\r\n                                  start: false,\r\n                                  end: false,\r\n                                });\r\n                                setshowCustom(false);\r\n                              }}\r\n                              style={{\r\n                                backgroundColor: \"#b2261c\",\r\n                              }}\r\n                              className=\"btn rounded-pill text-white px-4  me-2\"\r\n                            >\r\n                              Close\r\n                            </button>\r\n                            <button\r\n                              onClick={handleApplyCustomDate}\r\n                              // color=\"primary\"\r\n                              className=\"btn rounded-pill text-white px-4\"\r\n                              style={{\r\n                                backgroundColor: \"#169C50\",\r\n                              }}\r\n                            >\r\n                              Apply\r\n                            </button>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </>\r\n                  </div>\r\n                }\r\n              />\r\n            </MyModal>\r\n          )}\r\n        </div>\r\n        {/* <div className=\"col-sm-4\">\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"select-label\">Status</InputLabel>\r\n            <Select\r\n              labelId=\"select-label\"\r\n              id=\"select\"\r\n              label=\"Select option\"\r\n              value={filterData.status}\r\n              onChange={(event) =>\r\n                handleFieldChange(\"currentStatus\", event.target.value)\r\n              }\r\n            >\r\n              <MenuItem value=\"\">ALL</MenuItem>\r\n              <MenuItem value=\"Qualified\">Qualified</MenuItem>\r\n              <MenuItem value=\"NotQualified\">Not Qualified</MenuItem>\r\n              <MenuItem value=\"CallNotAttend\">Not Attend</MenuItem>\r\n              <MenuItem value=\"nostatus\">No Status</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div> */}\r\n      </div>\r\n\r\n      <div className=\"row my-3 \">\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            onChange={(event) =>\r\n              handleFieldChange(\"expYearsMin\", event.target.value)\r\n            }\r\n            value={filterData.expYearsMin}\r\n            name=\"experience\"\r\n            id=\"experience\"\r\n            className=\"form-control\"\r\n            select\r\n            label=\"Min experience\"\r\n          >\r\n            {experience.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </div>\r\n\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            onChange={(event) =>\r\n              handleFieldChange(\"expYearsMax\", event.target.value)\r\n            }\r\n            value={filterData.expYearsMax}\r\n            name=\"experience\"\r\n            id=\"experience\"\r\n            className=\"form-control\"\r\n            select\r\n            label=\"Max experience\"\r\n          >\r\n            {experience.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex justify-content-end flex-row\">\r\n        <button onClick={clearAllFilter} className=\"btn btn-danger mx-2\">\r\n          Clear\r\n        </button>\r\n        <button onClick={handleSubmit} className=\"btn btn-success\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LeadPipelineFilter;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-redeclare */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport style from \"../pipeline.module.scss\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport { Autocomplete, Pagination, TextField } from \"@mui/material\";\r\nimport greengif from \"../../../../assets/images/imgpsh_fullsize_anim (1).gif\";\r\nimport { FaFilter, FaPlus } from \"react-icons/fa\";\r\nimport accordionstyle from \"../../../Candidate/CandidateQualifyForm/QualifyForm.module.scss\";\r\nimport {\r\n  GetCanLeadPipeline,\r\n  GetCandidatePipeline,\r\n  GetCandidateQualifyDetials,\r\n  GetNotAttendEvent,\r\n  PutCandidateType,\r\n  PutMetaLeadAssignToAdmin,\r\n  UpdateCanPipelineStatus,\r\n  getCandidateLead,\r\n  getcandidateDetails,\r\n} from \"../../../../apiServices\";\r\nimport {\r\n  MyModal,\r\n  addDaysToDate,\r\n  dateFormate,\r\n  dateAndTimeFormate,\r\n  dateAndTimeHHMMSS,\r\n  getCurrentDateTime,\r\n  addHoursAndMinutesToDate,\r\n} from \"../../../../utility\";\r\nimport ModalContainer from \"../../../../components/modal_popup\";\r\nimport {\r\n  CandidatePipelineActions,\r\n  commonPopupActions,\r\n} from \"../../../../redux-store/store\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport LeadPipelineFilter from \"./LeadPipelineFilter\";\r\nimport { useSelector } from \"react-redux\";\r\nimport QualifyFresherform from \"../../../Candidate/CandidateQualifyForm/FresherForm\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport ExperienceForm from \"../../../Candidate/CandidateQualifyForm/ExperienceForm\";\r\nimport SuccessTick from \"../../../../components/success_tick\";\r\nimport { IoMdClose } from \"react-icons/io\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { TfiImport } from \"react-icons/tfi\";\r\nimport { HiOutlineRefresh } from \"react-icons/hi\";\r\nimport CandidateLead from \"../../../Candidate/CandidateLeadTable/CandidateLeadPostForm\";\r\n\r\nfunction LeadGenerationPipeline() {\r\n  const [leadData, setLeadData] = useState({\r\n    data: [],\r\n  });\r\n\r\n  let filterDetails = useSelector(\r\n    (state) => state.CandidatePipelineDetails.leadGenerationFilter\r\n  );\r\n  let filterDetailscandidate = useSelector(\r\n    (state) => state.CandidatePipelineDetails.candidateFilter\r\n  );\r\n  let refreshPage = useSelector(\r\n    (state) => state.CandidatePipelineDetails.refreshCountIncrement\r\n  );\r\n  const adminDetails = useSelector((state) => state.adminDetails);\r\n  let isSuperAdmin = adminDetails.roleID == 1;\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [leadQualifyFormOpen, setLeadQualifyFormOpen] = useState(false);\r\n  const [enableSubmit, setenableSubmit] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  const [leadDetails, setleadDetails] = useState(\"\");\r\n  const [showSuccessForm, setshowSuccessForm] = useState(\"\");\r\n  const [popups, setShowPopups] = useState({\r\n    PopupAddCanLead: false,\r\n    callRemainder: false,\r\n    success: false,\r\n    confirmation: false,\r\n    notAttendConfiramtion: false,\r\n  });\r\n  const [showLoader, setShowLoader] = useState(false);\r\n  const [isRotating, setIsRotating] = useState(false);\r\n  const [date, setDate] = React.useState(new Date());\r\n  const [callRemainder, setCallRemainder] = useState({\r\n    notes: \"\",\r\n    date: null,\r\n  });\r\n  const [notAttendEventArray, setNotAttendEventArray] = useState([]);\r\n  const [notAttendEvent, setNotAttendEvent] = useState(\"\");\r\n  const [eventError, setEventError] = useState(\"\");\r\n  const [showRedDot, setShowRedDot] = useState(false);\r\n  const [dateTimeError, setDateTimeError] = useState(false);\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const Dispatch = useDispatch();\r\n  const currentDate = new Date();\r\n  currentDate.setSeconds(0);\r\n  currentDate.setMilliseconds(0);\r\n\r\n  const maxDate = new Date(currentDate.getTime() + 7 * 24 * 60 * 60 * 1000);\r\n\r\n  const handleCandidateDetails = async (candidateleadId, type) => {\r\n    let data;\r\n    if (type === \"CandidateLead\") {\r\n      data = await getCandidateLead(candidateleadId);\r\n    } else if (type === \"RegisterCandidate\") {\r\n      data = await getcandidateDetails(candidateleadId);\r\n    }\r\n\r\n    // Dispatch action to show the popup and pass the fetched data\r\n    Dispatch(\r\n      commonPopupActions.setShowPopup({\r\n        name: \"candidateDetails\",\r\n        id: candidateleadId,\r\n        type: type,\r\n        data: data,\r\n      })\r\n    );\r\n  };\r\n\r\n  async function fetchData() {\r\n    setIsRotating(true);\r\n    let data = await GetCanLeadPipeline(filterDetails);\r\n\r\n    if (data.status) {\r\n      if (isSuperAdmin) {\r\n        // Show all data if the user is a SuperAdmin\r\n        setLeadData(data);\r\n      } else {\r\n        // Show only the first element if the user is not a SuperAdmin\r\n        let firstData = data.data.shift();\r\n        setLeadData((prev) => ({ ...prev, data: [firstData] }));\r\n      }\r\n      setTotalCount(data.totalElements);\r\n    } else {\r\n      setLeadData({\r\n        data: [],\r\n      });\r\n      setTotalCount(0);\r\n    }\r\n    setTimeout(() => {\r\n      setIsRotating(false);\r\n    }, 1000);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    setShowRedDot(ShowRedDot(initialFilterObj, filterDetails));\r\n  }, [filterDetails, refreshPage]);\r\n\r\n  let initialFilterObj = {\r\n    mobileNumber: -1,\r\n    assignTo: localStorage.getItem(\"adminID\"),\r\n    profilePageNo: -1,\r\n    fromSource: \"\",\r\n    jobCategory: \"\",\r\n    currentStatus: \"\",\r\n    dateFilterType: \"\",\r\n    createdTimeStart: \"2020-01-01\",\r\n    createdTimeEnd: dateFormate(addDaysToDate(1)),\r\n    expYearsMax: -1,\r\n    expYearsMin: -1,\r\n    page: \"\",\r\n    stages: 1,\r\n    currentPipeline: \"New candidate lead\",\r\n    pipelineStage: \"New leads\",\r\n  };\r\n\r\n  function ShowRedDot(obj1, obj2) {\r\n    // Omitting the 'page' key from both objects\r\n    const obj1WithoutPage = { ...obj1 };\r\n    delete obj1WithoutPage.page;\r\n\r\n    const obj2WithoutPage = { ...obj2 };\r\n    delete obj2WithoutPage.page;\r\n    for (let key in obj1WithoutPage) {\r\n      if (obj1WithoutPage.hasOwnProperty(key)) {\r\n        if (obj1WithoutPage[key] !== obj2WithoutPage[key]) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function handleOpenQualifyForm() {\r\n    setLeadQualifyFormOpen(true);\r\n    GetCandidateQualifyDetials(leadDetails.mobileNumber)\r\n      .then((data) => {\r\n        if (data && data.canLeadDetails) {\r\n          setSelectedOption(\r\n            data.canLeadDetails?.experienced === true ? \"experience\" : \"fresher\"\r\n          );\r\n        } else {\r\n          console.error(\"CanLeadDetails not available in data:\", data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching candidate details:\", error);\r\n      });\r\n  }\r\n  const handleOptionChange = (event) => {\r\n    const selectedValue = event.target.value;\r\n    setSelectedOption(selectedValue);\r\n\r\n    let experiencedValue = false;\r\n    if (selectedValue === \"experience\") {\r\n      experiencedValue = true;\r\n    }\r\n\r\n    PutCandidateType(experiencedValue, leadDetails.mobileNumber, \"\").then(\r\n      (data) => {\r\n        console.log(\r\n          \"Data Format\",\r\n          data,\r\n          \"mobile number \",\r\n          leadDetails.mobileNumber\r\n        );\r\n      }\r\n    );\r\n  };\r\n  function handleCloseQualifyForm() {\r\n    setSelectedOption(\"\");\r\n    setLeadQualifyFormOpen(false);\r\n    fetchData();\r\n  }\r\n  async function candidateDetils() {\r\n    try {\r\n      const data = await GetCandidatePipeline(filterDetailscandidate);\r\n\r\n      const firstCandidate = data.data.length > 0 ? data.data[0] : null;\r\n\r\n      console.log(firstCandidate, \"firstCandidate\");\r\n\r\n      if (firstCandidate) {\r\n        // const { candidateleadId, type } = firstCandidate;\r\n        handleCandidateDetails(firstCandidate.id, \"RegisterCandidate\");\r\n\r\n        Dispatch(CandidatePipelineActions.setRefreshCount());\r\n      } else {\r\n        console.log(\"No candidates found in the data.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching candidate pipeline data:\", error);\r\n    }\r\n  }\r\n  function handleQualifyFormSubmit() {\r\n    setshowSuccessForm(true);\r\n\r\n    setTimeout(() => {\r\n      setshowSuccessForm(false);\r\n      setSelectedOption(\"\");\r\n      setLeadQualifyFormOpen(false);\r\n    }, 1000);\r\n\r\n    fetchData();\r\n    // candidateDetils();\r\n    getMetaLead();\r\n  }\r\n  function handleQualifyFormSubmitupdate() {\r\n    setshowSuccessForm(true);\r\n\r\n    setTimeout(() => {\r\n      setshowSuccessForm(false);\r\n      setSelectedOption(\"\");\r\n      setLeadQualifyFormOpen(false);\r\n    }, 1000);\r\n\r\n    fetchData();\r\n    //  candidateDetils();\r\n    getMetaLead();\r\n  }\r\n\r\n  function paginationChange(event, page) {\r\n    Dispatch(\r\n      CandidatePipelineActions.setPageChange({\r\n        type: \"leadGenerationFilter\",\r\n        value: page - 1,\r\n      })\r\n    );\r\n  }\r\n\r\n  function handleCallRemainder(value) {\r\n    setShowPopups((prev) => ({ ...prev, callRemainder: value }));\r\n  }\r\n  function handleCallNotAttend(value) {\r\n    setShowPopups((prev) => ({ ...prev, notAttendConfiramtion: value }));\r\n  }\r\n  function showNotQualify(value) {\r\n    setShowPopups((prev) => ({ ...prev, confirmation: value }));\r\n  }\r\n\r\n  // function handleCallRemainderChange(name, value) {\r\n  //   if (name === \"date\" && value instanceof Date) {\r\n  //     // Extract the date value in the required format\r\n  //     const formattedDate = dateFormate(value.toISOString()); // or any other format that suits your backend\r\n  //     setCallRemainder((prev) => ({ ...prev, [name]: formattedDate }));\r\n  //   } else {\r\n  //     setCallRemainder((prev) => ({ ...prev, [name]: value }));\r\n  //   }\r\n  // }\r\n\r\n  // function submitCallRemainder(e) {\r\n  //   e.preventDefault();\r\n  //   let obj = {\r\n  //     callRemainder: dateFormate(callRemainder.date),\r\n  //     notes: callRemainder.notes,\r\n  //     id: leadDetails.id,\r\n  //   };\r\n  //   setShowLoader(true);\r\n  //   UpdateCanPipelineStatus(obj).then((res) => {\r\n  //     setShowLoader(false);\r\n  //     handleCallRemainder(false);\r\n  //     setCallRemainder({\r\n  //       notes: \"\",\r\n  //       date: \"\",\r\n  //     });\r\n  //     Dispatch(CandidatePipelineActions.setRefreshCount());\r\n  //     getMetaLead();\r\n  //   });\r\n  // }\r\n\r\n  function handleCallRemainderChange(name, value) {\r\n    console.log(value, \"date formate\");\r\n    if (name === \"date\") {\r\n      setDateTimeError(false);\r\n      setCallRemainder((prev) => ({ ...prev, [name]: value }));\r\n    } else {\r\n      setCallRemainder((prev) => ({ ...prev, [name]: value }));\r\n    }\r\n  }\r\n\r\n  function submitCallRemainder(e) {\r\n    e.preventDefault();\r\n    if (!callRemainder.date || !callRemainder.notes) {\r\n      setDateTimeError(!callRemainder.date);\r\n      return;\r\n    }\r\n    setenableSubmit(true);\r\n    let obj = {\r\n      callRemainder:\r\n        callRemainder.date instanceof Date\r\n          ? callRemainder.date.toISOString().split(\"T\").join(\" \")\r\n          : callRemainder.date.split(\"T\").join(\" \"),\r\n      notes: callRemainder.notes,\r\n      id: leadDetails.id,\r\n    };\r\n    setShowLoader(true);\r\n    UpdateCanPipelineStatus(obj)\r\n      .then((res) => {\r\n        setShowLoader(false);\r\n        handleCallRemainder(false);\r\n        setenableSubmit(false);\r\n        handleCallRemainderChange(\"date\", \"\"); // Reset date after successful submission\r\n        setCallRemainder({\r\n          notes: \"\",\r\n          date: \"\", // Reset date in state after submission\r\n        });\r\n        Dispatch(CandidatePipelineActions.setRefreshCount());\r\n        getMetaLead();\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error submitting call remainder:\", error);\r\n        setShowLoader(false);\r\n        // Handle error state or message display\r\n      });\r\n  }\r\n  const formattedDateTime = getCurrentDateTime();\r\n  console.log(formattedDateTime, \"CurrentDateandTime\");\r\n\r\n  function submitNotQualified(e) {\r\n    e.preventDefault();\r\n    if (!callRemainder.notes) {\r\n      // setDateTimeError(!callRemainder.date);\r\n      return;\r\n    }\r\n    setenableSubmit(true);\r\n    let obj = {\r\n      notQualified: true,\r\n      notes: callRemainder.notes,\r\n      date: formattedDateTime,\r\n      id: leadDetails.id,\r\n    };\r\n    UpdateCanPipelineStatus(obj).then(() => {\r\n      showNotQualify(false);\r\n      setenableSubmit(false);\r\n      setCallRemainder({\r\n        notes: \"\",\r\n      });\r\n      Dispatch(CandidatePipelineActions.setRefreshCount());\r\n      getMetaLead();\r\n    }, []);\r\n  }\r\n  function submitNotAttend() {\r\n    if (notAttendEvent === \"\") {\r\n      setEventError(\"Please select an event.\");\r\n      return;\r\n    }\r\n    setenableSubmit(true);\r\n    let obj = {\r\n      notAttend: true,\r\n      event: notAttendEvent,\r\n      date: formattedDateTime,\r\n      id: leadDetails.id,\r\n    };\r\n    UpdateCanPipelineStatus(obj).then(() => {\r\n      handleCallNotAttend(false);\r\n      setenableSubmit(false);\r\n      setNotAttendEvent(\"\");\r\n      Dispatch(CandidatePipelineActions.setRefreshCount());\r\n      getMetaLead();\r\n    }, []);\r\n  }\r\n\r\n  function getMetaLead() {\r\n    PutMetaLeadAssignToAdmin().then((res) => {\r\n      Dispatch(CandidatePipelineActions.setRefreshCount());\r\n    });\r\n  }\r\n\r\n  function ShowRedDot(obj1, obj2) {\r\n    // Omitting the 'page' key from both objects\r\n    const obj1WithoutPage = { ...obj1 };\r\n    delete obj1WithoutPage.page;\r\n\r\n    const obj2WithoutPage = { ...obj2 };\r\n    delete obj2WithoutPage.page;\r\n    for (let key in obj1WithoutPage) {\r\n      if (obj1WithoutPage.hasOwnProperty(key)) {\r\n        if (obj1WithoutPage[key] !== obj2WithoutPage[key]) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  useEffect(() => {\r\n    GetNotAttendEvent().then((data) => {\r\n      console.log(data, \"status\");\r\n      setNotAttendEventArray(data);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className={`${style.pipelineContainer} mx-2`}>\r\n      <div className={`${style.headerCard} p-2 d-flex justify-content-between`}>\r\n        <div>\r\n          <b>Candidate Lead ({totalCount}) </b>\r\n        </div>\r\n        <div className=\"mt-0\">\r\n          <div className=\"d-inline-block \">\r\n            <span\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => {\r\n                getMetaLead();\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <TfiImport />\r\n            </span>\r\n          </div>{\" \"}\r\n          <div className=\"d-inline-block mx-2\">\r\n            <span\r\n              // style={{ cursor: \"pointer\", color: \"#858585\" }}\r\n              onClick={() => {\r\n                setShowPopups({\r\n                  PopupAddCanLead: true,\r\n                });\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <FaPlus className={style.faplus} />\r\n            </span>\r\n          </div>{\" \"}\r\n          <div className=\"d-inline-block\">\r\n            <span\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => {\r\n                fetchData();\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <HiOutlineRefresh\r\n                className={`${\r\n                  isRotating ? style.refreshRotate : style.refreshcolor\r\n                }`}\r\n              />\r\n            </span>\r\n          </div>{\" \"}\r\n          <div\r\n            onClick={() => {\r\n              setShowFilter(true);\r\n            }}\r\n            className=\"d-inline-block mx-2 \"\r\n            style={{ cursor: \"pointer\", color: \"#858585\" }}\r\n          >\r\n            <FaFilter />\r\n            <p\r\n              style={{\r\n                backgroundColor: showRedDot ? \"red\" : \"transparent\",\r\n                width: \"9px\",\r\n                height: \"9px\",\r\n                marginTop: \"-12px\",\r\n                zIndex: 1000,\r\n                marginLeft: \"10px\",\r\n                borderRadius: \"50%\",\r\n              }}\r\n            ></p>{\" \"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`${style.bodyContainer}`}>\r\n        {leadData.data.map((el) => (\r\n          <div\r\n            key={el.id}\r\n            onClick={() => {\r\n              setleadDetails(el);\r\n            }}\r\n          >\r\n            <div className={`${style.bodyCard}  `}>\r\n              <div className={`${style.textContent} p-1 `}>\r\n                <div className=\"d-flex justify-content-between\">\r\n                  {\" \"}\r\n                  <div\r\n                    onClick={() => {\r\n                      handleCandidateDetails(el.id, \"CandidateLead\");\r\n                    }}\r\n                    style={{ cursor: \"pointer\" }}\r\n                    className={style.candidateName}\r\n                  >\r\n                    <b>\r\n                      {el.name ? el.name : \"-\"} {el.lastName ? el.lastName : \"\"}\r\n                    </b>\r\n                  </div>{\" \"}\r\n                  <div>\r\n                    <>\r\n                      {dateFormate(el.createdTime) ===\r\n                      dateFormate(new Date()) ? (\r\n                        <div className=\"d-flex align-items-center justify-content-center\">\r\n                          <img\r\n                            src={greengif}\r\n                            alt=\"\"\r\n                            className=\"\"\r\n                            width={\"40px\"}\r\n                            height={\"25px\"}\r\n                            style={{ marginTop: \"2.3px\" }}\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <span>\r\n                          {(() => {\r\n                            const differenceDays = Math.floor(\r\n                              (new Date().getTime() -\r\n                                new Date(\r\n                                  dateFormate(el.createdTime)\r\n                                ).getTime()) /\r\n                                (1000 * 60 * 60 * 24)\r\n                            );\r\n\r\n                            const daysAgo = Math.abs(differenceDays);\r\n                            if (daysAgo === 1) {\r\n                              return (\r\n                                <b style={{ fontSize: \"12px\" }}>Yesterday</b>\r\n                              );\r\n                            } else {\r\n                              return (\r\n                                <>\r\n                                  {\" \"}\r\n                                  <b style={{ fontSize: \"12px\" }}>\r\n                                    {daysAgo} days ago\r\n                                  </b>\r\n                                </>\r\n                              );\r\n                            }\r\n                          })()}\r\n                        </span>\r\n                      )}\r\n                    </>\r\n                  </div>\r\n                </div>\r\n                {el.jobCategory ? el.jobCategory : \"-\"}\r\n                <br />\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <div>{el.mobileNumber ? el.mobileNumber : \"-\"}</div>\r\n                  <b\r\n                    style={{\r\n                      border: \"1px solid yellow\",\r\n                      backgroundColor: \"lightyellow\",\r\n                      fontSize: \"10px\",\r\n                      borderRadius: \"8px\",\r\n                      marginRight: \"18px\",\r\n                      padding: \"4px\",\r\n                    }}\r\n                  >\r\n                    {el.fromSource === \"Retention\"\r\n                      ? \"Old lead\"\r\n                      : el.fromSource === null\r\n                      ? \"Meta lead\"\r\n                      : el.fromSource}\r\n                  </b>\r\n                </div>\r\n              </div>\r\n              <div\r\n                style={{ marginTop: \"-20px\" }}\r\n                className=\"d-flex justify-content-end\"\r\n              >\r\n                <div>\r\n                  <div className=\"dropdown\">\r\n                    <span\r\n                      style={{ cursor: \"pointer\" }}\r\n                      id=\"dropdownMenuButton1\"\r\n                      data-bs-toggle=\"dropdown\"\r\n                      aria-expanded=\"false\"\r\n                    >\r\n                      <BsThreeDotsVertical />\r\n                    </span>\r\n                    <ul\r\n                      className=\"dropdown-menu\"\r\n                      aria-labelledby=\"dropdownMenuButton1\"\r\n                    >\r\n                      <li\r\n                        onClick={() => {\r\n                          handleOpenQualifyForm();\r\n                        }}\r\n                      >\r\n                        <a className=\"dropdown-item\" href=\"#\">\r\n                          Qualified\r\n                        </a>\r\n                      </li>\r\n                      <li>\r\n                        <a\r\n                          onClick={() => {\r\n                            showNotQualify(true);\r\n                          }}\r\n                          className=\"dropdown-item\"\r\n                          href=\"#\"\r\n                        >\r\n                          Not Qualified\r\n                        </a>\r\n                      </li>\r\n                      <li>\r\n                        <a\r\n                          onClick={() => {\r\n                            handleCallNotAttend(true);\r\n                          }}\r\n                          className=\"dropdown-item\"\r\n                          href=\"#\"\r\n                        >\r\n                          Not Attend\r\n                        </a>\r\n                      </li>\r\n                      <li>\r\n                        <a\r\n                          onClick={() => {\r\n                            handleCallRemainder(true);\r\n                          }}\r\n                          className=\"dropdown-item\"\r\n                          href=\"#\"\r\n                        >\r\n                          Call Remainder\r\n                        </a>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"mt-3 d-grid justify-content-center\">\r\n        <Pagination\r\n          // variant=\"outlined\"\r\n          shape=\"rounded\"\r\n          color=\"success\"\r\n          boundaryCount={1}\r\n          siblingCount={0}\r\n          onChange={paginationChange}\r\n          count={leadData.totalPages}\r\n          size=\"small\"\r\n        />\r\n      </div>\r\n\r\n      {showFilter && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            // zIndex={2}\r\n            childComponent={\r\n              <>\r\n                <LeadPipelineFilter\r\n                  onclose={() => {\r\n                    setShowFilter(false);\r\n                  }}\r\n                />\r\n              </>\r\n            }\r\n          />\r\n        </MyModal>\r\n      )}\r\n\r\n      {leadQualifyFormOpen && (\r\n        <>\r\n          <MyModal>\r\n            <ModalContainer\r\n              childComponent={\r\n                <>\r\n                  <div\r\n                    className={`container d-flex align-itmes-center justify-content-between`}\r\n                  >\r\n                    <div className=\"\">\r\n                      <p>\r\n                        <b>Candidate lead qualify form</b>\r\n                      </p>\r\n                      <div className=\"d-flex\">\r\n                        {\" \"}\r\n                        <div className={`me-2  ${accordionstyle.radioInput}`}>\r\n                          {/* <label className=\"form-check-label me-3\"> */}\r\n                          <input\r\n                            type=\"radio\"\r\n                            name=\"fresher\"\r\n                            id=\"fresherYes\"\r\n                            value=\"fresher\"\r\n                            className={`form-check-input `}\r\n                            checked={selectedOption === \"fresher\"}\r\n                            onChange={handleOptionChange}\r\n                          />\r\n                          <label for=\"fresherYes\">Fresher</label>\r\n                          {/* </label> */}\r\n                        </div>\r\n                        <div className={`me-2  ${accordionstyle.radioInput}`}>\r\n                          <label className=\"form-check-label\">\r\n                            <input\r\n                              type=\"radio\"\r\n                              name=\"experience\"\r\n                              id=\"experienceNo\"\r\n                              value=\"experience\"\r\n                              className={`form-check-input `}\r\n                              checked={selectedOption === \"experience\"}\r\n                              onChange={handleOptionChange}\r\n                            />\r\n                            <label for=\"experienceNo\">Experience</label>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"ms-5\">\r\n                      <div\r\n                        className=\"btn btn-outline-danger\"\r\n                        onClick={handleCloseQualifyForm}\r\n                      >\r\n                        <AiOutlineClose />{\" \"}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <div>\r\n                      {selectedOption === \"fresher\" ? (\r\n                        <>\r\n                          {/* <div className={`${accordionstyle.Container}`}> */}{\" \"}\r\n                          <QualifyFresherform\r\n                            mobilenumber={leadDetails.mobileNumber}\r\n                            whatsappNumber={leadDetails.whatsappNumber}\r\n                            Reloadpage={handleQualifyFormSubmit}\r\n                          />\r\n                          {/* </div> */}\r\n                        </>\r\n                      ) : selectedOption === \"experience\" ? (\r\n                        // <ExperinenceWorkingform\r\n                        //   mobilenumber={leadDetails.mobileNumber}\r\n                        // />\r\n                        <ExperienceForm\r\n                          mobileNumber={leadDetails.mobileNumber}\r\n                          whatsappNumber={leadDetails.whatsappNumber}\r\n                          Reloadpage={handleQualifyFormSubmit}\r\n                        />\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n          </MyModal>\r\n        </>\r\n      )}\r\n      {showSuccessForm && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            zIndex=\"5000\"\r\n            childComponent={<SuccessTick HeadText=\"Successfully Submit\" />}\r\n          />\r\n        </MyModal>\r\n      )}\r\n\r\n      {popups.confirmation && (\r\n        <>\r\n          <MyModal>\r\n            <ModalContainer\r\n              zIndex=\"5000\"\r\n              childComponent={\r\n                <>\r\n                  <div>\r\n                    <h5 className=\"\"> Confirmation </h5>\r\n                    <div>\r\n                      Are you sure that you want to not qualify{\" \"}\r\n                      <b>\r\n                        {\" \"}\r\n                        {leadDetails.name} {leadDetails.lastName}{\" \"}\r\n                      </b>\r\n                      ?\r\n                    </div>\r\n                    <form action=\"#\" onSubmit={(e) => submitNotQualified(e)}>\r\n                      <div>\r\n                        {\" \"}\r\n                        <TextField\r\n                          label=\"Add Notes\"\r\n                          multiline\r\n                          value={callRemainder.notes}\r\n                          onChange={(e) => {\r\n                            handleCallRemainderChange(\"notes\", e.target.value);\r\n                          }}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          required\r\n                          margin=\"normal\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"d-flex justify-content-end flex-row mt-3 \">\r\n                        <button\r\n                          onClick={() => {\r\n                            showNotQualify(false);\r\n                          }}\r\n                          className=\"btn btn-danger mx-3\"\r\n                        >\r\n                          No\r\n                        </button>{\" \"}\r\n                        <button\r\n                          className=\"btn btn-success\"\r\n                          type=\"submit\"\r\n                          disabled={enableSubmit}\r\n                        >\r\n                          Yes\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n          </MyModal>\r\n        </>\r\n      )}\r\n      {popups.notAttendConfiramtion && (\r\n        <>\r\n          <MyModal>\r\n            <ModalContainer\r\n              // zIndex=\"5000\"\r\n              childComponent={\r\n                <>\r\n                  <div>\r\n                    <h5 className=\"\"> Confirmation </h5>\r\n                    <div>\r\n                      Are you sure that you want to not attend{\" \"}\r\n                      <b>\r\n                        {\" \"}\r\n                        {leadDetails.name} {leadDetails.lastName}\r\n                      </b>\r\n                      , please select <b>event</b>?\r\n                    </div>\r\n                    <div>\r\n                      <Autocomplete\r\n                        id=\"tags-outlined\"\r\n                        className=\"mt-3\"\r\n                        options={notAttendEventArray.map((option) => option)}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option}\r\n                        value={notAttendEvent}\r\n                        onChange={(e, newValue) => {\r\n                          setNotAttendEvent(newValue);\r\n                          console.log(newValue);\r\n                          setEventError(\"\");\r\n                        }}\r\n                        required\r\n                        filterSelectedOptions\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Event\"\r\n                            placeholder=\"Event\"\r\n                          />\r\n                        )}\r\n                      />\r\n                      {eventError && (\r\n                        <div className=\"text-danger\">{eventError}</div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end flex-row mt-3 \">\r\n                      <button\r\n                        onClick={() => {\r\n                          handleCallNotAttend(false);\r\n                          setNotAttendEvent(\"\");\r\n                          setEventError(\"\");\r\n                        }}\r\n                        className=\"btn btn-danger mx-3\"\r\n                      >\r\n                        No\r\n                      </button>{\" \"}\r\n                      <button\r\n                        onClick={submitNotAttend}\r\n                        className=\"btn btn-success\"\r\n                        disabled={enableSubmit}\r\n                      >\r\n                        Yes\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n          </MyModal>\r\n        </>\r\n      )}\r\n\r\n      {popups.callRemainder && (\r\n        <>\r\n          <MyModal>\r\n            <ModalContainer\r\n              childComponent={\r\n                <>\r\n                  <div style={{ width: \"300px\" }}>\r\n                    {\" \"}\r\n                    <div className=\"d-flex justify-content-between mb-3\">\r\n                      <h4 className=\"text-center\">Call Remainder</h4>\r\n                      <span\r\n                        onClick={() => {\r\n                          handleCallRemainder(false);\r\n                        }}\r\n                        className=\"btn btn-outline-danger\"\r\n                      >\r\n                        {\" \"}\r\n                        <IoMdClose />\r\n                      </span>\r\n                    </div>\r\n                    <form onSubmit={(e) => submitCallRemainder(e)}>\r\n                      {/* <div>\r\n                      {\" \"}\r\n                      <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                        <DateTimePicker\r\n                          label=\"Select date and time\"\r\n                          value={callRemainder.date}\r\n                          onChange={(newValue) => {\r\n                            handleCallRemainderChange(\"date\", newValue);\r\n                          }}\r\n                          renderInput={(props) => (\r\n                            <TextField\r\n                              {...props}\r\n                              error={dateTimeError}\r\n                              helperText={\r\n                                dateTimeError\r\n                                  ? \"Please select a date and time\"\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          )}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </div> */}\r\n                      <label htmlFor=\"\">Follow up date : </label>\r\n                      <input\r\n                        type=\"datetime-local\"\r\n                        id=\"date\"\r\n                        name=\"date\"\r\n                        min={currentDate.toISOString().slice(0, -8)}\r\n                        max={maxDate.toISOString().slice(0, -8)}\r\n                        className=\"form-control\"\r\n                        onChange={(e) => {\r\n                          const inputDateTime = e.target.value;\r\n                          const formattedDateTime = inputDateTime + \":00\"; // Append \":00\" for seconds\r\n                          handleCallRemainderChange(\"date\", formattedDateTime);\r\n                        }}\r\n                        required\r\n                      />\r\n\r\n                      <div>\r\n                        {\" \"}\r\n                        {/* <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                        <ClockPicker\r\n                          date={date}\r\n                          onChange={(newDate) => setDate(newDate)}\r\n                        />\r\n                      </LocalizationProvider> */}\r\n                      </div>\r\n\r\n                      <div>\r\n                        {\" \"}\r\n                        <TextField\r\n                          label=\"Add Notes\"\r\n                          multiline\r\n                          value={callRemainder.notes}\r\n                          onChange={(e) => {\r\n                            handleCallRemainderChange(\"notes\", e.target.value);\r\n                          }}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          required\r\n                          margin=\"normal\"\r\n                        />\r\n                      </div>\r\n                      <LoadingButton\r\n                        type=\"submit\"\r\n                        loading={showLoader}\r\n                        variant=\"outlined\"\r\n                        disabled={enableSubmit}\r\n                      >\r\n                        <span>Submit</span>\r\n                      </LoadingButton>\r\n                    </form>\r\n                  </div>\r\n\r\n                  {/* <div className=\"d-flex flex-row justify-content-end mt-3  \">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger mx-2\"\r\n                        onClick={() => {\r\n                          setShowPopups((prev) => ({\r\n                            ...prev,\r\n                            callRemainder: false,\r\n                          }));\r\n                        }}\r\n                      >\r\n                        Close\r\n                      </button>\r\n                      <button className=\"btn btn-success\" type=\"submit\">\r\n                        Submit\r\n                      </button>\r\n                    </div> */}\r\n                </>\r\n              }\r\n            />\r\n          </MyModal>\r\n        </>\r\n      )}\r\n      {popups.PopupAddCanLead && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            childComponent={\r\n              <>\r\n                <div className=\"p-2\" style={{ width: \"800px\" }}>\r\n                  <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                    <div className=\"fs-4\">\r\n                      <b>Candidate Lead Generation</b>\r\n                    </div>\r\n                    <div\r\n                      className=\"btn btn-outline-danger\"\r\n                      onClick={() => {\r\n                        setShowPopups({\r\n                          PopupAddCanLead: false,\r\n                        });\r\n                      }}\r\n                    >\r\n                      <AiOutlineClose />\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    className=\"\"\r\n                    style={{ height: \"65vh\", overflow: \"auto\" }}\r\n                  >\r\n                    <CandidateLead\r\n                      oncloseLead={() =>\r\n                        setShowPopups((prev) => ({\r\n                          ...prev,\r\n                          PopupAddCanLead: false,\r\n                        }))\r\n                      }\r\n                      Reloadresponse={fetchData}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </>\r\n            }\r\n          />\r\n        </MyModal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LeadGenerationPipeline;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable eqeqeq */\r\n/* eslint-disable no-unused-vars */\r\nimport {\r\n  Autocomplete,\r\n  FormControl,\r\n  InputLabel,\r\n  Menu,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { AiOutlineClose, AiOutlinePhone } from \"react-icons/ai\";\r\nimport {\r\n  GetAllsdminDetails,\r\n  getJobFilterOptions,\r\n} from \"../../../../apiServices\";\r\nimport {\r\n  MyModal,\r\n  addDaysToDate,\r\n  addOneyear,\r\n  dateFormate,\r\n  getDateSevenDaysAgo,\r\n  modifyDate,\r\n  modifyYear,\r\n} from \"../../../../utility\";\r\nimport ModalContainer from \"../../../../components/modal_popup\";\r\nimport { IoMdClose } from \"react-icons/io\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CandidatePipelineActions } from \"../../../../redux-store/store\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction CallRemainderFilter({ onclose }) {\r\n  let filterDetails = useSelector(\r\n    (state) => state.CandidatePipelineDetails.callRemainderFilter\r\n  );\r\n\r\n  const [filterData, setFilterData] = useState({\r\n    mobileNumber: filterDetails.mobileNumber,\r\n    assignTo: filterDetails.assignTo,\r\n    profilePageNo: filterDetails.profilePageNo,\r\n    fromSource: filterDetails.fromSource,\r\n    jobCategory: filterDetails.jobCategory,\r\n    currentStatus: filterDetails.currentStatus,\r\n    dateFilterType: filterDetails.dateFilterType,\r\n    expYearsMax: filterDetails.expYearsMax,\r\n    expYearsMin: filterDetails.expYearsMin,\r\n    page: 0,\r\n    currentPipeline: filterDetails.currentPipeline,\r\n    pipelineStage: filterDetails.pipelineStage,\r\n    stages: filterDetails.stages,\r\n    startDate: dateFormate(modifyDate(\"sub\", 7)),\r\n    endDate: dateFormate(modifyYear(\"add\", 1)),\r\n  });\r\n\r\n  const [adminList, setAdminList] = useState([]);\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const [showCustom, setshowCustom] = useState(false);\r\n\r\n  const [validationErrors, setValidationErrors] = useState({\r\n    start: false,\r\n    end: false,\r\n  });\r\n\r\n  const experience = [\r\n    {\r\n      value: \"0\",\r\n      label: \"0\",\r\n    },\r\n    {\r\n      value: \"1\",\r\n      label: \"1\",\r\n    },\r\n    {\r\n      value: \"2\",\r\n      label: \"2\",\r\n    },\r\n    {\r\n      value: \"3\",\r\n      label: \"3\",\r\n    },\r\n    {\r\n      value: \"4\",\r\n      label: \"4\",\r\n    },\r\n\r\n    {\r\n      value: \"5\",\r\n      label: \"5\",\r\n    },\r\n    {\r\n      value: \"6\",\r\n      label: \"6\",\r\n    },\r\n    {\r\n      value: \"7\",\r\n      label: \"7\",\r\n    },\r\n    {\r\n      value: \"8\",\r\n      label: \"8\",\r\n    },\r\n    {\r\n      value: \"9\",\r\n      label: \"9\",\r\n    },\r\n    {\r\n      value: \"10\",\r\n      label: \"10\",\r\n    },\r\n    {\r\n      value: \"11\",\r\n      label: \"11\",\r\n    },\r\n    {\r\n      value: \"12\",\r\n      label: \"12\",\r\n    },\r\n    {\r\n      value: \"13\",\r\n      label: \"13\",\r\n    },\r\n    {\r\n      value: \"14\",\r\n      label: \"14\",\r\n    },\r\n    {\r\n      value: \"15+\",\r\n      label: \"15+\",\r\n    },\r\n  ];\r\n\r\n  const Dispatch = useDispatch();\r\n\r\n  function handleCustomDate(value, type) {\r\n    const val = value.target.value;\r\n\r\n    if (type === \"startDate\") {\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        createdTimeStart: val,\r\n        dateFilterType: \"custom\",\r\n      }));\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        start: false,\r\n      }));\r\n    } else {\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        createdTimeEnd: val,\r\n        dateFilterType: \"custom\",\r\n      }));\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        end: false,\r\n      }));\r\n    }\r\n  }\r\n\r\n  const isFormValid = () => {\r\n    const isValid = filterData.createdTimeStart && filterData.createdTimeEnd;\r\n\r\n    if (!filterData.createdTimeStart) {\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        start: true,\r\n      }));\r\n    }\r\n\r\n    if (!filterData.createdTimeEnd) {\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        end: true,\r\n      }));\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n  const handleApplyCustomDate = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isFormValid()) {\r\n      // console.log(\"Form submitted:\", dateRange);\r\n      setValidationErrors({\r\n        start: false,\r\n        end: false,\r\n      });\r\n      setshowCustom(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = (val) => {\r\n    console.log(val);\r\n\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const [options, setOptions] = useState({\r\n    jobCategory: [],\r\n  });\r\n\r\n  const handleDateSelect = (val) => {\r\n    let selectedOption = val;\r\n    const today = new Date();\r\n    let endDate = new Date();\r\n    // endDate.setDate(endDate.getDate() + 1);\r\n    if (selectedOption === \"lastWeek\") {\r\n      const startDate = new Date();\r\n\r\n      startDate.setDate(today.getDate() - 7);\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last 1 Week\",\r\n        createdTimeStart: startDate.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"today\") {\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Today\",\r\n        createdTimeStart: today.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"lastMonth\") {\r\n      const startDate = new Date();\r\n      startDate.setMonth(startDate.getMonth() - 1);\r\n\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last Month\",\r\n        createdTimeStart: startDate.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"lastTwoWeeks\") {\r\n      const startDate = new Date(today);\r\n      startDate.setDate(today.getDate() - 13);\r\n\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last 2 Week\",\r\n        createdTimeStart: startDate.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"yesterday\") {\r\n      const startDate = new Date();\r\n      startDate.setDate(startDate.getDate() - 1);\r\n\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Yesterday\",\r\n        createdTimeStart: startDate.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"custom\") {\r\n      setshowCustom(true);\r\n      setAnchorEl(null);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getJobFilterOptions().then((data) => {\r\n      setOptions((prev) => ({\r\n        ...prev,\r\n        jobCategory: data\r\n          .filter((el) => el.category == \"job category\")\r\n          .map((el) => el.options),\r\n      }));\r\n    });\r\n    GetAllsdminDetails()\r\n      .then((data) => {\r\n        console.log(data);\r\n        const activeAdmins = data.filter((item) => !item.Deactived);\r\n        setAdminList(activeAdmins);\r\n      })\r\n      .catch(() => {\r\n        alert(\"Something Went wrong\");\r\n      });\r\n  }, []);\r\n\r\n  function handleFieldChange(field, value) {\r\n    switch (field) {\r\n      case \"mobileNumber\":\r\n        // Check if the value is numeric before updating the state\r\n        if (/^\\d*$/.test(value) || value === \"\") {\r\n          setFilterData((prev) => ({ ...prev, [field]: value }));\r\n        }\r\n        break;\r\n\r\n      default:\r\n        setFilterData((prev) => ({ ...prev, [field]: value }));\r\n        break;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    Dispatch(CandidatePipelineActions.setCallRemainderFilter(filterData));\r\n  }, [filterData]);\r\n\r\n  function handleSubmit() {\r\n    Dispatch(CandidatePipelineActions.setCallRemainderFilter(filterData));\r\n    onclose();\r\n    // console.log(CandidatePipelineActions.setCallRemainderFilter(filterData));\r\n  }\r\n\r\n  function clearAllFilter() {\r\n    setFilterData({\r\n      mobileNumber: -1,\r\n      assignTo: localStorage.getItem(\"adminID\"),\r\n      profilePageNo: -1,\r\n      fromSource: \"\",\r\n      jobCategory: \"\",\r\n      currentStatus: \"\",\r\n      dateFilterType: \"\",\r\n      // createdTimeStart: \"2020-01-01\",\r\n      // createdTimeEnd: dateFormate(addDaysToDate(1)),\r\n      // callReminderStart: dateFormate(getDateSevenDaysAgo(new Date())),\r\n      // callReminderEnd: addOneyear(new Date()),\r\n      expYearsMax: -1,\r\n      expYearsMin: -1,\r\n      page: \"\",\r\n      currentPipeline: \"New candidate lead\",\r\n      pipelineStage: \"Connecting Qualifying\",\r\n      stages: 2,\r\n      startDate: dateFormate(modifyDate(\"sub\", 7)),\r\n      endDate: dateFormate(modifyYear(\"add\", 1)),\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log(filterDetails);\r\n  }, [filterDetails]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"70vw\",\r\n      }}\r\n    >\r\n      <div className=\"d-flex justify-content-between \">\r\n        <span>\r\n          <p>\r\n            <b>Connecting-Qualifing Filter</b>{\" \"}\r\n          </p>\r\n        </span>\r\n        <span\r\n          onClick={() => {\r\n            onclose();\r\n          }}\r\n          className=\"btn btn-danger\"\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          <AiOutlineClose style={{ fontSize: \"20px\" }} />\r\n        </span>\r\n      </div>\r\n      <div className=\"row my-3 \">\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Mobile number\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={filterData.mobileNumber == -1 ? \"\" : filterData.mobileNumber}\r\n            onChange={(event) =>\r\n              handleFieldChange(\"mobileNumber\", event.target.value)\r\n            }\r\n            inputProps={{ maxLength: 15 }}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <span\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <AiOutlinePhone style={{ marginRight: \"5px\" }} /> +91\r\n                </span>\r\n              ),\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            onChange={(e) => handleFieldChange(\"assignTo\", e.target.value)}\r\n            name=\"AssignedTo\"\r\n            id=\"AssignedTo\"\r\n            className=\"form-control\"\r\n            select\r\n            label=\"Assigned To\"\r\n            value={filterData.assignTo}\r\n            defaultValue={filterData.assignTo}\r\n          >\r\n            <MenuItem value={-1}>ALL</MenuItem>\r\n            {adminList.map((el) => (\r\n              <MenuItem key={el.id} value={el.id}>\r\n                {el.userName}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </div>\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            fullWidth\r\n            label=\"Stage\"\r\n            id=\"fullWidth\"\r\n            placeholder=\"Stage\"\r\n            select\r\n            name=\"profileNo\"\r\n            value={filterData.profilePageNo}\r\n            onChange={(event) =>\r\n              handleFieldChange(\"profilePageNo\", event.target.value)\r\n            }\r\n          >\r\n            <MenuItem value={-1}>ALL</MenuItem>\r\n            <MenuItem value={1}>1</MenuItem>\r\n            <MenuItem value={2}>2</MenuItem>\r\n            <MenuItem value={3}>3</MenuItem>\r\n            <MenuItem value={4}>4</MenuItem>\r\n            <MenuItem value={5}>5</MenuItem>\r\n            <MenuItem value={6}>6</MenuItem>\r\n          </TextField>\r\n        </div>\r\n      </div>\r\n      <div className=\"row my-3 \">\r\n        <div className=\"col-sm-4\">\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"select-label\">Source</InputLabel>\r\n            <Select\r\n              labelId=\"select-label\"\r\n              id=\"select\"\r\n              label=\"Select option\"\r\n              value={filterData.fromSource}\r\n              onChange={(event) =>\r\n                handleFieldChange(\"fromSource\", event.target.value)\r\n              }\r\n              // onChange={(e) => HandleCanlead(e, \"fromSource\")}\r\n            >\r\n              <MenuItem value={\"\"}>ALL</MenuItem>\r\n              <MenuItem value=\"Retention\">Old lead</MenuItem>\r\n              <MenuItem value=\"Reference\">Reference</MenuItem>\r\n              <MenuItem value=\"Whatsapp\">Whatsapp</MenuItem>\r\n              <MenuItem value=\"App\">App</MenuItem>\r\n              <MenuItem value=\"Meta lead\">Meta lead</MenuItem>\r\n              <MenuItem value=\"Naukri\">Naukri</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div className=\"col-sm-4\">\r\n          <Autocomplete\r\n            id=\"tags-outlined\"\r\n            options={options.jobCategory.map((option) => option)}\r\n            fullWidth\r\n            getOptionLabel={(option) => option}\r\n            // onChange={(event, value) => {\r\n            //   updateJobCategory(value);\r\n            //   console.log(value, \"value jobs\");\r\n            // }}\r\n\r\n            value={filterData.jobCategory}\r\n            onChange={(event, value, reason) => {\r\n              if (reason === \"clear\") {\r\n                handleFieldChange(\"jobCategory\", \"\");\r\n              } else {\r\n                handleFieldChange(\"jobCategory\", value);\r\n              }\r\n            }}\r\n            filterSelectedOptions\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Job category\"\r\n                placeholder=\"Job category\"\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className=\"col-sm-4\">\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"select-label\">Status</InputLabel>\r\n            <Select\r\n              labelId=\"select-label\"\r\n              id=\"select\"\r\n              label=\"Select option\"\r\n              value={filterData.currentStatus}\r\n              onChange={(event) =>\r\n                handleFieldChange(\"currentStatus\", event.target.value)\r\n              }\r\n            >\r\n              <MenuItem value=\"\">ALL</MenuItem>\r\n              {/* <MenuItem value=\"Qualified\">Qualified</MenuItem>\r\n              <MenuItem value=\"NotQualified\">Not Qualified</MenuItem> */}\r\n              <MenuItem value=\"Not attend\">Not Attend</MenuItem>\r\n              <MenuItem value=\"Call remainder\">Call Remainder</MenuItem>\r\n              {/* <MenuItem value=\"No status\">No Status</MenuItem> */}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row my-3 \">\r\n        {/* <div className=\"col-sm-4\">\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <TextField\r\n              label=\"Created on\"\r\n              id=\"basic-button\"\r\n              value={`${filterData.dateFilterType}`}\r\n              // value={`${dateRange.start} - ${dateRange.end}`}\r\n              aria-controls={open ? \"basic-menu\" : undefined}\r\n              aria-haspopup=\"true\"\r\n              aria-expanded={open ? \"true\" : undefined}\r\n              onClick={handleClick}\r\n            ></TextField>\r\n            <Menu\r\n              id=\"basic-menu\"\r\n              anchorEl={anchorEl}\r\n              open={open}\r\n              onClose={handleClose}\r\n              fullWidth\r\n              MenuListProps={{\r\n                \"aria-labelledby\": \"basic-button\",\r\n              }}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"today\");\r\n                }}\r\n                style={{ width: \"180px\" }}\r\n              >\r\n                Today\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"yesterday\");\r\n                }}\r\n              >\r\n                Yesterday\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"lastWeek\");\r\n                }}\r\n              >\r\n                Last 1 Week\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"lastTwoWeeks\");\r\n                }}\r\n              >\r\n                Last 2 Week\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"lastMonth\");\r\n                }}\r\n              >\r\n                Last Month\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"custom\");\r\n                }}\r\n              >\r\n                Custom Date\r\n              </MenuItem>\r\n            </Menu>\r\n          </FormControl>\r\n          {showCustom && (\r\n            <MyModal>\r\n              <ModalContainer\r\n                zIndex={1005}\r\n                childComponent={\r\n                  <div\r\n                    style={{\r\n                      minWidth: \"400px\",\r\n                      width: \"auto\",\r\n                    }}\r\n                  >\r\n                    <>\r\n                      <div>\r\n                        <form>\r\n                          <p className=\"text-center \">Select Custom Date </p>\r\n                          <div className=\"mt-2\">\r\n                            <label htmlFor=\"start\">From</label>\r\n                            <input\r\n                              className={`form-control ${\r\n                                validationErrors.start ? \"is-invalid\" : \"\"\r\n                              }`}\r\n                              style={{ width: \"100%\" }}\r\n                              type=\"date\"\r\n                              id=\"start\"\r\n                              onChange={(value) =>\r\n                                handleCustomDate(value, \"startDate\")\r\n                              }\r\n                              value={filterData.createdTimeStart}\r\n                              name=\"trip-start\"\r\n                              min=\"2020-01-01\"\r\n                              max={new Date().toISOString().split(\"T\")[0]}\r\n                            />\r\n                            {validationErrors.start && (\r\n                              <div className=\"invalid-feedback\">\r\n                                Start date is required.\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"mt-2\">\r\n                            <label htmlFor=\"end\">To</label>\r\n                            <input\r\n                              className={`form-control ${\r\n                                validationErrors.end ? \"is-invalid\" : \"\"\r\n                              }`}\r\n                              value={filterData.createdTimeEnd}\r\n                              style={{ width: \"100%\" }}\r\n                              type=\"date\"\r\n                              id=\"end\"\r\n                              onChange={(value) =>\r\n                                handleCustomDate(value, \"endDate\")\r\n                              }\r\n                              name=\"trip-end\"\r\n                              min=\"2020-01-01\"\r\n                              max={new Date().toISOString().split(\"T\")[0]}\r\n                            />\r\n                            {validationErrors.end && (\r\n                              <div className=\"invalid-feedback\">\r\n                                End date is required.\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-end mt-3 \">\r\n                            <button\r\n                              onClick={() => {\r\n                                setValidationErrors({\r\n                                  start: false,\r\n                                  end: false,\r\n                                });\r\n                                setshowCustom(false);\r\n                              }}\r\n                              style={{\r\n                                backgroundColor: \"#b2261c\",\r\n                              }}\r\n                              className=\"btn rounded-pill text-white px-4  me-2\"\r\n                            >\r\n                              Close\r\n                            </button>\r\n                            <button\r\n                              onClick={handleApplyCustomDate}\r\n                              // color=\"primary\"\r\n                              className=\"btn rounded-pill text-white px-4\"\r\n                              style={{\r\n                                backgroundColor: \"#169C50\",\r\n                              }}\r\n                            >\r\n                              Apply\r\n                            </button>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </>\r\n                  </div>\r\n                }\r\n              />\r\n            </MyModal>\r\n          )}\r\n        </div> */}\r\n\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            onChange={(event) =>\r\n              handleFieldChange(\"expYearsMin\", event.target.value)\r\n            }\r\n            value={filterData.expYearsMin}\r\n            name=\"experience\"\r\n            id=\"experience\"\r\n            className=\"form-control\"\r\n            select\r\n            label=\"Min experience\"\r\n          >\r\n            {experience.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </div>\r\n\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            onChange={(event) =>\r\n              handleFieldChange(\"expYearsMax\", event.target.value)\r\n            }\r\n            value={filterData.expYearsMax}\r\n            name=\"experience\"\r\n            id=\"experience\"\r\n            className=\"form-control\"\r\n            select\r\n            label=\"Max experience\"\r\n          >\r\n            {experience.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex justify-content-end flex-row\">\r\n        <button onClick={clearAllFilter} className=\"btn btn-danger mx-2\">\r\n          Clear\r\n        </button>\r\n        <button onClick={handleSubmit} className=\"btn btn-success\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CallRemainderFilter;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport style from \"../pipeline.module.scss\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport { Pagination, TextField } from \"@mui/material\";\r\nimport { FaFilter } from \"react-icons/fa\";\r\nimport { LuRefreshCw } from \"react-icons/lu\";\r\nimport moment from \"moment\";\r\nimport \"moment-timezone\";\r\nimport accordionstyle from \"../../../Candidate/CandidateQualifyForm/QualifyForm.module.scss\";\r\nimport {\r\n  GetCanLeadPipeline,\r\n  GetCandidateQualifyDetials,\r\n  PutCandidateType,\r\n  UpdateCanPipelineStatus,\r\n  getCandidateLead,\r\n  getcandidateDetails,\r\n} from \"../../../../apiServices\";\r\nimport {\r\n  MyModal,\r\n  addDaysToDate,\r\n  addOneyear,\r\n  dateFormate,\r\n  getCurrentDateTime,\r\n  getDateSevenDaysAgo,\r\n  modifyDate,\r\n  modifyYear,\r\n} from \"../../../../utility\";\r\nimport ModalContainer from \"../../../../components/modal_popup\";\r\nimport CandidateFBLeadDetailsview from \"../../../../components/ModalPopups/CandidateDetails/FBLeadDetailsview\";\r\nimport CandidateLeadPopup from \"../../../../components/ModalPopups/CandidateLeadPopup\";\r\nimport {\r\n  CandidatePipelineActions,\r\n  commonPopupActions,\r\n} from \"../../../../redux-store/store\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport LeadPipelineFilter from \"./LeadPipelineFilter\";\r\nimport { useSelector } from \"react-redux\";\r\nimport QualifyFresherform from \"../../../Candidate/CandidateQualifyForm/FresherForm\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport ExperienceForm from \"../../../Candidate/CandidateQualifyForm/ExperienceForm\";\r\nimport SuccessTick from \"../../../../components/success_tick\";\r\nimport CallRemainderFilter from \"./callRemainderFilter.\";\r\nimport { HiOutlineRefresh } from \"react-icons/hi\";\r\n\r\nfunction CanCallRemainderPipeline() {\r\n  const [leadData, setLeadData] = useState({\r\n    data: [],\r\n  });\r\n\r\n  let filterDetails = useSelector(\r\n    (state) => state.CandidatePipelineDetails.callRemainderFilter\r\n  );\r\n\r\n  let refreshPage = useSelector(\r\n    (state) => state.CandidatePipelineDetails.refreshCountIncrement\r\n  );\r\n\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [leadQualifyFormOpen, setLeadQualifyFormOpen] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  const [leadDetails, setleadDetails] = useState(\"\");\r\n  const [showSuccessForm, setshowSuccessForm] = useState(\"\");\r\n  const [isRotating, setIsRotating] = useState(false);\r\n  const [enableSubmit, setenableSubmit] = useState(false);\r\n  const [showLeadDetails, setShowLeadDetails] = useState({\r\n    show: false,\r\n    id: 1,\r\n  });\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [showRedDot, setShowRedDot] = useState(false);\r\n  const [popups, setShowPopups] = useState({\r\n    callRemainder: false,\r\n    success: false,\r\n    confirmation: false,\r\n  });\r\n  const [notQualifyNotes, setNotQualifyNotes] = useState(\"\");\r\n  const Dispatch = useDispatch();\r\n\r\n  const handleCandidateDetails = async (candidateleadId, type) => {\r\n    let data;\r\n    if (type === \"CandidateLead\") {\r\n      data = await getCandidateLead(candidateleadId);\r\n    } else if (type === \"RegisterCandidate\") {\r\n      data = await getcandidateDetails(candidateleadId);\r\n    }\r\n\r\n    // Dispatch action to show the popup and pass the fetched data\r\n    Dispatch(\r\n      commonPopupActions.setShowPopup({\r\n        name: \"candidateDetails\",\r\n        id: candidateleadId,\r\n        type: type,\r\n        data: data,\r\n      })\r\n    );\r\n  };\r\n\r\n  async function fetchData() {\r\n    setIsRotating(true);\r\n    let data = await GetCanLeadPipeline(filterDetails);\r\n\r\n    if (data.status) {\r\n      setLeadData(data);\r\n      setTotalCount(data.totalElements);\r\n    } else {\r\n      setLeadData({\r\n        data: [],\r\n      });\r\n      setTotalCount(0);\r\n    }\r\n    setTimeout(() => {\r\n      setIsRotating(false);\r\n    }, 1000);\r\n  }\r\n  useEffect(() => {\r\n    fetchData();\r\n    setShowRedDot(ShowRedDot(initialFilterObj, filterDetails));\r\n  }, [filterDetails, refreshPage]);\r\n\r\n  function handleOpenQualifyForm() {\r\n    setLeadQualifyFormOpen(true);\r\n    GetCandidateQualifyDetials(leadDetails.mobileNumber)\r\n      .then((data) => {\r\n        if (data && data.canLeadDetails) {\r\n          setSelectedOption(\r\n            data.canLeadDetails?.experienced === true ? \"experience\" : \"fresher\"\r\n          );\r\n        } else {\r\n          console.error(\"CanLeadDetails not available in data:\", data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching candidate details:\", error);\r\n      });\r\n  }\r\n  const handleOptionChange = (event) => {\r\n    const selectedValue = event.target.value;\r\n    setSelectedOption(selectedValue);\r\n\r\n    let experiencedValue = false;\r\n    if (selectedValue === \"experience\") {\r\n      experiencedValue = true;\r\n    }\r\n\r\n    PutCandidateType(experiencedValue, leadDetails.mobileNumber, \"\").then(\r\n      (data) => {\r\n        console.log(\r\n          \"Data Format\",\r\n          data,\r\n          \"mobile number \",\r\n          leadDetails.mobileNumber\r\n        );\r\n      }\r\n    );\r\n  };\r\n  function handleCloseQualifyForm() {\r\n    setSelectedOption(\"\");\r\n    setLeadQualifyFormOpen(false);\r\n    fetchData();\r\n  }\r\n  function handleQualifyFormSubmit() {\r\n    setshowSuccessForm(true);\r\n\r\n    setTimeout(() => {\r\n      setshowSuccessForm(false);\r\n      setSelectedOption(\"\");\r\n      setLeadQualifyFormOpen(false);\r\n    }, 1000);\r\n    fetchData();\r\n  }\r\n\r\n  function paginationChange(event, page) {\r\n    Dispatch(\r\n      CandidatePipelineActions.setPageChange({\r\n        type: \"callRemainderFilter\",\r\n        value: page - 1,\r\n      })\r\n    );\r\n  }\r\n  function showNotQualify(value) {\r\n    setShowPopups((prev) => ({ ...prev, confirmation: value }));\r\n  }\r\n  function handleCallNotAttend(value) {\r\n    setShowPopups((prev) => ({ ...prev, confirmation: value }));\r\n  }\r\n  const formattedDateTime = getCurrentDateTime();\r\n  function submitNotQualified(e) {\r\n    e.preventDefault();\r\n    if (!notQualifyNotes) {\r\n      // setDateTimeError(!callRemainder.date);\r\n      return;\r\n    }\r\n    setenableSubmit(true);\r\n    let obj = {\r\n      notQualified: true,\r\n      date: formattedDateTime,\r\n      notes: notQualifyNotes,\r\n      id: leadDetails.id,\r\n    };\r\n    UpdateCanPipelineStatus(obj).then(() => {\r\n      showNotQualify(false);\r\n      setenableSubmit(false);\r\n      Dispatch(CandidatePipelineActions.setRefreshCount());\r\n    }, []);\r\n  }\r\n  function submitNotAttend() {\r\n    let obj = {\r\n      notAttend: true,\r\n      // notes: callRemainder.notes,\r\n      id: leadDetails.id,\r\n    };\r\n    UpdateCanPipelineStatus(obj).then(() => {\r\n      showNotQualify(false);\r\n      Dispatch(CandidatePipelineActions.setRefreshCount());\r\n    }, []);\r\n  }\r\n\r\n  let initialFilterObj = {\r\n    mobileNumber: -1,\r\n    assignTo: localStorage.getItem(\"adminID\"),\r\n    profilePageNo: -1,\r\n    fromSource: \"\",\r\n    jobCategory: \"\",\r\n    currentStatus: \"\",\r\n    dateFilterType: \"\",\r\n    expYearsMax: -1,\r\n    expYearsMin: -1,\r\n    page: \"\",\r\n    currentPipeline: \"New candidate lead\",\r\n    pipelineStage: \"Connecting Qualifying\",\r\n    stages: 2,\r\n    startDate: dateFormate(modifyDate(\"sub\", 7)),\r\n    endDate: dateFormate(modifyYear(\"add\", 1)),\r\n  };\r\n\r\n  function ShowRedDot(obj1, obj2) {\r\n    // Omitting the 'page' key from both objects\r\n    const obj1WithoutPage = { ...obj1 };\r\n    delete obj1WithoutPage.page;\r\n\r\n    const obj2WithoutPage = { ...obj2 };\r\n    delete obj2WithoutPage.page;\r\n    for (let key in obj1WithoutPage) {\r\n      if (obj1WithoutPage.hasOwnProperty(key)) {\r\n        if (obj1WithoutPage[key] !== obj2WithoutPage[key]) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  return (\r\n    <div className={`${style.pipelineContainer} mx-2`}>\r\n      <div className={`${style.headerCard} p-2 d-flex justify-content-between`}>\r\n        <b>Connecting - Qualifing ({totalCount}) </b>{\" \"}\r\n        <div className=\"mt-0\">\r\n          <div className=\"d-inline-block\">\r\n            <span\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => {\r\n                fetchData();\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <HiOutlineRefresh\r\n                className={`${\r\n                  isRotating ? style.refreshRotate : style.refreshcolor\r\n                }`}\r\n              />\r\n            </span>\r\n          </div>{\" \"}\r\n          <div\r\n            onClick={() => {\r\n              setShowFilter(true);\r\n            }}\r\n            className=\"d-inline-block mx-2\"\r\n            style={{ cursor: \"pointer\", color: \"#858585\" }}\r\n          >\r\n            <FaFilter />\r\n            <p\r\n              style={{\r\n                backgroundColor: showRedDot ? \"red\" : \"transparent\",\r\n                width: \"9px\",\r\n                height: \"9px\",\r\n                marginTop: \"-12px\",\r\n                zIndex: 1000,\r\n                marginLeft: \"10px\",\r\n                borderRadius: \"50%\",\r\n              }}\r\n            ></p>{\" \"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`${style.bodyContainer}`}>\r\n        {leadData.data.map((el) => (\r\n          <div\r\n            key={el.id}\r\n            onClick={() => {\r\n              setleadDetails(el);\r\n            }}\r\n          >\r\n            <div className={`${style.bodyCard} p-1 `}>\r\n              <div className={`${style.textContent} p-1 `}>\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <div>\r\n                    <b\r\n                      onClick={() => {\r\n                        handleCandidateDetails(el.id, \"CandidateLead\");\r\n                      }}\r\n                      className={style.candidateName}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    >\r\n                      {\" \"}\r\n                      {el.name ? el.name : \"-\"} {el.lastName ? el.lastName : \"\"}{\" \"}\r\n                    </b>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      display: \"inline-block\",\r\n                      padding: \"4px 4px\", // Adjusted padding to make the badge smaller\r\n                      border: \"1px solid\",\r\n                      textAlign: \"center\",\r\n                      borderRadius: \"8px\", // Adjusted border-radius to make the badge smaller\r\n                      fontSize: \"10px\",\r\n                      borderColor:\r\n                        el.currentStatus === \"Not attend\"\r\n                          ? \"orange\" // Border color for \"Not attend\"\r\n                          : el.currentStatus === \"Call remainder\"\r\n                          ? \"gray\" // Border color for \"Call remainder\"\r\n                          : \"\",\r\n                      backgroundColor:\r\n                        el.currentStatus === \"Not attend\"\r\n                          ? \"rgba(255, 99, 71, 0.2)\" // Lighter shade of red using RGBA\r\n                          : el.currentStatus === \"Call remainder\"\r\n                          ? \"lightgray\" // Background color for \"Call remainder\"\r\n                          : \"\",\r\n                      color:\r\n                        el.currentStatus === \"Not attend\"\r\n                          ? \"orange\" // Text color for \"Not attend\"\r\n                          : el.currentStatus === \"Call remainder\"\r\n                          ? \"gray\" // Text color for \"Call remainder\"\r\n                          : \"\",\r\n                    }}\r\n                  >\r\n                    <b>\r\n                      <div>{el.currentStatus ? el.currentStatus : \"-\"}</div>\r\n                    </b>\r\n                  </div>\r\n                </div>{\" \"}\r\n                <div className=\"d-flex justify-content-between\">\r\n                  {el.jobCategory ? el.jobCategory : \"-\"}\r\n                  <div\r\n                    style={{\r\n                      fontSize: \"12px\",\r\n                      fontWeight: \"bold\",\r\n                      marginBottom: \"3px\",\r\n                    }}\r\n                  >\r\n                    {el.callRemainderOn\r\n                      ? (() => {\r\n                          const currentDate = new Date();\r\n                          const callRemainderOnDate = new Date(\r\n                            el.callRemainderOn\r\n                          );\r\n\r\n                          // Zero out the time portion of both dates\r\n                          currentDate.setHours(0, 0, 0, 0);\r\n                          callRemainderOnDate.setHours(0, 0, 0, 0);\r\n\r\n                          const differenceMs =\r\n                            callRemainderOnDate - currentDate;\r\n                          const differenceDays = Math.ceil(\r\n                            differenceMs / (1000 * 60 * 60 * 24)\r\n                          );\r\n\r\n                          if (differenceDays > 0) {\r\n                            return `${differenceDays} days more`;\r\n                          } else {\r\n                            const daysAgo = Math.abs(differenceDays);\r\n                            if (daysAgo === 0) {\r\n                              return \"Today\";\r\n                            } else if (daysAgo === 1) {\r\n                              return \"1 day ago\";\r\n                            } else {\r\n                              return `${daysAgo} days ago`;\r\n                            }\r\n                          }\r\n                        })()\r\n                      : \"\"}\r\n                  </div>\r\n                </div>\r\n                {/* {el.mobileNumber ? el.mobileNumber : \"-\"} */}\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <div>{el.mobileNumber ? el.mobileNumber : \"-\"}</div>\r\n                  <b\r\n                    style={{\r\n                      border: \"1px solid yellow\",\r\n                      backgroundColor: \"lightyellow\",\r\n                      fontSize: \"10px\",\r\n                      borderRadius: \"8px\",\r\n                      marginRight: \"10px\",\r\n                      marginTop: \"3px\",\r\n                      padding: \"4px\",\r\n                    }}\r\n                  >\r\n                    {el.fromSource === \"Retention\"\r\n                      ? \"Old lead\"\r\n                      : el.fromSource === null\r\n                      ? \"Meta lead\"\r\n                      : el.fromSource}\r\n                  </b>\r\n                </div>\r\n              </div>\r\n\r\n              <div\r\n                style={{ marginTop: \"-20px\" }}\r\n                className=\"d-flex justify-content-end\"\r\n              >\r\n                <div>\r\n                  <div className=\"dropdown\">\r\n                    <span\r\n                      style={{ cursor: \"pointer\" }}\r\n                      id=\"dropdownMenuButton1\"\r\n                      data-bs-toggle=\"dropdown\"\r\n                      aria-expanded=\"false\"\r\n                    >\r\n                      <BsThreeDotsVertical />\r\n                    </span>\r\n                    <ul\r\n                      className=\"dropdown-menu\"\r\n                      aria-labelledby=\"dropdownMenuButton1\"\r\n                    >\r\n                      <li\r\n                        onClick={() => {\r\n                          handleOpenQualifyForm();\r\n                        }}\r\n                      >\r\n                        <a className=\"dropdown-item\" href=\"#\">\r\n                          Qualified\r\n                        </a>\r\n                      </li>\r\n                      <li>\r\n                        <a\r\n                          className=\"dropdown-item\"\r\n                          href=\"#\"\r\n                          onClick={() => {\r\n                            showNotQualify(true);\r\n                          }}\r\n                        >\r\n                          Not Qualified\r\n                        </a>\r\n                      </li>\r\n                      {/* <li>\r\n                        <a\r\n                          className=\"dropdown-item\"\r\n                          href=\"#\"\r\n                          onClick={() => {\r\n                            handleCallNotAttend(true);\r\n                          }}\r\n                        >\r\n                          Not Attend\r\n                        </a>\r\n                      </li> */}\r\n\r\n                      {/* <li>\r\n                        <a className=\"dropdown-item\" href=\"#\">\r\n                          Call Remainder\r\n                        </a>\r\n                      </li> */}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"mt-3 d-grid justify-content-center\">\r\n        <Pagination\r\n          // variant=\"outlined\"\r\n          shape=\"rounded\"\r\n          color=\"success\"\r\n          boundaryCount={1}\r\n          siblingCount={0}\r\n          onChange={paginationChange}\r\n          count={leadData.totalPages}\r\n          size=\"small\"\r\n        />\r\n      </div>\r\n\r\n      {showFilter && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            // zIndex={2}\r\n            childComponent={\r\n              <>\r\n                <CallRemainderFilter\r\n                  onclose={() => {\r\n                    setShowFilter(false);\r\n                  }}\r\n                />\r\n              </>\r\n            }\r\n          />\r\n        </MyModal>\r\n      )}\r\n\r\n      {leadQualifyFormOpen && (\r\n        <>\r\n          <MyModal>\r\n            <ModalContainer\r\n              childComponent={\r\n                <>\r\n                  <div\r\n                    className={`container d-flex align-itmes-center justify-content-between`}\r\n                  >\r\n                    <div className=\"\">\r\n                      <p>\r\n                        <b>Candidate lead qualify form</b>\r\n                      </p>\r\n                      <div className=\"d-flex\">\r\n                        {\" \"}\r\n                        <div className={`me-2  ${accordionstyle.radioInput}`}>\r\n                          {/* <label className=\"form-check-label me-3\"> */}\r\n                          <input\r\n                            type=\"radio\"\r\n                            name=\"fresher\"\r\n                            id=\"fresherYes\"\r\n                            value=\"fresher\"\r\n                            className={`form-check-input `}\r\n                            checked={selectedOption === \"fresher\"}\r\n                            onChange={handleOptionChange}\r\n                          />\r\n                          <label for=\"fresherYes\">Fresher</label>\r\n                          {/* </label> */}\r\n                        </div>\r\n                        <div className={`me-2  ${accordionstyle.radioInput}`}>\r\n                          <label className=\"form-check-label\">\r\n                            <input\r\n                              type=\"radio\"\r\n                              name=\"experience\"\r\n                              id=\"experienceNo\"\r\n                              value=\"experience\"\r\n                              className={`form-check-input `}\r\n                              checked={selectedOption === \"experience\"}\r\n                              onChange={handleOptionChange}\r\n                            />\r\n                            <label for=\"experienceNo\">Experience</label>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"ms-5\">\r\n                      <div\r\n                        className=\"btn btn-outline-danger\"\r\n                        onClick={handleCloseQualifyForm}\r\n                      >\r\n                        <AiOutlineClose />{\" \"}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <div>\r\n                      {selectedOption === \"fresher\" ? (\r\n                        <>\r\n                          {/* <div className={`${accordionstyle.Container}`}> */}{\" \"}\r\n                          <QualifyFresherform\r\n                            mobilenumber={leadDetails.mobileNumber}\r\n                            whatsappNumber={leadDetails.whatsappNumber}\r\n                            Reloadpage={handleQualifyFormSubmit}\r\n                          />\r\n                          {/* </div> */}\r\n                        </>\r\n                      ) : selectedOption === \"experience\" ? (\r\n                        // <ExperinenceWorkingform\r\n                        //   mobilenumber={leadDetails.mobileNumber}\r\n                        // />\r\n                        <ExperienceForm\r\n                          mobileNumber={leadDetails.mobileNumber}\r\n                          whatsappNumber={leadDetails.whatsappNumber}\r\n                          Reloadpage={handleQualifyFormSubmit}\r\n                        />\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n          </MyModal>\r\n        </>\r\n      )}\r\n\r\n      {popups.confirmation && (\r\n        <>\r\n          <MyModal>\r\n            <ModalContainer\r\n              zIndex=\"5000\"\r\n              childComponent={\r\n                <>\r\n                  <div>\r\n                    <h4 className=\"\"> Confirmation </h4>\r\n                    <div>\r\n                      Are you sure that you want to not qualify{\" \"}\r\n                      <b>{leadDetails.name}</b>?\r\n                    </div>\r\n                    <form action=\"#\" onSubmit={(e) => submitNotQualified(e)}>\r\n                      <div>\r\n                        {\" \"}\r\n                        <TextField\r\n                          label=\"Add Notes\"\r\n                          multiline\r\n                          value={notQualifyNotes}\r\n                          onChange={(e) => {\r\n                            setNotQualifyNotes(e.target.value);\r\n                          }}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          required\r\n                          margin=\"normal\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"d-flex justify-content-end flex-row mt-3 \">\r\n                        <button\r\n                          onClick={() => {\r\n                            showNotQualify(false);\r\n                          }}\r\n                          className=\"btn btn-danger mx-3\"\r\n                        >\r\n                          No\r\n                        </button>{\" \"}\r\n                        <button\r\n                          className=\"btn btn-success\"\r\n                          disabled={enableSubmit}\r\n                        >\r\n                          Yes\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n          </MyModal>\r\n        </>\r\n      )}\r\n      {/* {popups.confirmation && (\r\n        <>\r\n          <MyModal>\r\n            <ModalContainer\r\n              zIndex=\"5000\"\r\n              childComponent={\r\n                <>\r\n                  <div>\r\n                    <h4 className=\"\"> Confirmation </h4>\r\n                    <div>\r\n                      Are you sure that you want to not attend{\" \"}\r\n                      <b> {leadDetails.name}</b>?\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end flex-row mt-3 \">\r\n                      <button\r\n                        onClick={() => {\r\n                          handleCallNotAttend(false);\r\n                        }}\r\n                        className=\"btn btn-danger mx-3\"\r\n                      >\r\n                        No\r\n                      </button>{\" \"}\r\n                      <button\r\n                        onClick={submitNotAttend}\r\n                        className=\"btn btn-success\"\r\n                      >\r\n                        Yes\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n          </MyModal>\r\n        </>\r\n      )} */}\r\n      {showSuccessForm && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            zIndex=\"5000\"\r\n            childComponent={<SuccessTick HeadText=\"Successfully Submit\" />}\r\n          />\r\n        </MyModal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CanCallRemainderPipeline;\r\n","import {\r\n  Autocomplete,\r\n  FormControl,\r\n  InputLabel,\r\n  Menu,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { AiOutlineClose, AiOutlinePhone } from \"react-icons/ai\";\r\nimport {\r\n  GetAllsdminDetails,\r\n  getJobFilterOptions,\r\n} from \"../../../../apiServices\";\r\nimport {\r\n  MyModal,\r\n  addDaysToDate,\r\n  dateFormate,\r\n  modifyDate,\r\n} from \"../../../../utility\";\r\nimport ModalContainer from \"../../../../components/modal_popup\";\r\nimport { IoMdClose } from \"react-icons/io\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CandidatePipelineActions } from \"../../../../redux-store/store\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction NotQualifiedFilter({ onclose }) {\r\n  let filterDetails = useSelector(\r\n    (state) => state.CandidatePipelineDetails.notQualifiedFilter\r\n  );\r\n\r\n  const [filterData, setFilterData] = useState({\r\n    mobileNumber: filterDetails.mobileNumber,\r\n    assignTo: filterDetails.assignTo,\r\n    profilePageNo: filterDetails.profilePageNo,\r\n    fromSource: filterDetails.fromSource,\r\n    jobCategory: filterDetails.jobCategory,\r\n    currentStatus: filterDetails.currentStatus,\r\n    dateFilterType: filterDetails.dateFilterType,\r\n    expYearsMax: filterDetails.expYearsMax,\r\n    expYearsMin: filterDetails.expYearsMin,\r\n    page: 0,\r\n    currentPipeline: filterDetails.currentPipeline,\r\n    stages: filterDetails.stages,\r\n    startDate: dateFormate(modifyDate(\"sub\", 7)),\r\n    endDate: dateFormate(new Date()),\r\n  });\r\n\r\n  const [adminList, setAdminList] = useState([]);\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const [showCustom, setshowCustom] = useState(false);\r\n\r\n  const [validationErrors, setValidationErrors] = useState({\r\n    start: false,\r\n    end: false,\r\n  });\r\n\r\n  const experience = [\r\n    {\r\n      value: \"0\",\r\n      label: \"0\",\r\n    },\r\n    {\r\n      value: \"1\",\r\n      label: \"1\",\r\n    },\r\n    {\r\n      value: \"2\",\r\n      label: \"2\",\r\n    },\r\n    {\r\n      value: \"3\",\r\n      label: \"3\",\r\n    },\r\n    {\r\n      value: \"4\",\r\n      label: \"4\",\r\n    },\r\n\r\n    {\r\n      value: \"5\",\r\n      label: \"5\",\r\n    },\r\n    {\r\n      value: \"6\",\r\n      label: \"6\",\r\n    },\r\n    {\r\n      value: \"7\",\r\n      label: \"7\",\r\n    },\r\n    {\r\n      value: \"8\",\r\n      label: \"8\",\r\n    },\r\n    {\r\n      value: \"9\",\r\n      label: \"9\",\r\n    },\r\n    {\r\n      value: \"10\",\r\n      label: \"10\",\r\n    },\r\n    {\r\n      value: \"11\",\r\n      label: \"11\",\r\n    },\r\n    {\r\n      value: \"12\",\r\n      label: \"12\",\r\n    },\r\n    {\r\n      value: \"13\",\r\n      label: \"13\",\r\n    },\r\n    {\r\n      value: \"14\",\r\n      label: \"14\",\r\n    },\r\n    {\r\n      value: \"15+\",\r\n      label: \"15+\",\r\n    },\r\n  ];\r\n\r\n  const Dispatch = useDispatch();\r\n\r\n  function handleCustomDate(value, type) {\r\n    const val = value.target.value;\r\n\r\n    if (type === \"startDate\") {\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        createdTimeStart: val,\r\n        dateFilterType: \"custom\",\r\n      }));\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        start: false,\r\n      }));\r\n    } else {\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        createdTimeEnd: val,\r\n        dateFilterType: \"custom\",\r\n      }));\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        end: false,\r\n      }));\r\n    }\r\n  }\r\n\r\n  const isFormValid = () => {\r\n    const isValid = filterData.createdTimeStart && filterData.createdTimeEnd;\r\n\r\n    if (!filterData.createdTimeStart) {\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        start: true,\r\n      }));\r\n    }\r\n\r\n    if (!filterData.createdTimeEnd) {\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        end: true,\r\n      }));\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n  const handleApplyCustomDate = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isFormValid()) {\r\n      // console.log(\"Form submitted:\", dateRange);\r\n      setValidationErrors({\r\n        start: false,\r\n        end: false,\r\n      });\r\n      setshowCustom(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = (val) => {\r\n    console.log(val);\r\n\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const [options, setOptions] = useState({\r\n    jobCategory: [],\r\n  });\r\n\r\n  const handleDateSelect = (val) => {\r\n    let selectedOption = val;\r\n    const today = new Date();\r\n    let endDate = new Date();\r\n    // endDate.setDate(endDate.getDate() + 1);\r\n    if (selectedOption === \"lastWeek\") {\r\n      const startDate = new Date();\r\n\r\n      startDate.setDate(today.getDate() - 7);\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last 1 Week\",\r\n        createdTimeStart: startDate.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"today\") {\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Today\",\r\n        createdTimeStart: today.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"lastMonth\") {\r\n      const startDate = new Date();\r\n      startDate.setMonth(startDate.getMonth() - 1);\r\n\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last Month\",\r\n        createdTimeStart: startDate.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"lastTwoWeeks\") {\r\n      const startDate = new Date(today);\r\n      startDate.setDate(today.getDate() - 13);\r\n\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last 2 Week\",\r\n        createdTimeStart: startDate.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"yesterday\") {\r\n      const startDate = new Date();\r\n      startDate.setDate(startDate.getDate() - 1);\r\n\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Yesterday\",\r\n        createdTimeStart: startDate.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"custom\") {\r\n      setshowCustom(true);\r\n      setAnchorEl(null);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getJobFilterOptions().then((data) => {\r\n      setOptions((prev) => ({\r\n        ...prev,\r\n        jobCategory: data\r\n          .filter((el) => el.category == \"job category\")\r\n          .map((el) => el.options),\r\n      }));\r\n    });\r\n    GetAllsdminDetails()\r\n      .then((data) => {\r\n        console.log(data);\r\n        const activeAdmins = data.filter((item) => !item.Deactived);\r\n        setAdminList(activeAdmins);\r\n      })\r\n      .catch(() => {\r\n        alert(\"Something Went wrong\");\r\n      });\r\n  }, []);\r\n\r\n  function handleFieldChange(field, value) {\r\n    switch (field) {\r\n      case \"mobileNumber\":\r\n        // Check if the value is numeric before updating the state\r\n        if (/^\\d*$/.test(value) || value === \"\") {\r\n          setFilterData((prev) => ({ ...prev, [field]: value }));\r\n        }\r\n        break;\r\n\r\n      default:\r\n        setFilterData((prev) => ({ ...prev, [field]: value }));\r\n        break;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    Dispatch(CandidatePipelineActions.setNotQualifiedFilter(filterData));\r\n  }, [filterData]);\r\n\r\n  function handleSubmit() {\r\n    Dispatch(CandidatePipelineActions.setNotQualifiedFilter(filterData));\r\n    onclose();\r\n    // console.log(CandidatePipelineActions.setNotQualifiedFilter(filterData));\r\n  }\r\n\r\n  function clearAllFilter() {\r\n    setFilterData({\r\n      mobileNumber: -1,\r\n      assignTo: localStorage.getItem(\"adminID\"),\r\n      profilePageNo: -1,\r\n      fromSource: \"\",\r\n      jobCategory: \"\",\r\n      currentStatus: \"\",\r\n      dateFilterType: \"\",\r\n      // createdTimeStart: \"2020-01-01\",\r\n      // createdTimeEnd: dateFormate(addDaysToDate(1)),\r\n      expYearsMax: -1,\r\n      expYearsMin: -1,\r\n      page: \"\",\r\n      currentPipeline: \"New candidate lead\",\r\n      stages: 3,\r\n      startDate: dateFormate(modifyDate(\"sub\", 7)),\r\n      endDate: dateFormate(new Date()),\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log(filterDetails);\r\n  }, [filterDetails]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"70vw\",\r\n      }}\r\n    >\r\n      <div className=\"d-flex justify-content-between \">\r\n        <span>\r\n          <p>\r\n            <b>Not Qualified Filter</b>{\" \"}\r\n          </p>\r\n        </span>\r\n        <span\r\n          onClick={() => {\r\n            onclose();\r\n          }}\r\n          className=\"btn btn-danger\"\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          <AiOutlineClose style={{ fontSize: \"20px\" }} />\r\n        </span>\r\n      </div>\r\n      <div className=\"row my-3 \">\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Mobile number\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={filterData.mobileNumber == -1 ? \"\" : filterData.mobileNumber}\r\n            onChange={(event) =>\r\n              handleFieldChange(\"mobileNumber\", event.target.value)\r\n            }\r\n            inputProps={{ maxLength: 15 }}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <span\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <AiOutlinePhone style={{ marginRight: \"5px\" }} /> +91\r\n                </span>\r\n              ),\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            onChange={(e) => handleFieldChange(\"assignTo\", e.target.value)}\r\n            name=\"AssignedTo\"\r\n            id=\"AssignedTo\"\r\n            className=\"form-control\"\r\n            select\r\n            label=\"Assigned To\"\r\n            value={filterData.assignTo}\r\n            defaultValue={filterData.assignTo}\r\n          >\r\n            <MenuItem value={-1}>ALL</MenuItem>\r\n            {adminList.map((el) => (\r\n              <MenuItem key={el.id} value={el.id}>\r\n                {el.userName}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </div>\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            fullWidth\r\n            label=\"Stage\"\r\n            id=\"fullWidth\"\r\n            placeholder=\"Stage\"\r\n            select\r\n            name=\"profileNo\"\r\n            value={filterData.profilePageNo}\r\n            onChange={(event) =>\r\n              handleFieldChange(\"profilePageNo\", event.target.value)\r\n            }\r\n          >\r\n            <MenuItem value={-1}>ALL</MenuItem>\r\n            <MenuItem value={1}>1</MenuItem>\r\n            <MenuItem value={2}>2</MenuItem>\r\n            <MenuItem value={3}>3</MenuItem>\r\n            <MenuItem value={4}>4</MenuItem>\r\n            <MenuItem value={5}>5</MenuItem>\r\n            <MenuItem value={6}>6</MenuItem>\r\n          </TextField>\r\n        </div>\r\n      </div>\r\n      <div className=\"row my-3 \">\r\n        <div className=\"col-sm-4\">\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"select-label\">Source</InputLabel>\r\n            <Select\r\n              labelId=\"select-label\"\r\n              id=\"select\"\r\n              label=\"Select option\"\r\n              value={filterData.fromSource}\r\n              onChange={(event) =>\r\n                handleFieldChange(\"fromSource\", event.target.value)\r\n              }\r\n              // onChange={(e) => HandleCanlead(e, \"fromSource\")}\r\n            >\r\n              <MenuItem value={\"\"}>ALL</MenuItem>\r\n              <MenuItem value=\"Retention\">Old lead</MenuItem>\r\n              <MenuItem value=\"Reference\">Reference</MenuItem>\r\n              <MenuItem value=\"Whatsapp\">Whatsapp</MenuItem>\r\n              <MenuItem value=\"App\">App</MenuItem>\r\n              <MenuItem value=\"Meta lead\">Meta lead</MenuItem>\r\n              <MenuItem value=\"Naukri\">Naukri</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div className=\"col-sm-4\">\r\n          <Autocomplete\r\n            id=\"tags-outlined\"\r\n            options={options.jobCategory.map((option) => option)}\r\n            fullWidth\r\n            getOptionLabel={(option) => option}\r\n            // onChange={(event, value) => {\r\n            //   updateJobCategory(value);\r\n            //   console.log(value, \"value jobs\");\r\n            // }}\r\n\r\n            value={filterData.jobCategory}\r\n            onChange={(event, value, reason) => {\r\n              if (reason === \"clear\") {\r\n                handleFieldChange(\"jobCategory\", \"\");\r\n              } else {\r\n                handleFieldChange(\"jobCategory\", value);\r\n              }\r\n            }}\r\n            filterSelectedOptions\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Job category\"\r\n                placeholder=\"Job category\"\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        {/* <div className=\"col-sm-4\">\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"select-label\">Status</InputLabel>\r\n            <Select\r\n              labelId=\"select-label\"\r\n              id=\"select\"\r\n              label=\"Select option\"\r\n              value={filterData.status}\r\n              onChange={(event) =>\r\n                handleFieldChange(\"currentStatus\", event.target.value)\r\n              }\r\n            >\r\n              <MenuItem value=\"\">ALL</MenuItem>\r\n              <MenuItem value=\"Qualified\">Qualified</MenuItem>\r\n              <MenuItem value=\"NotQualified\">Not Qualified</MenuItem>\r\n              <MenuItem value=\"CallNotAttend\">Not Attend</MenuItem>\r\n              <MenuItem value=\"nostatus\">No Status</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div> */}\r\n        <div className=\"col-sm-4\">\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <TextField\r\n              label=\"Created on\"\r\n              id=\"basic-button\"\r\n              value={`${filterData.dateFilterType}`}\r\n              // value={`${dateRange.start} - ${dateRange.end}`}\r\n              aria-controls={open ? \"basic-menu\" : undefined}\r\n              aria-haspopup=\"true\"\r\n              aria-expanded={open ? \"true\" : undefined}\r\n              onClick={handleClick}\r\n            ></TextField>\r\n            <Menu\r\n              id=\"basic-menu\"\r\n              anchorEl={anchorEl}\r\n              open={open}\r\n              onClose={handleClose}\r\n              fullWidth\r\n              MenuListProps={{\r\n                \"aria-labelledby\": \"basic-button\",\r\n              }}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"today\");\r\n                }}\r\n                style={{ width: \"180px\" }}\r\n              >\r\n                Today\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"yesterday\");\r\n                }}\r\n              >\r\n                Yesterday\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"lastWeek\");\r\n                }}\r\n              >\r\n                Last 1 Week\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"lastTwoWeeks\");\r\n                }}\r\n              >\r\n                Last 2 Week\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"lastMonth\");\r\n                }}\r\n              >\r\n                Last Month\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"custom\");\r\n                }}\r\n              >\r\n                Custom Date\r\n              </MenuItem>\r\n            </Menu>\r\n          </FormControl>\r\n          {showCustom && (\r\n            <MyModal>\r\n              <ModalContainer\r\n                zIndex={1005}\r\n                childComponent={\r\n                  <div\r\n                    style={{\r\n                      minWidth: \"400px\",\r\n                      width: \"auto\",\r\n                    }}\r\n                  >\r\n                    <>\r\n                      <div>\r\n                        <form>\r\n                          <p className=\"text-center \">Select Custom Date </p>\r\n                          <div className=\"mt-2\">\r\n                            <label htmlFor=\"start\">From</label>\r\n                            <input\r\n                              className={`form-control ${\r\n                                validationErrors.start ? \"is-invalid\" : \"\"\r\n                              }`}\r\n                              style={{ width: \"100%\" }}\r\n                              type=\"date\"\r\n                              id=\"start\"\r\n                              onChange={(value) =>\r\n                                handleCustomDate(value, \"startDate\")\r\n                              }\r\n                              value={filterData.createdTimeStart}\r\n                              name=\"trip-start\"\r\n                              min=\"2020-01-01\"\r\n                              max={new Date().toISOString().split(\"T\")[0]}\r\n                            />\r\n                            {validationErrors.start && (\r\n                              <div className=\"invalid-feedback\">\r\n                                Start date is required.\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"mt-2\">\r\n                            <label htmlFor=\"end\">To</label>\r\n                            <input\r\n                              className={`form-control ${\r\n                                validationErrors.end ? \"is-invalid\" : \"\"\r\n                              }`}\r\n                              value={filterData.createdTimeEnd}\r\n                              style={{ width: \"100%\" }}\r\n                              type=\"date\"\r\n                              id=\"end\"\r\n                              onChange={(value) =>\r\n                                handleCustomDate(value, \"endDate\")\r\n                              }\r\n                              name=\"trip-end\"\r\n                              min=\"2020-01-01\"\r\n                              max={new Date().toISOString().split(\"T\")[0]}\r\n                            />\r\n                            {validationErrors.end && (\r\n                              <div className=\"invalid-feedback\">\r\n                                End date is required.\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-end mt-3 \">\r\n                            <button\r\n                              onClick={() => {\r\n                                setValidationErrors({\r\n                                  start: false,\r\n                                  end: false,\r\n                                });\r\n                                setshowCustom(false);\r\n                              }}\r\n                              style={{\r\n                                backgroundColor: \"#b2261c\",\r\n                              }}\r\n                              className=\"btn rounded-pill text-white px-4  me-2\"\r\n                            >\r\n                              Close\r\n                            </button>\r\n                            <button\r\n                              onClick={handleApplyCustomDate}\r\n                              // color=\"primary\"\r\n                              className=\"btn rounded-pill text-white px-4\"\r\n                              style={{\r\n                                backgroundColor: \"#169C50\",\r\n                              }}\r\n                            >\r\n                              Apply\r\n                            </button>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </>\r\n                  </div>\r\n                }\r\n              />\r\n            </MyModal>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row my-3 \">\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            onChange={(event) =>\r\n              handleFieldChange(\"expYearsMin\", event.target.value)\r\n            }\r\n            value={filterData.expYearsMin}\r\n            name=\"experience\"\r\n            id=\"experience\"\r\n            className=\"form-control\"\r\n            select\r\n            label=\"Min experience\"\r\n          >\r\n            {experience.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </div>\r\n\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            onChange={(event) =>\r\n              handleFieldChange(\"expYearsMax\", event.target.value)\r\n            }\r\n            value={filterData.expYearsMax}\r\n            name=\"experience\"\r\n            id=\"experience\"\r\n            className=\"form-control\"\r\n            select\r\n            label=\"Max experience\"\r\n          >\r\n            {experience.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex justify-content-end flex-row\">\r\n        <button onClick={clearAllFilter} className=\"btn btn-danger mx-2\">\r\n          Clear\r\n        </button>\r\n        <button onClick={handleSubmit} className=\"btn btn-success\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotQualifiedFilter;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport style from \"../pipeline.module.scss\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport { Pagination } from \"@mui/material\";\r\nimport { FaFilter } from \"react-icons/fa\";\r\nimport { LuRefreshCw } from \"react-icons/lu\";\r\nimport accordionstyle from \"../../../Candidate/CandidateQualifyForm/QualifyForm.module.scss\";\r\nimport {\r\n  GetCanLeadPipeline,\r\n  GetCandidateQualifyDetials,\r\n  PutCandidateType,\r\n  getCandidateLead,\r\n  getcandidateDetails,\r\n} from \"../../../../apiServices\";\r\nimport {\r\n  MyModal,\r\n  addDaysToDate,\r\n  dateFormate,\r\n  modifyDate,\r\n} from \"../../../../utility\";\r\nimport ModalContainer from \"../../../../components/modal_popup\";\r\nimport CandidateFBLeadDetailsview from \"../../../../components/ModalPopups/CandidateDetails/FBLeadDetailsview\";\r\nimport CandidateLeadPopup from \"../../../../components/ModalPopups/CandidateLeadPopup\";\r\nimport {\r\n  CandidatePipelineActions,\r\n  commonPopupActions,\r\n} from \"../../../../redux-store/store\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport LeadPipelineFilter from \"./LeadPipelineFilter\";\r\nimport { useSelector } from \"react-redux\";\r\nimport QualifyFresherform from \"../../../Candidate/CandidateQualifyForm/FresherForm\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport ExperienceForm from \"../../../Candidate/CandidateQualifyForm/ExperienceForm\";\r\nimport SuccessTick from \"../../../../components/success_tick\";\r\nimport CallRemainderFilter from \"./callRemainderFilter.\";\r\nimport NotQualifiedFilter from \"./notQualifiedFilter\";\r\nimport { HiOutlineRefresh } from \"react-icons/hi\";\r\n\r\nfunction NotQualifiedPipeline() {\r\n  const [leadData, setLeadData] = useState({\r\n    data: [],\r\n  });\r\n\r\n  let filterDetails = useSelector(\r\n    (state) => state.CandidatePipelineDetails.notQualifiedFilter\r\n  );\r\n\r\n  let refreshPage = useSelector(\r\n    (state) => state.CandidatePipelineDetails.refreshCountIncrement\r\n  );\r\n\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [leadQualifyFormOpen, setLeadQualifyFormOpen] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  const [leadDetails, setleadDetails] = useState(\"\");\r\n  const [showSuccessForm, setshowSuccessForm] = useState(\"\");\r\n  const [isRotating, setIsRotating] = useState(false);\r\n  const [showLeadDetails, setShowLeadDetails] = useState({\r\n    show: false,\r\n    id: 1,\r\n  });\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [showRedDot, setShowRedDot] = useState(false);\r\n  const Dispatch = useDispatch();\r\n\r\n  const handleCandidateDetails = async (candidateleadId, type) => {\r\n    let data;\r\n    if (type === \"CandidateLead\") {\r\n      data = await getCandidateLead(candidateleadId);\r\n    } else if (type === \"RegisterCandidate\") {\r\n      data = await getcandidateDetails(candidateleadId);\r\n    }\r\n\r\n    // Dispatch action to show the popup and pass the fetched data\r\n    Dispatch(\r\n      commonPopupActions.setShowPopup({\r\n        name: \"candidateDetails\",\r\n        id: candidateleadId,\r\n        type: type,\r\n        data: data,\r\n      })\r\n    );\r\n  };\r\n\r\n  async function fetchData() {\r\n    setIsRotating(true);\r\n    let data = await GetCanLeadPipeline(filterDetails);\r\n\r\n    if (data.status) {\r\n      setLeadData(data);\r\n      setTotalCount(data.totalElements);\r\n    } else {\r\n      setLeadData({\r\n        data: [],\r\n      });\r\n      setTotalCount(0);\r\n    }\r\n    setTimeout(() => {\r\n      setIsRotating(false);\r\n    }, 1000);\r\n  }\r\n  useEffect(() => {\r\n    fetchData();\r\n    setShowRedDot(ShowRedDot(initialFilterObj, filterDetails));\r\n  }, [filterDetails, refreshPage]);\r\n\r\n  function handleOpenQualifyForm() {\r\n    setLeadQualifyFormOpen(true);\r\n    GetCandidateQualifyDetials(leadDetails.mobileNumber)\r\n      .then((data) => {\r\n        if (data && data.canLeadDetails) {\r\n          setSelectedOption(\r\n            data.canLeadDetails?.experienced === true ? \"experience\" : \"fresher\"\r\n          );\r\n        } else {\r\n          console.error(\"CanLeadDetails not available in data:\", data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching candidate details:\", error);\r\n      });\r\n  }\r\n  const handleOptionChange = (event) => {\r\n    const selectedValue = event.target.value;\r\n    setSelectedOption(selectedValue);\r\n\r\n    let experiencedValue = false;\r\n    if (selectedValue === \"experience\") {\r\n      experiencedValue = true;\r\n    }\r\n\r\n    PutCandidateType(experiencedValue, leadDetails.mobileNumber, \"\").then(\r\n      (data) => {\r\n        console.log(\r\n          \"Data Format\",\r\n          data,\r\n          \"mobile number \",\r\n          leadDetails.mobileNumber\r\n        );\r\n      }\r\n    );\r\n  };\r\n  function handleCloseQualifyForm() {\r\n    setSelectedOption(\"\");\r\n    setLeadQualifyFormOpen(false);\r\n    fetchData();\r\n  }\r\n  function handleQualifyFormSubmit() {\r\n    setshowSuccessForm(true);\r\n\r\n    setTimeout(() => {\r\n      setshowSuccessForm(false);\r\n      setSelectedOption(\"\");\r\n      setLeadQualifyFormOpen(false);\r\n    }, 1000);\r\n    fetchData();\r\n  }\r\n\r\n  function paginationChange(event, page) {\r\n    Dispatch(\r\n      CandidatePipelineActions.setPageChange({\r\n        type: \"notQualifiedFilter\",\r\n        value: page - 1,\r\n      })\r\n    );\r\n  }\r\n\r\n  let initialFilterObj = {\r\n    mobileNumber: -1,\r\n    assignTo: localStorage.getItem(\"adminID\"),\r\n    profilePageNo: -1,\r\n    fromSource: \"\",\r\n    jobCategory: \"\",\r\n    currentStatus: \"\",\r\n    dateFilterType: \"\",\r\n    // createdTimeStart: \"2020-01-01\",\r\n    // createdTimeEnd: dateFormate(addDaysToDate(1)),\r\n    expYearsMax: -1,\r\n    expYearsMin: -1,\r\n    page: \"\",\r\n    currentPipeline: \"New candidate lead\",\r\n    stages: 3,\r\n    startDate: dateFormate(modifyDate(\"sub\", 7)),\r\n    endDate: dateFormate(new Date()),\r\n  };\r\n\r\n  function ShowRedDot(obj1, obj2) {\r\n    // Omitting the 'page' key from both objects\r\n    const obj1WithoutPage = { ...obj1 };\r\n    delete obj1WithoutPage.page;\r\n\r\n    const obj2WithoutPage = { ...obj2 };\r\n    delete obj2WithoutPage.page;\r\n    for (let key in obj1WithoutPage) {\r\n      if (obj1WithoutPage.hasOwnProperty(key)) {\r\n        if (obj1WithoutPage[key] !== obj2WithoutPage[key]) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <div className={`${style.pipelineContainer} mx-2`}>\r\n      <div className={`${style.headerCard} p-2 d-flex justify-content-between`}>\r\n        <b>Not Qualified ({totalCount}) </b>{\" \"}\r\n        <div className=\"mt-0\">\r\n          <div className=\"d-inline-block\">\r\n            <span\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => {\r\n                fetchData();\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <HiOutlineRefresh\r\n                className={`${\r\n                  isRotating ? style.refreshRotate : style.refreshcolor\r\n                }`}\r\n              />\r\n            </span>\r\n          </div>{\" \"}\r\n          <div\r\n            onClick={() => {\r\n              setShowFilter(true);\r\n            }}\r\n            className=\"d-inline-block mx-2\"\r\n            style={{ cursor: \"pointer\", color: \"#858585\" }}\r\n          >\r\n            <FaFilter />\r\n            <p\r\n              style={{\r\n                backgroundColor: showRedDot ? \"red\" : \"transparent\",\r\n                width: \"9px\",\r\n                height: \"9px\",\r\n                marginTop: \"-12px\",\r\n                zIndex: 1000,\r\n                marginLeft: \"10px\",\r\n                borderRadius: \"50%\",\r\n              }}\r\n            ></p>{\" \"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`${style.bodyContainer}`}>\r\n        {leadData.data.map((el) => (\r\n          <div\r\n            key={el.id}\r\n            onClick={() => {\r\n              setleadDetails(el);\r\n            }}\r\n          >\r\n            <div className={`${style.bodyCard} p-1 `}>\r\n              <div className={`${style.textContent} p-1 `}>\r\n                <b\r\n                  onClick={() => {\r\n                    handleCandidateDetails(el.id, \"CandidateLead\");\r\n                  }}\r\n                  className={style.candidateName}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  {el.name ? el.name : \"-\"} {el.lastName ? el.lastName : \"\"}\r\n                </b>{\" \"}\r\n                <br />\r\n                {el.jobCategory ? el.jobCategory : \"-\"} <br />\r\n                {/* {el.mobileNumber ? el.mobileNumber : \"-\"} */}\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <div>{el.mobileNumber ? el.mobileNumber : \"-\"}</div>\r\n                  <b\r\n                    style={{\r\n                      border: \"1px solid yellow\",\r\n                      backgroundColor: \"lightyellow\",\r\n                      fontSize: \"10px\",\r\n                      borderRadius: \"8px\",\r\n                      padding: \"4px\",\r\n                    }}\r\n                  >\r\n                    {el.fromSource === \"Retention\"\r\n                      ? \"Old lead\"\r\n                      : el.fromSource === null\r\n                      ? \"Meta lead\"\r\n                      : el.fromSource}\r\n                  </b>\r\n                </div>\r\n              </div>\r\n              <div\r\n                style={{ marginTop: \"-20px\", marginBottom: \"17px\" }}\r\n                className=\"d-flex justify-content-end\"\r\n              >\r\n                <div>\r\n                  <div className=\"dropdown\">\r\n                    {/* <span\r\n                      style={{ cursor: \"pointer\" }}\r\n                      id=\"dropdownMenuButton1\"\r\n                      data-bs-toggle=\"dropdown\"\r\n                      aria-expanded=\"false\"\r\n                    >\r\n                      <BsThreeDotsVertical />\r\n                    </span>\r\n                    <ul\r\n                      className=\"dropdown-menu\"\r\n                      aria-labelledby=\"dropdownMenuButton1\"\r\n                    >\r\n                      <li\r\n                        onClick={() => {\r\n                          handleOpenQualifyForm();\r\n                        }}\r\n                      >\r\n                        <a className=\"dropdown-item\" href=\"#\">\r\n                          Qualified\r\n                        </a>\r\n                      </li>\r\n                      <li>\r\n                        <a className=\"dropdown-item\" href=\"#\">\r\n                          Not Qualified\r\n                        </a>\r\n                      </li>\r\n\r\n                      <li>\r\n                        <a className=\"dropdown-item\" href=\"#\">\r\n                          Call Remainder\r\n                        </a>\r\n                      </li>\r\n                    </ul> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"mt-3 d-grid justify-content-center\">\r\n        <Pagination\r\n          // variant=\"outlined\"\r\n          shape=\"rounded\"\r\n          color=\"success\"\r\n          boundaryCount={1}\r\n          siblingCount={0}\r\n          onChange={paginationChange}\r\n          count={leadData.totalPages}\r\n          size=\"small\"\r\n        />\r\n      </div>\r\n\r\n      {showFilter && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            // zIndex={2}\r\n            childComponent={\r\n              <>\r\n                <NotQualifiedFilter\r\n                  onclose={() => {\r\n                    setShowFilter(false);\r\n                  }}\r\n                />\r\n              </>\r\n            }\r\n          />\r\n        </MyModal>\r\n      )}\r\n\r\n      {leadQualifyFormOpen && (\r\n        <>\r\n          <MyModal>\r\n            <ModalContainer\r\n              childComponent={\r\n                <>\r\n                  <div\r\n                    className={`container d-flex align-itmes-center justify-content-between`}\r\n                  >\r\n                    <div className=\"\">\r\n                      <p>\r\n                        <b>Candidate lead qualify form</b>\r\n                      </p>\r\n                      <div className=\"d-flex\">\r\n                        {\" \"}\r\n                        <div className={`me-2  ${accordionstyle.radioInput}`}>\r\n                          {/* <label className=\"form-check-label me-3\"> */}\r\n                          <input\r\n                            type=\"radio\"\r\n                            name=\"fresher\"\r\n                            id=\"fresherYes\"\r\n                            value=\"fresher\"\r\n                            className={`form-check-input `}\r\n                            checked={selectedOption === \"fresher\"}\r\n                            onChange={handleOptionChange}\r\n                          />\r\n                          <label for=\"fresherYes\">Fresher</label>\r\n                          {/* </label> */}\r\n                        </div>\r\n                        <div className={`me-2  ${accordionstyle.radioInput}`}>\r\n                          <label className=\"form-check-label\">\r\n                            <input\r\n                              type=\"radio\"\r\n                              name=\"experience\"\r\n                              id=\"experienceNo\"\r\n                              value=\"experience\"\r\n                              className={`form-check-input `}\r\n                              checked={selectedOption === \"experience\"}\r\n                              onChange={handleOptionChange}\r\n                            />\r\n                            <label for=\"experienceNo\">Experience</label>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"ms-5\">\r\n                      <div\r\n                        className=\"btn btn-outline-danger\"\r\n                        onClick={handleCloseQualifyForm}\r\n                      >\r\n                        <AiOutlineClose />{\" \"}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <div>\r\n                      {selectedOption === \"fresher\" ? (\r\n                        <>\r\n                          {/* <div className={`${accordionstyle.Container}`}> */}{\" \"}\r\n                          <QualifyFresherform\r\n                            mobilenumber={leadDetails.mobileNumber}\r\n                            whatsappNumber={leadDetails.whatsappNumber}\r\n                            Reloadpage={handleQualifyFormSubmit}\r\n                          />\r\n                          {/* </div> */}\r\n                        </>\r\n                      ) : selectedOption === \"experience\" ? (\r\n                        // <ExperinenceWorkingform\r\n                        //   mobilenumber={leadDetails.mobileNumber}\r\n                        // />\r\n                        <ExperienceForm\r\n                          mobileNumber={leadDetails.mobileNumber}\r\n                          whatsappNumber={leadDetails.whatsappNumber}\r\n                          Reloadpage={handleQualifyFormSubmit}\r\n                        />\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n          </MyModal>\r\n        </>\r\n      )}\r\n      {showSuccessForm && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            zIndex=\"5000\"\r\n            childComponent={<SuccessTick HeadText=\"Successfully Submit\" />}\r\n          />\r\n        </MyModal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotQualifiedPipeline;\r\n","import {\r\n  Autocomplete,\r\n  FormControl,\r\n  InputLabel,\r\n  Menu,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { AiOutlineClose, AiOutlinePhone } from \"react-icons/ai\";\r\nimport {\r\n  GetAllsdminDetails,\r\n  getJobFilterOptions,\r\n} from \"../../../../apiServices\";\r\nimport { MyModal, addDaysToDate, dateFormate } from \"../../../../utility\";\r\nimport ModalContainer from \"../../../../components/modal_popup\";\r\nimport { IoMdClose } from \"react-icons/io\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CandidatePipelineActions } from \"../../../../redux-store/store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { purple, red } from \"@mui/material/colors\";\r\n\r\nfunction CanFilter({ onclose }) {\r\n  let filterDetails = useSelector(\r\n    (state) => state.CandidatePipelineDetails.candidateFilter\r\n  );\r\n\r\n  const [filterData, setFilterData] = useState({\r\n    mobileNumber: filterDetails.mobileNumber,\r\n    assignTo: filterDetails.assignTo,\r\n    profilePageNo: filterDetails.profilePageNo,\r\n    fromSource: filterDetails.fromSource,\r\n    jobCategory: filterDetails.jobCategory,\r\n    currentStatus: filterDetails.currentStatus,\r\n    dateFilterType: filterDetails.dateFilterType,\r\n    expYearsMax: filterDetails.expYearsMax,\r\n    expYearsMin: filterDetails.expYearsMin,\r\n    page: 0,\r\n    currentPipeline: filterDetails.currentPipeline,\r\n    stages: filterDetails.stages,\r\n    startDate: \"2020-01-01\",\r\n    endDate: dateFormate(new Date()),\r\n  });\r\n\r\n  const [adminList, setAdminList] = useState([]);\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const [showCustom, setshowCustom] = useState(false);\r\n\r\n  const [validationErrors, setValidationErrors] = useState({\r\n    start: false,\r\n    end: false,\r\n  });\r\n\r\n  const experience = [\r\n    {\r\n      value: \"0\",\r\n      label: \"0\",\r\n    },\r\n    {\r\n      value: \"1\",\r\n      label: \"1\",\r\n    },\r\n    {\r\n      value: \"2\",\r\n      label: \"2\",\r\n    },\r\n    {\r\n      value: \"3\",\r\n      label: \"3\",\r\n    },\r\n    {\r\n      value: \"4\",\r\n      label: \"4\",\r\n    },\r\n\r\n    {\r\n      value: \"5\",\r\n      label: \"5\",\r\n    },\r\n    {\r\n      value: \"6\",\r\n      label: \"6\",\r\n    },\r\n    {\r\n      value: \"7\",\r\n      label: \"7\",\r\n    },\r\n    {\r\n      value: \"8\",\r\n      label: \"8\",\r\n    },\r\n    {\r\n      value: \"9\",\r\n      label: \"9\",\r\n    },\r\n    {\r\n      value: \"10\",\r\n      label: \"10\",\r\n    },\r\n    {\r\n      value: \"11\",\r\n      label: \"11\",\r\n    },\r\n    {\r\n      value: \"12\",\r\n      label: \"12\",\r\n    },\r\n    {\r\n      value: \"13\",\r\n      label: \"13\",\r\n    },\r\n    {\r\n      value: \"14\",\r\n      label: \"14\",\r\n    },\r\n    {\r\n      value: \"15+\",\r\n      label: \"15+\",\r\n    },\r\n  ];\r\n\r\n  const Dispatch = useDispatch();\r\n\r\n  function handleCustomDate(value, type) {\r\n    const val = value.target.value;\r\n\r\n    if (type === \"startDate\") {\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        createdTimeStart: val,\r\n        dateFilterType: \"custom\",\r\n      }));\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        start: false,\r\n      }));\r\n    } else {\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        createdTimeEnd: val,\r\n        dateFilterType: \"custom\",\r\n      }));\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        end: false,\r\n      }));\r\n    }\r\n  }\r\n\r\n  const isFormValid = () => {\r\n    const isValid = filterData.createdTimeStart && filterData.createdTimeEnd;\r\n\r\n    if (!filterData.createdTimeStart) {\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        start: true,\r\n      }));\r\n    }\r\n\r\n    if (!filterData.createdTimeEnd) {\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        end: true,\r\n      }));\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n  const handleApplyCustomDate = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isFormValid()) {\r\n      // console.log(\"Form submitted:\", dateRange);\r\n      setValidationErrors({\r\n        start: false,\r\n        end: false,\r\n      });\r\n      setshowCustom(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = (val) => {\r\n    console.log(val);\r\n\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const [options, setOptions] = useState({\r\n    jobCategory: [],\r\n  });\r\n\r\n  const handleDateSelect = (val) => {\r\n    let selectedOption = val;\r\n    const today = new Date();\r\n    let endDate = new Date();\r\n    // endDate.setDate(endDate.getDate() + 1);\r\n    if (selectedOption === \"lastWeek\") {\r\n      const startDate = new Date();\r\n\r\n      startDate.setDate(today.getDate() - 7);\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last 1 Week\",\r\n        createdTimeStart: startDate.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"today\") {\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Today\",\r\n        createdTimeStart: today.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"lastMonth\") {\r\n      const startDate = new Date();\r\n      startDate.setMonth(startDate.getMonth() - 1);\r\n\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last Month\",\r\n        createdTimeStart: startDate.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"lastTwoWeeks\") {\r\n      const startDate = new Date(today);\r\n      startDate.setDate(today.getDate() - 13);\r\n\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last 2 Week\",\r\n        createdTimeStart: startDate.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"yesterday\") {\r\n      const startDate = new Date();\r\n      startDate.setDate(startDate.getDate() - 1);\r\n\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Yesterday\",\r\n        createdTimeStart: startDate.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"custom\") {\r\n      setshowCustom(true);\r\n      setAnchorEl(null);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getJobFilterOptions().then((data) => {\r\n      setOptions((prev) => ({\r\n        ...prev,\r\n        jobCategory: data\r\n          .filter((el) => el.category == \"job category\")\r\n          .map((el) => el.options),\r\n      }));\r\n    });\r\n    GetAllsdminDetails()\r\n      .then((data) => {\r\n        console.log(data);\r\n        const activeAdmins = data.filter((item) => !item.Deactived);\r\n        setAdminList(activeAdmins);\r\n      })\r\n      .catch(() => {\r\n        alert(\"Something Went wrong\");\r\n      });\r\n  }, []);\r\n\r\n  function handleFieldChange(field, value) {\r\n    switch (field) {\r\n      case \"mobileNumber\":\r\n        // Check if the value is numeric before updating the state\r\n        if (/^\\d*$/.test(value) || value === \"\") {\r\n          setFilterData((prev) => ({ ...prev, [field]: value }));\r\n        }\r\n        break;\r\n\r\n      default:\r\n        setFilterData((prev) => ({ ...prev, [field]: value }));\r\n        break;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    Dispatch(CandidatePipelineActions.setCandidateFilter(filterData));\r\n  }, [filterData]);\r\n\r\n  function handleSubmit() {\r\n    Dispatch(CandidatePipelineActions.setCandidateFilter(filterData));\r\n    onclose();\r\n    // console.log(CandidatePipelineActions.setCandidateFilter(filterData));\r\n  }\r\n\r\n  function clearAllFilter() {\r\n    setFilterData({\r\n      mobileNumber: -1,\r\n      assignTo: localStorage.getItem(\"adminID\"),\r\n      profilePageNo: -1,\r\n      fromSource: \"\",\r\n      jobCategory: \"\",\r\n      currentStatus: \"\",\r\n      dateFilterType: \"\",\r\n      // createdTimeStart: \"2020-01-01\",\r\n      // createdTimeEnd: dateFormate(addDaysToDate(1)),\r\n      expYearsMax: -1,\r\n      expYearsMin: -1,\r\n      page: \"\",\r\n      currentPipeline: \"\",\r\n      stages: 4,\r\n      startDate: \"2020-01-01\",\r\n      endDate: dateFormate(new Date()),\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log(filterDetails);\r\n  }, [filterDetails]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"70vw\",\r\n      }}\r\n    >\r\n      <div className=\"d-flex justify-content-between \">\r\n        <span>\r\n          <p>\r\n            <b>Registered Filter</b>{\" \"}\r\n          </p>\r\n        </span>\r\n        <span\r\n          onClick={() => {\r\n            onclose();\r\n          }}\r\n          className=\"btn btn-danger\"\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          <AiOutlineClose style={{ fontSize: \"20px\" }} />\r\n        </span>\r\n      </div>\r\n      <div className=\"row my-3 \">\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Mobile number\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={filterData.mobileNumber == -1 ? \"\" : filterData.mobileNumber}\r\n            onChange={(event) =>\r\n              handleFieldChange(\"mobileNumber\", event.target.value)\r\n            }\r\n            inputProps={{ maxLength: 15 }}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <span\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <AiOutlinePhone style={{ marginRight: \"5px\" }} /> +91\r\n                </span>\r\n              ),\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            onChange={(e) => handleFieldChange(\"assignTo\", e.target.value)}\r\n            name=\"AssignedTo\"\r\n            id=\"AssignedTo\"\r\n            className=\"form-control\"\r\n            select\r\n            label=\"Assigned To\"\r\n            value={filterData.assignTo}\r\n            defaultValue={filterData.assignTo}\r\n          >\r\n            <MenuItem value={-1}>ALL</MenuItem>\r\n            {adminList.map((el) => (\r\n              <MenuItem key={el.id} value={el.id}>\r\n                {el.userName}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </div>\r\n        <div className=\"col-sm-4\">\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <TextField\r\n              label=\"Created on\"\r\n              id=\"basic-button\"\r\n              value={`${filterData.dateFilterType}`}\r\n              // value={`${dateRange.start} - ${dateRange.end}`}\r\n              aria-controls={open ? \"basic-menu\" : undefined}\r\n              aria-haspopup=\"true\"\r\n              aria-expanded={open ? \"true\" : undefined}\r\n              onClick={handleClick}\r\n            ></TextField>\r\n            <Menu\r\n              id=\"basic-menu\"\r\n              anchorEl={anchorEl}\r\n              open={open}\r\n              onClose={handleClose}\r\n              fullWidth\r\n              MenuListProps={{\r\n                \"aria-labelledby\": \"basic-button\",\r\n              }}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"today\");\r\n                }}\r\n                style={{ width: \"180px\" }}\r\n              >\r\n                Today\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"yesterday\");\r\n                }}\r\n              >\r\n                Yesterday\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"lastWeek\");\r\n                }}\r\n              >\r\n                Last 1 Week\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"lastTwoWeeks\");\r\n                }}\r\n              >\r\n                Last 2 Week\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"lastMonth\");\r\n                }}\r\n              >\r\n                Last Month\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"custom\");\r\n                }}\r\n              >\r\n                Custom Date\r\n              </MenuItem>\r\n            </Menu>\r\n          </FormControl>\r\n          {showCustom && (\r\n            <MyModal>\r\n              <ModalContainer\r\n                zIndex={1005}\r\n                childComponent={\r\n                  <div\r\n                    style={{\r\n                      minWidth: \"400px\",\r\n                      width: \"auto\",\r\n                    }}\r\n                  >\r\n                    <>\r\n                      <div>\r\n                        <form>\r\n                          <p className=\"text-center \">Select Custom Date </p>\r\n                          <div className=\"mt-2\">\r\n                            <label htmlFor=\"start\">From</label>\r\n                            <input\r\n                              className={`form-control ${\r\n                                validationErrors.start ? \"is-invalid\" : \"\"\r\n                              }`}\r\n                              style={{ width: \"100%\" }}\r\n                              type=\"date\"\r\n                              id=\"start\"\r\n                              onChange={(value) =>\r\n                                handleCustomDate(value, \"startDate\")\r\n                              }\r\n                              value={filterData.createdTimeStart}\r\n                              name=\"trip-start\"\r\n                              min=\"2020-01-01\"\r\n                              max={new Date().toISOString().split(\"T\")[0]}\r\n                            />\r\n                            {validationErrors.start && (\r\n                              <div className=\"invalid-feedback\">\r\n                                Start date is required.\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"mt-2\">\r\n                            <label htmlFor=\"end\">To</label>\r\n                            <input\r\n                              className={`form-control ${\r\n                                validationErrors.end ? \"is-invalid\" : \"\"\r\n                              }`}\r\n                              value={filterData.createdTimeEnd}\r\n                              style={{ width: \"100%\" }}\r\n                              type=\"date\"\r\n                              id=\"end\"\r\n                              onChange={(value) =>\r\n                                handleCustomDate(value, \"endDate\")\r\n                              }\r\n                              name=\"trip-end\"\r\n                              min=\"2020-01-01\"\r\n                              max={new Date().toISOString().split(\"T\")[0]}\r\n                            />\r\n                            {validationErrors.end && (\r\n                              <div className=\"invalid-feedback\">\r\n                                End date is required.\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-end mt-3 \">\r\n                            <button\r\n                              onClick={() => {\r\n                                setValidationErrors({\r\n                                  start: false,\r\n                                  end: false,\r\n                                });\r\n                                setshowCustom(false);\r\n                              }}\r\n                              style={{\r\n                                backgroundColor: \"#b2261c\",\r\n                              }}\r\n                              className=\"btn rounded-pill text-white px-4  me-2\"\r\n                            >\r\n                              Close\r\n                            </button>\r\n                            <button\r\n                              onClick={handleApplyCustomDate}\r\n                              // color=\"primary\"\r\n                              className=\"btn rounded-pill text-white px-4\"\r\n                              style={{\r\n                                backgroundColor: \"#169C50\",\r\n                              }}\r\n                            >\r\n                              Apply\r\n                            </button>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </>\r\n                  </div>\r\n                }\r\n              />\r\n            </MyModal>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"row my-3 \">\r\n        <div className=\"col-sm-4\">\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"select-label\">Source</InputLabel>\r\n            <Select\r\n              labelId=\"select-label\"\r\n              id=\"select\"\r\n              label=\"Select option\"\r\n              value={filterData.fromSource}\r\n              onChange={(event) =>\r\n                handleFieldChange(\"fromSource\", event.target.value)\r\n              }\r\n              // onChange={(e) => HandleCanlead(e, \"fromSource\")}\r\n            >\r\n              <MenuItem value={\"\"}>ALL</MenuItem>\r\n              <MenuItem value=\"Retention\">Old lead</MenuItem>\r\n              <MenuItem value=\"Reference\">Reference</MenuItem>\r\n              <MenuItem value=\"Whatsapp\">Whatsapp</MenuItem>\r\n              <MenuItem value=\"App\">App</MenuItem>\r\n              <MenuItem value=\"Meta lead\">Meta lead</MenuItem>\r\n              <MenuItem value=\"Naukri\">Naukri</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div className=\"col-sm-4\">\r\n          <Autocomplete\r\n            id=\"tags-outlined\"\r\n            options={options.jobCategory.map((option) => option)}\r\n            fullWidth\r\n            getOptionLabel={(option) => option}\r\n            // onChange={(event, value) => {\r\n            //   updateJobCategory(value);\r\n            //   console.log(value, \"value jobs\");\r\n            // }}\r\n\r\n            value={filterData.jobCategory}\r\n            onChange={(event, value, reason) => {\r\n              if (reason === \"clear\") {\r\n                handleFieldChange(\"jobCategory\", \"\");\r\n              } else {\r\n                handleFieldChange(\"jobCategory\", value);\r\n              }\r\n            }}\r\n            filterSelectedOptions\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Job category\"\r\n                placeholder=\"Job category\"\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        {/* <div className=\"col-sm-4\">\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"select-label\">Status</InputLabel>\r\n            <Select\r\n              labelId=\"select-label\"\r\n              id=\"select\"\r\n              label=\"Select option\"\r\n              value={filterData.status}\r\n              onChange={(event) =>\r\n                handleFieldChange(\"currentStatus\", event.target.value)\r\n              }\r\n            >\r\n              <MenuItem value=\"\">ALL</MenuItem>\r\n              <MenuItem value=\"Qualified\">Qualified</MenuItem>\r\n              <MenuItem value=\"NotQualified\">Not Qualified</MenuItem>\r\n              <MenuItem value=\"CallNotAttend\">Not Attend</MenuItem>\r\n              <MenuItem value=\"nostatus\">No Status</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div> */}\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            onChange={(event) =>\r\n              handleFieldChange(\"expYearsMin\", event.target.value)\r\n            }\r\n            value={filterData.expYearsMin}\r\n            name=\"experience\"\r\n            id=\"experience\"\r\n            className=\"form-control\"\r\n            select\r\n            label=\"Min experience\"\r\n          >\r\n            {experience.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row my-3 \">\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            onChange={(event) =>\r\n              handleFieldChange(\"expYearsMax\", event.target.value)\r\n            }\r\n            value={filterData.expYearsMax}\r\n            name=\"experience\"\r\n            id=\"experience\"\r\n            className=\"form-control\"\r\n            select\r\n            label=\"Max experience\"\r\n          >\r\n            {experience.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex justify-content-end flex-row\">\r\n        <button onClick={clearAllFilter} className=\"btn btn-danger mx-2\">\r\n          Clear\r\n        </button>\r\n        <button onClick={handleSubmit} className=\"btn btn-success\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CanFilter;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable eqeqeq */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport style from \"../pipeline.module.scss\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport { Pagination } from \"@mui/material\";\r\nimport { FaFilter } from \"react-icons/fa\";\r\nimport { LuRefreshCw } from \"react-icons/lu\";\r\nimport accordionstyle from \"../../../Candidate/CandidateQualifyForm/QualifyForm.module.scss\";\r\nimport {\r\n  GetCanLeadPipeline,\r\n  GetCandidatePipeline,\r\n  GetCandidateQualifyDetials,\r\n  PutCandidateType,\r\n  UpdateCanPipelineStatus,\r\n  getCandidateLead,\r\n  getcandidateDetails,\r\n} from \"../../../../apiServices\";\r\nimport { MyModal, addDaysToDate, dateFormate } from \"../../../../utility\";\r\nimport ModalContainer from \"../../../../components/modal_popup\";\r\nimport CandidateFBLeadDetailsview from \"../../../../components/ModalPopups/CandidateDetails/FBLeadDetailsview\";\r\nimport CandidateLeadPopup from \"../../../../components/ModalPopups/CandidateLeadPopup\";\r\nimport {\r\n  CandidatePipelineActions,\r\n  commonPopupActions,\r\n} from \"../../../../redux-store/store\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport LeadPipelineFilter from \"./LeadPipelineFilter\";\r\nimport { useSelector } from \"react-redux\";\r\nimport QualifyFresherform from \"../../../Candidate/CandidateQualifyForm/FresherForm\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport ExperienceForm from \"../../../Candidate/CandidateQualifyForm/ExperienceForm\";\r\nimport SuccessTick from \"../../../../components/success_tick\";\r\nimport CanRegisterFilter from \"./canRegisteredFilter\";\r\nimport { HiOutlineRefresh } from \"react-icons/hi\";\r\n\r\nfunction CanRegisteredPipeline() {\r\n  const [leadData, setLeadData] = useState({\r\n    data: [],\r\n  });\r\n\r\n  let filterDetails = useSelector(\r\n    (state) => state.CandidatePipelineDetails.candidateFilter\r\n  );\r\n\r\n  let refreshPage = useSelector(\r\n    (state) => state.CandidatePipelineDetails.refreshCountIncrement\r\n  );\r\n\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [isRotating, setIsRotating] = useState(false);\r\n  const [leadDetails, setleadDetails] = useState(\"\");\r\n  const [popups, setShowPopups] = useState({\r\n    callRemainder: false,\r\n    success: false,\r\n    confirmation: false,\r\n  });\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [showRedDot, setShowRedDot] = useState(false);\r\n  const Dispatch = useDispatch();\r\n\r\n  const handleCandidateDetails = async (candidateleadId, type) => {\r\n    let data;\r\n    if (type === \"CandidateLead\") {\r\n      data = await getCandidateLead(candidateleadId);\r\n    } else if (type === \"RegisterCandidate\") {\r\n      data = await getcandidateDetails(candidateleadId);\r\n    }\r\n\r\n    // Dispatch action to show the popup and pass the fetched data\r\n    Dispatch(\r\n      commonPopupActions.setShowPopup({\r\n        name: \"candidateDetails\",\r\n        id: candidateleadId,\r\n        type: type,\r\n        data: data,\r\n      })\r\n    );\r\n  };\r\n\r\n  async function fetchData() {\r\n    setIsRotating(true);\r\n    let data = await GetCandidatePipeline(filterDetails);\r\n\r\n    if (data.status == \"success\") {\r\n      setLeadData(data);\r\n      setTotalCount(data.totalElements);\r\n    } else {\r\n      setLeadData({\r\n        data: [],\r\n      });\r\n      setTotalCount(0);\r\n    }\r\n    setTimeout(() => {\r\n      setIsRotating(false);\r\n    }, 1000);\r\n  }\r\n  useEffect(() => {\r\n    fetchData();\r\n    setShowRedDot(ShowRedDot(initialFilterObj, filterDetails));\r\n  }, [filterDetails, refreshPage]);\r\n\r\n  //   function handleOpenQualifyForm() {\r\n  //     setLeadQualifyFormOpen(true);\r\n  //     GetCandidateQualifyDetials(leadDetails.mobileNumber)\r\n  //       .then((data) => {\r\n  //         if (data && data.canLeadDetails) {\r\n  //           setSelectedOption(\r\n  //             data.canLeadDetails?.experienced === true ? \"experience\" : \"fresher\"\r\n  //           );\r\n  //         } else {\r\n  //           console.error(\"CanLeadDetails not available in data:\", data);\r\n  //         }\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.error(\"Error fetching candidate details:\", error);\r\n  //       });\r\n  //   }\r\n  //   const handleOptionChange = (event) => {\r\n  //     const selectedValue = event.target.value;\r\n  //     setSelectedOption(selectedValue);\r\n\r\n  //     let experiencedValue = false;\r\n  //     if (selectedValue === \"experience\") {\r\n  //       experiencedValue = true;\r\n  //     }\r\n\r\n  //     PutCandidateType(experiencedValue, leadDetails.mobileNumber, \"\").then(\r\n  //       (data) => {\r\n  //         console.log(\r\n  //           \"Data Format\",\r\n  //           data,\r\n  //           \"mobile number \",\r\n  //           leadDetails.mobileNumber\r\n  //         );\r\n  //       }\r\n  //     );\r\n  //   };\r\n  //   function handleCloseQualifyForm() {\r\n  //     setSelectedOption(\"\");\r\n  //     setLeadQualifyFormOpen(false);\r\n  //     fetchData();\r\n  //   }\r\n  //   function handleQualifyFormSubmit() {\r\n  //     setshowSuccessForm(true);\r\n\r\n  //     setTimeout(() => {\r\n  //       setshowSuccessForm(false);\r\n  //       setSelectedOption(\"\");\r\n  //       setLeadQualifyFormOpen(false);\r\n  //     }, 1000);\r\n  //     fetchData();\r\n  //   }\r\n\r\n  function paginationChange(event, page) {\r\n    Dispatch(\r\n      CandidatePipelineActions.setPageChange({\r\n        type: \"candidateFilter\",\r\n        value: page - 1,\r\n      })\r\n    );\r\n  }\r\n  function showNotQualify(value) {\r\n    setShowPopups((prev) => ({ ...prev, confirmation: value }));\r\n  }\r\n  function submitNotQualified() {\r\n    let obj = {\r\n      notQualified: true,\r\n      id: leadDetails.id,\r\n    };\r\n    UpdateCanPipelineStatus(obj).then(() => {\r\n      showNotQualify(false);\r\n      Dispatch(CandidatePipelineActions.setRefreshCount());\r\n    }, []);\r\n  }\r\n\r\n  let initialFilterObj = {\r\n    mobileNumber: -1,\r\n    assignTo: localStorage.getItem(\"adminID\"),\r\n    profilePageNo: -1,\r\n    fromSource: \"\",\r\n    jobCategory: \"\",\r\n    currentStatus: \"\",\r\n    dateFilterType: \"\",\r\n    // createdTimeStart: \"2020-01-01\",\r\n    // createdTimeEnd: dateFormate(addDaysToDate(1)),\r\n    expYearsMax: -1,\r\n    expYearsMin: -1,\r\n    page: \"\",\r\n    currentPipeline: \"\",\r\n    stages: 4,\r\n    startDate: \"2020-01-01\",\r\n    endDate: dateFormate(new Date()),\r\n  };\r\n\r\n  function ShowRedDot(obj1, obj2) {\r\n    // Omitting the 'page' key from both objects\r\n    const obj1WithoutPage = { ...obj1 };\r\n    delete obj1WithoutPage.page;\r\n\r\n    const obj2WithoutPage = { ...obj2 };\r\n    delete obj2WithoutPage.page;\r\n    for (let key in obj1WithoutPage) {\r\n      if (obj1WithoutPage.hasOwnProperty(key)) {\r\n        if (obj1WithoutPage[key] !== obj2WithoutPage[key]) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  return (\r\n    <div className={`${style.pipelineContainer} mx-2`}>\r\n      <div className={`${style.headerCard} p-2 d-flex justify-content-between`}>\r\n        <b>Registered ({totalCount})</b>{\" \"}\r\n        <div className=\"mt-0\">\r\n          <div className=\"d-inline-block\">\r\n            <span\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => {\r\n                fetchData();\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <HiOutlineRefresh\r\n                className={`${\r\n                  isRotating ? style.refreshRotate : style.refreshcolor\r\n                }`}\r\n              />\r\n            </span>\r\n          </div>{\" \"}\r\n          <div\r\n            onClick={() => {\r\n              setShowFilter(true);\r\n            }}\r\n            style={{ cursor: \"pointer\", color: \"#858585\" }}\r\n            className=\"d-inline-block mx-2\"\r\n          >\r\n            <FaFilter />\r\n            <p\r\n              style={{\r\n                backgroundColor: showRedDot ? \"red\" : \"transparent\",\r\n                width: \"9px\",\r\n                height: \"9px\",\r\n                marginTop: \"-12px\",\r\n                zIndex: 1000,\r\n                marginLeft: \"10px\",\r\n                borderRadius: \"50%\",\r\n              }}\r\n            ></p>{\" \"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`${style.bodyContainer}`}>\r\n        {leadData.data.map((el) => (\r\n          <div\r\n            key={el.id}\r\n            onClick={() => {\r\n              setleadDetails(el);\r\n            }}\r\n          >\r\n            <div className={`${style.bodyCard} p-1 `}>\r\n              <div className={`${style.textContent} p-1 `}>\r\n                <b\r\n                  onClick={() => {\r\n                    handleCandidateDetails(el.id, \"RegisterCandidate\");\r\n                  }}\r\n                  className={style.candidateName}\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  {el.firstName ? el.firstName : \"-\"}{\" \"}\r\n                  {el.lastName ? el.lastName : \"\"}\r\n                </b>{\" \"}\r\n                <br />\r\n                {el.jobCategory ? el.jobCategory : \"-\"} <br />\r\n                {/* {el.mobileNumber ? el.mobileNumber : \"-\"} */}\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <div>{el.mobileNumber ? el.mobileNumber : \"-\"}</div>\r\n                  <b\r\n                    style={{\r\n                      border: \"1px solid yellow\",\r\n                      backgroundColor: \"lightyellow\",\r\n                      fontSize: \"10px\",\r\n                      borderRadius: \"8px\",\r\n                      // marginRight:\"18px\",\r\n                      padding: \"4px\",\r\n                    }}\r\n                  >\r\n                    {el.fromSource === \"Retention\"\r\n                      ? \"Old lead\"\r\n                      : el.fromSource === null\r\n                      ? \"Meta lead\"\r\n                      : el.fromSource}\r\n                  </b>\r\n                </div>\r\n              </div>\r\n              <div\r\n                style={{ marginTop: \"-20px\", marginBottom: \"17px\" }}\r\n                className=\"d-flex justify-content-end\"\r\n              >\r\n                <div>\r\n                  <div className=\"dropdown\">\r\n                    {/* <span\r\n                      style={{ cursor: \"pointer \" }}\r\n                      id=\"dropdownMenuButton1\"\r\n                      data-bs-toggle=\"dropdown\"\r\n                      aria-expanded=\"false\"\r\n                    >\r\n                      <BsThreeDotsVertical />\r\n                    </span> */}\r\n                    {/* <ul\r\n                      className=\"dropdown-menu\"\r\n                      aria-labelledby=\"dropdownMenuButton1\"\r\n                    >\r\n                         <li>\r\n                          <a\r\n                            className=\"dropdown-item\"\r\n                            href=\"#\"\r\n                            onClick={() => {\r\n                              showNotQualify(true);\r\n                            }}\r\n                          >\r\n                            Not Qualified\r\n                          </a>\r\n                        </li> \r\n                    </ul> */}\r\n                  </div>\r\n                </div>\r\n                <div></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"mt-3 d-grid justify-content-center\">\r\n        <Pagination\r\n          // variant=\"outlined\"\r\n          shape=\"rounded\"\r\n          color=\"success\"\r\n          boundaryCount={1}\r\n          siblingCount={0}\r\n          onChange={paginationChange}\r\n          count={leadData.totalPages}\r\n          size=\"small\"\r\n        />\r\n      </div>\r\n\r\n      {showFilter && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            // zIndex={2}\r\n            childComponent={\r\n              <>\r\n                <CanRegisterFilter\r\n                  onclose={() => {\r\n                    setShowFilter(false);\r\n                  }}\r\n                />\r\n              </>\r\n            }\r\n          />\r\n        </MyModal>\r\n      )}\r\n      {popups.confirmation && (\r\n        <>\r\n          <MyModal>\r\n            <ModalContainer\r\n              zIndex=\"5000\"\r\n              childComponent={\r\n                <>\r\n                  <div>\r\n                    <h4 className=\"\"> Confirmation </h4>\r\n                    <div>\r\n                      Are you sure that you want to not qualify{\" \"}\r\n                      <b> {leadDetails.name}</b>?\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end flex-row mt-3 \">\r\n                      <button\r\n                        onClick={() => {\r\n                          showNotQualify(false);\r\n                        }}\r\n                        className=\"btn btn-danger mx-3\"\r\n                      >\r\n                        No\r\n                      </button>{\" \"}\r\n                      <button\r\n                        onClick={submitNotQualified}\r\n                        className=\"btn btn-success\"\r\n                      >\r\n                        Yes\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n          </MyModal>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CanRegisteredPipeline;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable eqeqeq */\r\n/* eslint-disable no-unused-vars */\r\nimport {\r\n  Autocomplete,\r\n  FormControl,\r\n  InputLabel,\r\n  Menu,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { AiOutlineClose, AiOutlinePhone } from \"react-icons/ai\";\r\nimport {\r\n  GetAllsdminDetails,\r\n  getJobFilterOptions,\r\n} from \"../../../../apiServices\";\r\nimport {\r\n  MyModal,\r\n  addDaysToDate,\r\n  addOneyear,\r\n  addYear,\r\n  dateFormate,\r\n  getDateSevenDaysAgo,\r\n  modifyDate,\r\n} from \"../../../../utility\";\r\nimport ModalContainer from \"../../../../components/modal_popup\";\r\nimport { IoMdClose } from \"react-icons/io\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CandidatePipelineActions } from \"../../../../redux-store/store\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction InterviewFollowUpFilter({ onclose }) {\r\n  let filterDetails = useSelector(\r\n    (state) => state.CandidatePipelineDetails.interviewFollowUpFilter\r\n  );\r\n\r\n  const [filterData, setFilterData] = useState({\r\n    mobileNumber: filterDetails.mobileNumber,\r\n    assignTo: filterDetails.assignTo,\r\n    profilePageNo: filterDetails.profilePageNo,\r\n    fromSource: filterDetails.fromSource,\r\n    jobCategory: filterDetails.jobCategory,\r\n    currentStatus: filterDetails.currentStatus,\r\n    followupStatus: filterDetails.followupStatus,\r\n    dateFilterType: filterDetails.dateFilterType,\r\n    expYearsMax: filterDetails.expYearsMax,\r\n    expYearsMin: filterDetails.expYearsMin,\r\n    // createdTimeStart: filterDetails.createdTimeStart,\r\n    // createdTimeEnd: filterDetails.createdTimeEnd,\r\n    page: 0,\r\n    currentPipeline: filterDetails.currentPipeline,\r\n    // pipelineStage: filterDetails.pipelineStage,\r\n    stages: filterDetails.stages,\r\n    startDate: dateFormate(modifyDate(\"sub\", 7)),\r\n    endDate: dateFormate(new Date()),\r\n  });\r\n\r\n  const [adminList, setAdminList] = useState([]);\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const [showCustom, setshowCustom] = useState(false);\r\n\r\n  const [validationErrors, setValidationErrors] = useState({\r\n    start: false,\r\n    end: false,\r\n  });\r\n\r\n  const experience = [\r\n    {\r\n      value: \"0\",\r\n      label: \"0\",\r\n    },\r\n    {\r\n      value: \"1\",\r\n      label: \"1\",\r\n    },\r\n    {\r\n      value: \"2\",\r\n      label: \"2\",\r\n    },\r\n    {\r\n      value: \"3\",\r\n      label: \"3\",\r\n    },\r\n    {\r\n      value: \"4\",\r\n      label: \"4\",\r\n    },\r\n\r\n    {\r\n      value: \"5\",\r\n      label: \"5\",\r\n    },\r\n    {\r\n      value: \"6\",\r\n      label: \"6\",\r\n    },\r\n    {\r\n      value: \"7\",\r\n      label: \"7\",\r\n    },\r\n    {\r\n      value: \"8\",\r\n      label: \"8\",\r\n    },\r\n    {\r\n      value: \"9\",\r\n      label: \"9\",\r\n    },\r\n    {\r\n      value: \"10\",\r\n      label: \"10\",\r\n    },\r\n    {\r\n      value: \"11\",\r\n      label: \"11\",\r\n    },\r\n    {\r\n      value: \"12\",\r\n      label: \"12\",\r\n    },\r\n    {\r\n      value: \"13\",\r\n      label: \"13\",\r\n    },\r\n    {\r\n      value: \"14\",\r\n      label: \"14\",\r\n    },\r\n    {\r\n      value: \"15+\",\r\n      label: \"15+\",\r\n    },\r\n  ];\r\n\r\n  const Dispatch = useDispatch();\r\n\r\n  function handleCustomDate(value, type) {\r\n    const val = value.target.value;\r\n\r\n    if (type === \"startDate\") {\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        createdTimeStart: val,\r\n        dateFilterType: \"custom\",\r\n      }));\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        start: false,\r\n      }));\r\n    } else {\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        createdTimeEnd: val,\r\n        dateFilterType: \"custom\",\r\n      }));\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        end: false,\r\n      }));\r\n    }\r\n  }\r\n\r\n  const isFormValid = () => {\r\n    const isValid = filterData.createdTimeStart && filterData.createdTimeEnd;\r\n\r\n    if (!filterData.createdTimeStart) {\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        start: true,\r\n      }));\r\n    }\r\n\r\n    if (!filterData.createdTimeEnd) {\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        end: true,\r\n      }));\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n  const handleApplyCustomDate = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isFormValid()) {\r\n      // console.log(\"Form submitted:\", dateRange);\r\n      setValidationErrors({\r\n        start: false,\r\n        end: false,\r\n      });\r\n      setshowCustom(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = (val) => {\r\n    console.log(val);\r\n\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const [options, setOptions] = useState({\r\n    jobCategory: [],\r\n  });\r\n\r\n  const handleDateSelect = (val) => {\r\n    let selectedOption = val;\r\n    const today = new Date();\r\n    let endDate = new Date();\r\n    // endDate.setDate(endDate.getDate() + 1);\r\n    if (selectedOption === \"lastWeek\") {\r\n      const startDate = new Date();\r\n\r\n      startDate.setDate(today.getDate() - 7);\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last 1 Week\",\r\n        createdTimeStart: startDate.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"today\") {\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Today\",\r\n        createdTimeStart: today.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"lastMonth\") {\r\n      const startDate = new Date();\r\n      startDate.setMonth(startDate.getMonth() - 1);\r\n\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last Month\",\r\n        createdTimeStart: startDate.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"lastTwoWeeks\") {\r\n      const startDate = new Date(today);\r\n      startDate.setDate(today.getDate() - 13);\r\n\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last 2 Week\",\r\n        createdTimeStart: startDate.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"yesterday\") {\r\n      const startDate = new Date();\r\n      startDate.setDate(startDate.getDate() - 1);\r\n\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Yesterday\",\r\n        createdTimeStart: startDate.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"custom\") {\r\n      setshowCustom(true);\r\n      setAnchorEl(null);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getJobFilterOptions().then((data) => {\r\n      setOptions((prev) => ({\r\n        ...prev,\r\n        jobCategory: data\r\n          .filter((el) => el.category == \"job category\")\r\n          .map((el) => el.options),\r\n      }));\r\n    });\r\n    GetAllsdminDetails()\r\n      .then((data) => {\r\n        console.log(data);\r\n        const activeAdmins = data.filter((item) => !item.Deactived);\r\n        setAdminList(activeAdmins);\r\n      })\r\n      .catch(() => {\r\n        alert(\"Something Went wrong\");\r\n      });\r\n  }, []);\r\n\r\n  function handleFieldChange(field, value) {\r\n    switch (field) {\r\n      case \"mobileNumber\":\r\n        // Check if the value is numeric before updating the state\r\n        if (/^\\d*$/.test(value) || value === \"\") {\r\n          setFilterData((prev) => ({ ...prev, [field]: value }));\r\n        }\r\n        break;\r\n\r\n      default:\r\n        setFilterData((prev) => ({ ...prev, [field]: value }));\r\n        break;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    Dispatch(CandidatePipelineActions.setInterviewFollowUpFilter(filterData));\r\n  }, [filterData]);\r\n\r\n  function handleSubmit() {\r\n    Dispatch(CandidatePipelineActions.setInterviewFollowUpFilter(filterData));\r\n    onclose();\r\n    // console.log(CandidatePipelineActions.setInterviewFollowUpFilter(filterData));\r\n  }\r\n\r\n  function clearAllFilter() {\r\n    setFilterData({\r\n      mobileNumber: -1,\r\n      assignTo: localStorage.getItem(\"adminID\"),\r\n      profilePageNo: -1,\r\n      fromSource: \"\",\r\n      jobCategory: \"\",\r\n      currentStatus: \"\",\r\n      dateFilterType: \"\",\r\n      expYearsMax: -1,\r\n      expYearsMin: -1,\r\n      page: \"\",\r\n      followupStatus: 0,\r\n      currentPipeline: \"\",\r\n      // pipelineStage: \"Interview date set\",\r\n      stages: 5,\r\n      startDate: dateFormate(modifyDate(\"sub\", 7)),\r\n      endDate: dateFormate(new Date()),\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log(filterDetails);\r\n  }, [filterDetails]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"70vw\",\r\n      }}\r\n    >\r\n      <div className=\"d-flex justify-content-between \">\r\n        <span>\r\n          <p>\r\n            <b>Interview Follow Up Filter</b>{\" \"}\r\n          </p>\r\n        </span>\r\n        <span\r\n          onClick={() => {\r\n            onclose();\r\n          }}\r\n          className=\"btn btn-danger\"\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          <AiOutlineClose style={{ fontSize: \"20px\" }} />\r\n        </span>\r\n        {/* <span\r\n          onClick={() => {\r\n            onclose();\r\n          }}\r\n        >\r\n          <IoMdClose />\r\n        </span> */}\r\n      </div>\r\n      <div className=\"row my-3 \">\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Mobile number\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={filterData.mobileNumber == -1 ? \"\" : filterData.mobileNumber}\r\n            onChange={(event) =>\r\n              handleFieldChange(\"mobileNumber\", event.target.value)\r\n            }\r\n            inputProps={{ maxLength: 15 }}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <span\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <AiOutlinePhone style={{ marginRight: \"5px\" }} /> +91\r\n                </span>\r\n              ),\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            onChange={(e) => handleFieldChange(\"assignTo\", e.target.value)}\r\n            name=\"AssignedTo\"\r\n            id=\"AssignedTo\"\r\n            className=\"form-control\"\r\n            select\r\n            label=\"Assigned To\"\r\n            value={filterData.assignTo}\r\n            defaultValue={filterData.assignTo}\r\n          >\r\n            <MenuItem value={-1}>ALL</MenuItem>\r\n            {adminList.map((el) => (\r\n              <MenuItem key={el.id} value={el.id}>\r\n                {el.userName}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </div>\r\n        <div className=\"col-sm-4\">\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"select-label\">Source</InputLabel>\r\n            <Select\r\n              labelId=\"select-label\"\r\n              id=\"select\"\r\n              label=\"Select option\"\r\n              value={filterData.fromSource}\r\n              onChange={(event) =>\r\n                handleFieldChange(\"fromSource\", event.target.value)\r\n              }\r\n              // onChange={(e) => HandleCanlead(e, \"fromSource\")}\r\n            >\r\n              <MenuItem value={\"\"}>ALL</MenuItem>\r\n              <MenuItem value=\"Retention\">Old lead</MenuItem>\r\n              <MenuItem value=\"Reference\">Reference</MenuItem>\r\n              <MenuItem value=\"Whatsapp\">Whatsapp</MenuItem>\r\n              <MenuItem value=\"App\">App</MenuItem>\r\n              <MenuItem value=\"Meta lead\">Meta lead</MenuItem>\r\n              <MenuItem value=\"Naukri\">Naukri</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n      </div>\r\n      <div className=\"row my-3 \">\r\n        <div className=\"col-sm-4\">\r\n          <Autocomplete\r\n            id=\"tags-outlined\"\r\n            options={options.jobCategory.map((option) => option)}\r\n            fullWidth\r\n            getOptionLabel={(option) => option}\r\n            value={filterData.jobCategory}\r\n            onChange={(event, value, reason) => {\r\n              if (reason === \"clear\") {\r\n                handleFieldChange(\"jobCategory\", \"\");\r\n              } else {\r\n                handleFieldChange(\"jobCategory\", value);\r\n              }\r\n            }}\r\n            filterSelectedOptions\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Job category\"\r\n                placeholder=\"Job category\"\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            onChange={(event) =>\r\n              handleFieldChange(\"expYearsMin\", event.target.value)\r\n            }\r\n            value={filterData.expYearsMin}\r\n            name=\"experience\"\r\n            id=\"experience\"\r\n            className=\"form-control\"\r\n            select\r\n            label=\"Min experience\"\r\n          >\r\n            {experience.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </div>\r\n\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            onChange={(event) =>\r\n              handleFieldChange(\"expYearsMax\", event.target.value)\r\n            }\r\n            value={filterData.expYearsMax}\r\n            name=\"experience\"\r\n            id=\"experience\"\r\n            className=\"form-control\"\r\n            select\r\n            label=\"Max experience\"\r\n          >\r\n            {experience.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row my-3 \">\r\n        <div className=\"col-sm-4\">\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"select-label\">Status</InputLabel>\r\n            <Select\r\n              labelId=\"select-label\"\r\n              id=\"select\"\r\n              label=\"Select option\"\r\n              value={filterData.followupStatus}\r\n              onChange={(event) =>\r\n                handleFieldChange(\"followupStatus\", event.target.value)\r\n              }\r\n            >\r\n              <MenuItem value={0}>ALL</MenuItem>\r\n              <MenuItem value={1}>FollowUp1</MenuItem>\r\n              <MenuItem value={2}>FollowUp2</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        {/* <div className=\"col-sm-4\">\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <TextField\r\n              label=\"Created on\"\r\n              id=\"basic-button\"\r\n              value={`${filterData.dateFilterType}`}\r\n              // value={`${dateRange.start} - ${dateRange.end}`}\r\n              aria-controls={open ? \"basic-menu\" : undefined}\r\n              aria-haspopup=\"true\"\r\n              aria-expanded={open ? \"true\" : undefined}\r\n              onClick={handleClick}\r\n            ></TextField>\r\n            <Menu\r\n              id=\"basic-menu\"\r\n              anchorEl={anchorEl}\r\n              open={open}\r\n              onClose={handleClose}\r\n              fullWidth\r\n              MenuListProps={{\r\n                \"aria-labelledby\": \"basic-button\",\r\n              }}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"today\");\r\n                }}\r\n                style={{ width: \"180px\" }}\r\n              >\r\n                Today\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"yesterday\");\r\n                }}\r\n              >\r\n                Yesterday\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"lastWeek\");\r\n                }}\r\n              >\r\n                Last 1 Week\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"lastTwoWeeks\");\r\n                }}\r\n              >\r\n                Last 2 Week\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"lastMonth\");\r\n                }}\r\n              >\r\n                Last Month\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"custom\");\r\n                }}\r\n              >\r\n                Custom Date\r\n              </MenuItem>\r\n            </Menu>\r\n          </FormControl>\r\n          {showCustom && (\r\n            <MyModal>\r\n              <ModalContainer\r\n                zIndex={1005}\r\n                childComponent={\r\n                  <div\r\n                    style={{\r\n                      minWidth: \"400px\",\r\n                      width: \"auto\",\r\n                    }}\r\n                  >\r\n                    <>\r\n                      <div>\r\n                        <form>\r\n                          <p className=\"text-center \">Select Custom Date </p>\r\n                          <div className=\"mt-2\">\r\n                            <label htmlFor=\"start\">From</label>\r\n                            <input\r\n                              className={`form-control ${\r\n                                validationErrors.start ? \"is-invalid\" : \"\"\r\n                              }`}\r\n                              style={{ width: \"100%\" }}\r\n                              type=\"date\"\r\n                              id=\"start\"\r\n                              onChange={(value) =>\r\n                                handleCustomDate(value, \"startDate\")\r\n                              }\r\n                              value={filterData.createdTimeStart}\r\n                              name=\"trip-start\"\r\n                              min=\"2020-01-01\"\r\n                              max={new Date().toISOString().split(\"T\")[0]}\r\n                            />\r\n                            {validationErrors.start && (\r\n                              <div className=\"invalid-feedback\">\r\n                                Start date is required.\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"mt-2\">\r\n                            <label htmlFor=\"end\">To</label>\r\n                            <input\r\n                              className={`form-control ${\r\n                                validationErrors.end ? \"is-invalid\" : \"\"\r\n                              }`}\r\n                              value={filterData.createdTimeEnd}\r\n                              style={{ width: \"100%\" }}\r\n                              type=\"date\"\r\n                              id=\"end\"\r\n                              onChange={(value) =>\r\n                                handleCustomDate(value, \"endDate\")\r\n                              }\r\n                              name=\"trip-end\"\r\n                              min=\"2020-01-01\"\r\n                              max={new Date().toISOString().split(\"T\")[0]}\r\n                            />\r\n                            {validationErrors.end && (\r\n                              <div className=\"invalid-feedback\">\r\n                                End date is required.\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-end mt-3 \">\r\n                            <button\r\n                              onClick={() => {\r\n                                setValidationErrors({\r\n                                  start: false,\r\n                                  end: false,\r\n                                });\r\n                                setshowCustom(false);\r\n                              }}\r\n                              style={{\r\n                                backgroundColor: \"#b2261c\",\r\n                              }}\r\n                              className=\"btn rounded-pill text-white px-4  me-2\"\r\n                            >\r\n                              Close\r\n                            </button>\r\n                            <button\r\n                              onClick={handleApplyCustomDate}\r\n                              // color=\"primary\"\r\n                              className=\"btn rounded-pill text-white px-4\"\r\n                              style={{\r\n                                backgroundColor: \"#169C50\",\r\n                              }}\r\n                            >\r\n                              Apply\r\n                            </button>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </>\r\n                  </div>\r\n                }\r\n              />\r\n            </MyModal>\r\n          )}\r\n        </div> */}\r\n      </div>\r\n      <div className=\"d-flex justify-content-end flex-row\">\r\n        <button onClick={clearAllFilter} className=\"btn btn-danger mx-2\">\r\n          Clear\r\n        </button>\r\n        <button onClick={handleSubmit} className=\"btn btn-success\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InterviewFollowUpFilter;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable eqeqeq */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport style from \"../pipeline.module.scss\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport { Pagination } from \"@mui/material\";\r\nimport { FaFilter } from \"react-icons/fa\";\r\nimport { LuRefreshCw } from \"react-icons/lu\";\r\nimport {\r\n  GetCandidatePipeline,\r\n  getCandidateLead,\r\n  getcandidateDetails,\r\n} from \"../../../../apiServices\";\r\nimport {\r\n  MyModal,\r\n  addDaysToDate,\r\n  addOneyear,\r\n  addYear,\r\n  dateFormate,\r\n  getDateSevenDaysAgo,\r\n  modifyDate,\r\n} from \"../../../../utility\";\r\nimport ModalContainer from \"../../../../components/modal_popup\";\r\nimport {\r\n  CandidatePipelineActions,\r\n  commonPopupActions,\r\n} from \"../../../../redux-store/store\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CanRegisterFilter from \"./canRegisteredFilter\";\r\nimport InterviewFollowUpFilter from \"./interviewFollowUpFilter\";\r\nimport { HiOutlineRefresh } from \"react-icons/hi\";\r\n\r\nfunction InterviewFollowUpPipeline() {\r\n  const [leadData, setLeadData] = useState({\r\n    data: [],\r\n  });\r\n\r\n  let filterDetails = useSelector(\r\n    (state) => state.CandidatePipelineDetails.interviewFollowUpFilter\r\n  );\r\n\r\n  let refreshPage = useSelector(\r\n    (state) => state.CandidatePipelineDetails.refreshCountIncrement\r\n  );\r\n\r\n  const [showFilter, setShowFilter] = useState(false);\r\n\r\n  const [showRedDot, setShowRedDot] = useState(false);\r\n  // const [interviewdata, setinterviewdata] = useState(\"\");\r\n\r\n  const [totalCount, setTotalCount] = useState(0);\r\n\r\n  const [leadDetails, setleadDetails] = useState(\"\");\r\n  const [isRotating, setIsRotating] = useState(false);\r\n  const Dispatch = useDispatch();\r\n\r\n  const handleCandidateDetails = async (candidateleadId, type) => {\r\n    let data;\r\n    console.log(data, \"cnadidatre tutu\");\r\n    if (type === \"CandidateLead\") {\r\n      data = await getCandidateLead(candidateleadId);\r\n    } else if (type === \"RegisterCandidate\") {\r\n      data = await getcandidateDetails(candidateleadId);\r\n    }\r\n\r\n    // Dispatch action to show the popup and pass the fetched data\r\n    Dispatch(\r\n      commonPopupActions.setShowPopup({\r\n        name: \"candidateDetails\",\r\n        id: candidateleadId,\r\n        type: type,\r\n        data: data,\r\n      })\r\n    );\r\n  };\r\n\r\n  async function fetchData() {\r\n    setIsRotating(true);\r\n    let data = await GetCandidatePipeline(filterDetails);\r\n\r\n    if (data.status == \"success\") {\r\n      setLeadData(data);\r\n      setTotalCount(data.totalElements);\r\n    } else {\r\n      setLeadData({\r\n        data: [],\r\n      });\r\n      setTotalCount(0);\r\n    }\r\n    setTimeout(() => {\r\n      setIsRotating(false);\r\n    }, 1000);\r\n  }\r\n  useEffect(() => {\r\n    fetchData();\r\n    setShowRedDot(ShowRedDot(initialFilterObj, filterDetails));\r\n  }, [filterDetails, refreshPage]);\r\n\r\n  function paginationChange(event, page) {\r\n    Dispatch(\r\n      CandidatePipelineActions.setPageChange({\r\n        type: \"interviewFollowUpFilter\",\r\n        value: page - 1,\r\n      })\r\n    );\r\n  }\r\n  const currentDate = new Date();\r\n  const formattedCurrentDate = currentDate.toISOString().slice(0, 10);\r\n\r\n  let initialFilterObj = {\r\n    mobileNumber: -1,\r\n    assignTo: localStorage.getItem(\"adminID\"),\r\n    profilePageNo: -1,\r\n    fromSource: \"\",\r\n    jobCategory: \"\",\r\n    currentStatus: \"\",\r\n    dateFilterType: \"\",\r\n    expYearsMax: -1,\r\n    expYearsMin: -1,\r\n    page: \"\",\r\n    followupStatus: 0,\r\n    currentPipeline: \"\",\r\n    // pipelineStage: \"Interview date set\",\r\n    stages: 5,\r\n    startDate: dateFormate(modifyDate(\"sub\", 7)),\r\n    endDate: dateFormate(new Date()),\r\n  };\r\n\r\n  function ShowRedDot(obj1, obj2) {\r\n    // Omitting the 'page' key from both objects\r\n    const obj1WithoutPage = { ...obj1 };\r\n    delete obj1WithoutPage.page;\r\n\r\n    const obj2WithoutPage = { ...obj2 };\r\n    delete obj2WithoutPage.page;\r\n\r\n    console.log(\r\n      obj1WithoutPage,\r\n      obj2WithoutPage,\r\n      addOneyear(new Date()),\r\n      \"CONSOLEEEEEEEEEEeeeeeeeeeeeeeeeeee\"\r\n    );\r\n\r\n    for (let key in obj1WithoutPage) {\r\n      if (obj1WithoutPage.hasOwnProperty(key)) {\r\n        if (obj1WithoutPage[key] !== obj2WithoutPage[key]) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <div className={`${style.pipelineContainer} mx-2`}>\r\n      <div className={`${style.headerCard} p-2 d-flex justify-content-between`}>\r\n        <b>Interview Follow Up ({totalCount})</b>{\" \"}\r\n        <div className=\"mt-0\">\r\n          <div className=\"d-inline-block\">\r\n            <span\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => {\r\n                fetchData();\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <HiOutlineRefresh\r\n                className={`${\r\n                  isRotating ? style.refreshRotate : style.refreshcolor\r\n                }`}\r\n              />\r\n            </span>\r\n          </div>{\" \"}\r\n          <div\r\n            onClick={() => {\r\n              setShowFilter(true);\r\n            }}\r\n            style={{ cursor: \"pointer\", color: \"#858585\" }}\r\n            className=\"d-inline-block mx-2\"\r\n          >\r\n            <FaFilter />\r\n            <p\r\n              style={{\r\n                backgroundColor: showRedDot ? \"red\" : \"transparent\",\r\n                width: \"9px\",\r\n                height: \"9px\",\r\n                marginTop: \"-12px\",\r\n                zIndex: 1000,\r\n                marginLeft: \"10px\",\r\n                borderRadius: \"50%\",\r\n              }}\r\n            ></p>{\" \"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`${style.bodyContainer}`}>\r\n        {leadData.data.map((el) => {\r\n          return (\r\n            <div\r\n              key={el.id}\r\n              onClick={() => {\r\n                setleadDetails(el);\r\n              }}\r\n            >\r\n              <div className={`${style.bodyCard} p-1 `}>\r\n                <div className={`${style.textContent} p-1 `}>\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <div>\r\n                      <b\r\n                        onClick={() => {\r\n                          handleCandidateDetails(el.id, \"RegisterCandidate\");\r\n                        }}\r\n                        className={style.candidateName}\r\n                      >\r\n                        {\" \"}\r\n                        {el.firstName ? el.firstName : \"-\"}{\" \"}\r\n                        {el.lastName ? el.lastName : \"-\"}\r\n                      </b>\r\n                    </div>\r\n                    {/* <div\r\n                      style={{\r\n                        // display: \"inline-block\",\r\n                        padding: \"4px\",\r\n                        border: \"1px solid\",\r\n                        borderRadius: \"7px\",\r\n                        // marginLeft: \"15px\",\r\n                        borderColor:\r\n                          dateFormate(new Date()) ===\r\n                          dateFormate(el.followUpDate1)\r\n                            ? \"blue\"\r\n                            : dateFormate(new Date()) ===\r\n                              dateFormate(el.followUpDate2)\r\n                            ? \"violet\"\r\n                            : \"red\",\r\n                        backgroundColor:\r\n                          dateFormate(new Date()) ===\r\n                          dateFormate(el.followUpDate1)\r\n                            ? \"lightblue\"\r\n                            : dateFormate(new Date()) ===\r\n                              dateFormate(el.followUpDate2)\r\n                            ? \"lavender\"\r\n                            : \"pink\",\r\n                        color:\r\n                          dateFormate(new Date()) ===\r\n                          dateFormate(el.followUpDate1)\r\n                            ? \"blue\"\r\n                            : dateFormate(new Date()) ===\r\n                              dateFormate(el.followUpDate2)\r\n                            ? \"violet\"\r\n                            : \"red\",\r\n                      }}\r\n                    >\r\n                      <div style={{ fontSize: \"10px\" }}>\r\n                        <b>{dateFormate(etentativeInterviewDate)}</b>\r\n                      </div>\r\n                    </div> */}\r\n                  </div>\r\n                  {el.jobCategory ? el.jobCategory : \"-\"} <br />\r\n                  {/* {el.mobileNumber ? el.mobileNumber : \"-\"} */}\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <div>{el.mobileNumber ? el.mobileNumber : \"-\"}</div>\r\n                    <b\r\n                      style={{\r\n                        border: \"1px solid yellow\",\r\n                        backgroundColor: \"lightyellow\",\r\n                        fontSize: \"10px\",\r\n                        borderRadius: \"8px\",\r\n                        // marginRight:\"18px\",\r\n                        padding: \"4px\",\r\n                      }}\r\n                    >\r\n                      {el.fromSource === \"Retention\"\r\n                        ? \"Old lead\"\r\n                        : el.fromSource === null\r\n                        ? \"Meta lead\"\r\n                        : el.fromSource}\r\n                    </b>\r\n                  </div>\r\n                </div>\r\n\r\n                <div\r\n                  style={{ marginTop: \"-20px\", marginBottom: \"17px\" }}\r\n                  className=\"d-flex justify-content-end\"\r\n                >\r\n                  {/* <div>\r\n                    <div className=\"dropdown\">\r\n                      <span\r\n                        style={{ cursor: \"pointer\" }}\r\n                        id=\"dropdownMenuButton1\"\r\n                        data-bs-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                      >\r\n                        <BsThreeDotsVertical />\r\n                      </span>\r\n                      <ul\r\n                        className=\"dropdown-menu\"\r\n                        aria-labelledby=\"dropdownMenuButton1\"\r\n                      >\r\n                        <li>\r\n                          <a className=\"dropdown-item\" href=\"#\">\r\n                            Not Qualified\r\n                          </a>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"mt-3 d-grid justify-content-center\">\r\n        <Pagination\r\n          // variant=\"outlined\"\r\n          shape=\"rounded\"\r\n          color=\"success\"\r\n          boundaryCount={1}\r\n          siblingCount={0}\r\n          onChange={paginationChange}\r\n          count={leadData.totalPages}\r\n          size=\"small\"\r\n        />\r\n      </div>\r\n\r\n      {showFilter && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            // zIndex={2}\r\n            childComponent={\r\n              <>\r\n                <InterviewFollowUpFilter\r\n                  onclose={() => {\r\n                    setShowFilter(false);\r\n                  }}\r\n                />\r\n              </>\r\n            }\r\n          />\r\n        </MyModal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InterviewFollowUpPipeline;\r\n","import {\r\n  Autocomplete,\r\n  FormControl,\r\n  InputLabel,\r\n  Menu,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { AiOutlineClose, AiOutlinePhone } from \"react-icons/ai\";\r\nimport {\r\n  GetAllsdminDetails,\r\n  getJobFilterOptions,\r\n} from \"../../../../apiServices\";\r\nimport {\r\n  MyModal,\r\n  addDaysToDate,\r\n  dateFormate,\r\n  modifyDate,\r\n} from \"../../../../utility\";\r\nimport ModalContainer from \"../../../../components/modal_popup\";\r\nimport { IoMdClose } from \"react-icons/io\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CandidatePipelineActions } from \"../../../../redux-store/store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { purple, red } from \"@mui/material/colors\";\r\n\r\nfunction LeadlostFilter({ onclose }) {\r\n  let filterDetails = useSelector(\r\n    (state) => state.CandidatePipelineDetails.candididateLeadLostFilter\r\n  );\r\n\r\n  const [filterData, setFilterData] = useState({\r\n    mobileNumber: filterDetails.mobileNumber,\r\n    assignTo: filterDetails.assignTo,\r\n    profilePageNo: filterDetails.profilePageNo,\r\n    fromSource: filterDetails.fromSource,\r\n    jobCategory: filterDetails.jobCategory,\r\n    currentStatus: filterDetails.currentStatus,\r\n    dateFilterType: filterDetails.dateFilterType,\r\n    expYearsMax: filterDetails.expYearsMax,\r\n    expYearsMin: filterDetails.expYearsMin,\r\n    page: 0,\r\n    currentPipeline: filterDetails.currentPipeline,\r\n    stages: filterDetails.stages,\r\n    startDate: dateFormate(modifyDate(\"sub\", 7)),\r\n    endDate: dateFormate(new Date()),\r\n  });\r\n\r\n  const [adminList, setAdminList] = useState([]);\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const [showCustom, setshowCustom] = useState(false);\r\n\r\n  const [validationErrors, setValidationErrors] = useState({\r\n    start: false,\r\n    end: false,\r\n  });\r\n\r\n  const experience = [\r\n    {\r\n      value: \"0\",\r\n      label: \"0\",\r\n    },\r\n    {\r\n      value: \"1\",\r\n      label: \"1\",\r\n    },\r\n    {\r\n      value: \"2\",\r\n      label: \"2\",\r\n    },\r\n    {\r\n      value: \"3\",\r\n      label: \"3\",\r\n    },\r\n    {\r\n      value: \"4\",\r\n      label: \"4\",\r\n    },\r\n\r\n    {\r\n      value: \"5\",\r\n      label: \"5\",\r\n    },\r\n    {\r\n      value: \"6\",\r\n      label: \"6\",\r\n    },\r\n    {\r\n      value: \"7\",\r\n      label: \"7\",\r\n    },\r\n    {\r\n      value: \"8\",\r\n      label: \"8\",\r\n    },\r\n    {\r\n      value: \"9\",\r\n      label: \"9\",\r\n    },\r\n    {\r\n      value: \"10\",\r\n      label: \"10\",\r\n    },\r\n    {\r\n      value: \"11\",\r\n      label: \"11\",\r\n    },\r\n    {\r\n      value: \"12\",\r\n      label: \"12\",\r\n    },\r\n    {\r\n      value: \"13\",\r\n      label: \"13\",\r\n    },\r\n    {\r\n      value: \"14\",\r\n      label: \"14\",\r\n    },\r\n    {\r\n      value: \"15+\",\r\n      label: \"15+\",\r\n    },\r\n  ];\r\n\r\n  const Dispatch = useDispatch();\r\n\r\n  function handleCustomDate(value, type) {\r\n    const val = value.target.value;\r\n\r\n    if (type === \"startDate\") {\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        createdTimeStart: val,\r\n        dateFilterType: \"custom\",\r\n      }));\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        start: false,\r\n      }));\r\n    } else {\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        createdTimeEnd: val,\r\n        dateFilterType: \"custom\",\r\n      }));\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        end: false,\r\n      }));\r\n    }\r\n  }\r\n\r\n  const isFormValid = () => {\r\n    const isValid = filterData.createdTimeStart && filterData.createdTimeEnd;\r\n\r\n    if (!filterData.createdTimeStart) {\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        start: true,\r\n      }));\r\n    }\r\n\r\n    if (!filterData.createdTimeEnd) {\r\n      setValidationErrors((prev) => ({\r\n        ...prev,\r\n        end: true,\r\n      }));\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n  const handleApplyCustomDate = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isFormValid()) {\r\n      // console.log(\"Form submitted:\", dateRange);\r\n      setValidationErrors({\r\n        start: false,\r\n        end: false,\r\n      });\r\n      setshowCustom(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = (val) => {\r\n    console.log(val);\r\n\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const [options, setOptions] = useState({\r\n    jobCategory: [],\r\n  });\r\n\r\n  const handleDateSelect = (val) => {\r\n    let selectedOption = val;\r\n    const today = new Date();\r\n    let endDate = new Date();\r\n    // endDate.setDate(endDate.getDate() + 1);\r\n    if (selectedOption === \"lastWeek\") {\r\n      const startDate = new Date();\r\n\r\n      startDate.setDate(today.getDate() - 7);\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last 1 Week\",\r\n        createdTimeStart: startDate.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"today\") {\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Today\",\r\n        createdTimeStart: today.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"lastMonth\") {\r\n      const startDate = new Date();\r\n      startDate.setMonth(startDate.getMonth() - 1);\r\n\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last Month\",\r\n        createdTimeStart: startDate.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"lastTwoWeeks\") {\r\n      const startDate = new Date(today);\r\n      startDate.setDate(today.getDate() - 13);\r\n\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Last 2 Week\",\r\n        createdTimeStart: startDate.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"yesterday\") {\r\n      const startDate = new Date();\r\n      startDate.setDate(startDate.getDate() - 1);\r\n\r\n      setFilterData((prev) => ({\r\n        ...prev,\r\n        dateFilterType: \"Yesterday\",\r\n        createdTimeStart: startDate.toISOString().split(\"T\")[0],\r\n        createdTimeEnd: endDate.toISOString().split(\"T\")[0],\r\n      }));\r\n      setAnchorEl(null);\r\n    } else if (selectedOption === \"custom\") {\r\n      setshowCustom(true);\r\n      setAnchorEl(null);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getJobFilterOptions().then((data) => {\r\n      setOptions((prev) => ({\r\n        ...prev,\r\n        jobCategory: data\r\n          .filter((el) => el.category == \"job category\")\r\n          .map((el) => el.options),\r\n      }));\r\n    });\r\n    GetAllsdminDetails()\r\n      .then((data) => {\r\n        console.log(data);\r\n        const activeAdmins = data.filter((item) => !item.Deactived);\r\n        setAdminList(activeAdmins);\r\n      })\r\n      .catch(() => {\r\n        alert(\"Something Went wrong\");\r\n      });\r\n  }, []);\r\n\r\n  function handleFieldChange(field, value) {\r\n    switch (field) {\r\n      case \"mobileNumber\":\r\n        // Check if the value is numeric before updating the state\r\n        if (/^\\d*$/.test(value) || value === \"\") {\r\n          setFilterData((prev) => ({ ...prev, [field]: value }));\r\n        }\r\n        break;\r\n\r\n      default:\r\n        setFilterData((prev) => ({ ...prev, [field]: value }));\r\n        break;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    Dispatch(CandidatePipelineActions.setCandidateeadlostFilter(filterData));\r\n  }, [filterData]);\r\n\r\n  function handleSubmit() {\r\n    Dispatch(CandidatePipelineActions.setCandidateeadlostFilter(filterData));\r\n    onclose();\r\n    // console.log(CandidatePipelineActions.setCandidateFilter(filterData));\r\n  }\r\n\r\n  function clearAllFilter() {\r\n    setFilterData({\r\n      mobileNumber: -1,\r\n      assignTo: localStorage.getItem(\"adminID\"),\r\n      profilePageNo: -1,\r\n      fromSource: \"\",\r\n      jobCategory: \"\",\r\n      currentStatus: \"\",\r\n      dateFilterType: \"\",\r\n      // createdTimeStart: \"2020-01-01\",\r\n      // createdTimeEnd: dateFormate(addDaysToDate(1)),\r\n      expYearsMax: -1,\r\n      expYearsMin: -1,\r\n      page: \"\",\r\n      followupStatus: 0,\r\n      currentPipeline: \"New candidate lead\",\r\n      // pipelineStage: \"Candidate Lead Lost\",\r\n      stages: 6,\r\n      startDate: dateFormate(modifyDate(\"sub\", 7)),\r\n      endDate: dateFormate(new Date()),\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log(filterDetails);\r\n  }, [filterDetails]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"70vw\",\r\n      }}\r\n    >\r\n      <div className=\"d-flex justify-content-between \">\r\n        <span>\r\n          <p>\r\n            <b>Registered Filter</b>{\" \"}\r\n          </p>\r\n        </span>\r\n        <span\r\n          onClick={() => {\r\n            onclose();\r\n          }}\r\n          className=\"btn btn-danger\"\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          <AiOutlineClose style={{ fontSize: \"20px\" }} />\r\n        </span>\r\n      </div>\r\n      <div className=\"row my-3 \">\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Mobile number\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={filterData.mobileNumber == -1 ? \"\" : filterData.mobileNumber}\r\n            onChange={(event) =>\r\n              handleFieldChange(\"mobileNumber\", event.target.value)\r\n            }\r\n            inputProps={{ maxLength: 15 }}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <span\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <AiOutlinePhone style={{ marginRight: \"5px\" }} /> +91\r\n                </span>\r\n              ),\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            onChange={(e) => handleFieldChange(\"assignTo\", e.target.value)}\r\n            name=\"AssignedTo\"\r\n            id=\"AssignedTo\"\r\n            className=\"form-control\"\r\n            select\r\n            label=\"Assigned To\"\r\n            value={filterData.assignTo}\r\n            defaultValue={filterData.assignTo}\r\n          >\r\n            <MenuItem value={-1}>ALL</MenuItem>\r\n            {adminList.map((el) => (\r\n              <MenuItem key={el.id} value={el.id}>\r\n                {el.userName}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </div>\r\n        <div className=\"col-sm-4\">\r\n          <FormControl variant=\"outlined\" fullWidth>\r\n            <TextField\r\n              label=\"Created on\"\r\n              id=\"basic-button\"\r\n              value={`${filterData.dateFilterType}`}\r\n              // value={`${dateRange.start} - ${dateRange.end}`}\r\n              aria-controls={open ? \"basic-menu\" : undefined}\r\n              aria-haspopup=\"true\"\r\n              aria-expanded={open ? \"true\" : undefined}\r\n              onClick={handleClick}\r\n            ></TextField>\r\n            <Menu\r\n              id=\"basic-menu\"\r\n              anchorEl={anchorEl}\r\n              open={open}\r\n              onClose={handleClose}\r\n              fullWidth\r\n              MenuListProps={{\r\n                \"aria-labelledby\": \"basic-button\",\r\n              }}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"today\");\r\n                }}\r\n                style={{ width: \"180px\" }}\r\n              >\r\n                Today\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"yesterday\");\r\n                }}\r\n              >\r\n                Yesterday\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"lastWeek\");\r\n                }}\r\n              >\r\n                Last 1 Week\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"lastTwoWeeks\");\r\n                }}\r\n              >\r\n                Last 2 Week\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"lastMonth\");\r\n                }}\r\n              >\r\n                Last Month\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={() => {\r\n                  handleDateSelect(\"custom\");\r\n                }}\r\n              >\r\n                Custom Date\r\n              </MenuItem>\r\n            </Menu>\r\n          </FormControl>\r\n          {showCustom && (\r\n            <MyModal>\r\n              <ModalContainer\r\n                zIndex={1005}\r\n                childComponent={\r\n                  <div\r\n                    style={{\r\n                      minWidth: \"400px\",\r\n                      width: \"auto\",\r\n                    }}\r\n                  >\r\n                    <>\r\n                      <div>\r\n                        <form>\r\n                          <p className=\"text-center \">Select Custom Date </p>\r\n                          <div className=\"mt-2\">\r\n                            <label htmlFor=\"start\">From</label>\r\n                            <input\r\n                              className={`form-control ${\r\n                                validationErrors.start ? \"is-invalid\" : \"\"\r\n                              }`}\r\n                              style={{ width: \"100%\" }}\r\n                              type=\"date\"\r\n                              id=\"start\"\r\n                              onChange={(value) =>\r\n                                handleCustomDate(value, \"startDate\")\r\n                              }\r\n                              value={filterData.createdTimeStart}\r\n                              name=\"trip-start\"\r\n                              min=\"2020-01-01\"\r\n                              max={new Date().toISOString().split(\"T\")[0]}\r\n                            />\r\n                            {validationErrors.start && (\r\n                              <div className=\"invalid-feedback\">\r\n                                Start date is required.\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"mt-2\">\r\n                            <label htmlFor=\"end\">To</label>\r\n                            <input\r\n                              className={`form-control ${\r\n                                validationErrors.end ? \"is-invalid\" : \"\"\r\n                              }`}\r\n                              value={filterData.createdTimeEnd}\r\n                              style={{ width: \"100%\" }}\r\n                              type=\"date\"\r\n                              id=\"end\"\r\n                              onChange={(value) =>\r\n                                handleCustomDate(value, \"endDate\")\r\n                              }\r\n                              name=\"trip-end\"\r\n                              min=\"2020-01-01\"\r\n                              max={new Date().toISOString().split(\"T\")[0]}\r\n                            />\r\n                            {validationErrors.end && (\r\n                              <div className=\"invalid-feedback\">\r\n                                End date is required.\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"d-flex justify-content-end mt-3 \">\r\n                            <button\r\n                              onClick={() => {\r\n                                setValidationErrors({\r\n                                  start: false,\r\n                                  end: false,\r\n                                });\r\n                                setshowCustom(false);\r\n                              }}\r\n                              style={{\r\n                                backgroundColor: \"#b2261c\",\r\n                              }}\r\n                              className=\"btn rounded-pill text-white px-4  me-2\"\r\n                            >\r\n                              Close\r\n                            </button>\r\n                            <button\r\n                              onClick={handleApplyCustomDate}\r\n                              // color=\"primary\"\r\n                              className=\"btn rounded-pill text-white px-4\"\r\n                              style={{\r\n                                backgroundColor: \"#169C50\",\r\n                              }}\r\n                            >\r\n                              Apply\r\n                            </button>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </>\r\n                  </div>\r\n                }\r\n              />\r\n            </MyModal>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"row my-3 \">\r\n        <div className=\"col-sm-4\">\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"select-label\">Source</InputLabel>\r\n            <Select\r\n              labelId=\"select-label\"\r\n              id=\"select\"\r\n              label=\"Select option\"\r\n              value={filterData.fromSource}\r\n              onChange={(event) =>\r\n                handleFieldChange(\"fromSource\", event.target.value)\r\n              }\r\n              // onChange={(e) => HandleCanlead(e, \"fromSource\")}\r\n            >\r\n              <MenuItem value={\"\"}>ALL</MenuItem>\r\n              <MenuItem value=\"Retention\">Old lead</MenuItem>\r\n              <MenuItem value=\"Reference\">Reference</MenuItem>\r\n              <MenuItem value=\"Whatsapp\">Whatsapp</MenuItem>\r\n              <MenuItem value=\"App\">App</MenuItem>\r\n              <MenuItem value=\"Meta lead\">Meta lead</MenuItem>\r\n              <MenuItem value=\"Naukri\">Naukri</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div className=\"col-sm-4\">\r\n          <Autocomplete\r\n            id=\"tags-outlined\"\r\n            options={options.jobCategory.map((option) => option)}\r\n            fullWidth\r\n            getOptionLabel={(option) => option}\r\n            // onChange={(event, value) => {\r\n            //   updateJobCategory(value);\r\n            //   console.log(value, \"value jobs\");\r\n            // }}\r\n\r\n            value={filterData.jobCategory}\r\n            onChange={(event, value, reason) => {\r\n              if (reason === \"clear\") {\r\n                handleFieldChange(\"jobCategory\", \"\");\r\n              } else {\r\n                handleFieldChange(\"jobCategory\", value);\r\n              }\r\n            }}\r\n            filterSelectedOptions\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Job category\"\r\n                placeholder=\"Job category\"\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        {/* <div className=\"col-sm-4\">\r\n          <FormControl fullWidth>\r\n            <InputLabel id=\"select-label\">Status</InputLabel>\r\n            <Select\r\n              labelId=\"select-label\"\r\n              id=\"select\"\r\n              label=\"Select option\"\r\n              value={filterData.status}\r\n              onChange={(event) =>\r\n                handleFieldChange(\"currentStatus\", event.target.value)\r\n              }\r\n            >\r\n              <MenuItem value=\"\">ALL</MenuItem>\r\n              <MenuItem value=\"Qualified\">Qualified</MenuItem>\r\n              <MenuItem value=\"NotQualified\">Not Qualified</MenuItem>\r\n              <MenuItem value=\"CallNotAttend\">Not Attend</MenuItem>\r\n              <MenuItem value=\"nostatus\">No Status</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div> */}\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            onChange={(event) =>\r\n              handleFieldChange(\"expYearsMin\", event.target.value)\r\n            }\r\n            value={filterData.expYearsMin}\r\n            name=\"experience\"\r\n            id=\"experience\"\r\n            className=\"form-control\"\r\n            select\r\n            label=\"Min experience\"\r\n          >\r\n            {experience.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row my-3 \">\r\n        <div className=\"col-sm-4\">\r\n          <TextField\r\n            onChange={(event) =>\r\n              handleFieldChange(\"expYearsMax\", event.target.value)\r\n            }\r\n            value={filterData.expYearsMax}\r\n            name=\"experience\"\r\n            id=\"experience\"\r\n            className=\"form-control\"\r\n            select\r\n            label=\"Max experience\"\r\n          >\r\n            {experience.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex justify-content-end flex-row\">\r\n        <button onClick={clearAllFilter} className=\"btn btn-danger mx-2\">\r\n          Clear\r\n        </button>\r\n        <button onClick={handleSubmit} className=\"btn btn-success\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LeadlostFilter;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-redeclare */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport style from \"../pipeline.module.scss\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport { Autocomplete, Pagination, TextField } from \"@mui/material\";\r\nimport { FaFilter, FaPlus } from \"react-icons/fa\";\r\nimport accordionstyle from \"../../../Candidate/CandidateQualifyForm/QualifyForm.module.scss\";\r\nimport {\r\n  GetCanLeadPipeline,\r\n  GetCandidatePipeline,\r\n  GetCandidateQualifyDetials,\r\n  GetNotAttendEvent,\r\n  PutCandidateType,\r\n  PutMetaLeadAssignToAdmin,\r\n  UpdateCanPipelineStatus,\r\n  getCandidateLead,\r\n  getcandidateDetails,\r\n} from \"../../../../apiServices\";\r\nimport {\r\n  MyModal,\r\n  addDaysToDate,\r\n  dateFormate,\r\n  dateAndTimeFormate,\r\n  dateAndTimeHHMMSS,\r\n  getCurrentDateTime,\r\n  addHoursAndMinutesToDate,\r\n  modifyDate,\r\n} from \"../../../../utility\";\r\nimport ModalContainer from \"../../../../components/modal_popup\";\r\nimport {\r\n  CandidatePipelineActions,\r\n  commonPopupActions,\r\n} from \"../../../../redux-store/store\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport LeadPipelineFilter from \"./LeadPipelineFilter\";\r\nimport { useSelector } from \"react-redux\";\r\nimport QualifyFresherform from \"../../../Candidate/CandidateQualifyForm/FresherForm\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport ExperienceForm from \"../../../Candidate/CandidateQualifyForm/ExperienceForm\";\r\nimport SuccessTick from \"../../../../components/success_tick\";\r\nimport { IoMdClose } from \"react-icons/io\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { TfiImport } from \"react-icons/tfi\";\r\nimport { HiOutlineRefresh } from \"react-icons/hi\";\r\nimport CandidateLead from \"../../../Candidate/CandidateLeadTable/CandidateLeadPostForm\";\r\nimport LeadlostFilter from \"./candidateLeadlostFilter\";\r\n\r\nfunction CandidateLeadlost() {\r\n  const [leadData, setLeadData] = useState({\r\n    data: [],\r\n  });\r\n\r\n  let filterDetails = useSelector(\r\n    (state) => state.CandidatePipelineDetails.candididateLeadLostFilter\r\n  );\r\n  let filterDetailscandidate = useSelector(\r\n    (state) => state.CandidatePipelineDetails.candidateFilter\r\n  );\r\n  let refreshPage = useSelector(\r\n    (state) => state.CandidatePipelineDetails.refreshCountIncrement\r\n  );\r\n\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [leadQualifyFormOpen, setLeadQualifyFormOpen] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  const [leadDetails, setleadDetails] = useState(\"\");\r\n  const [showSuccessForm, setshowSuccessForm] = useState(\"\");\r\n  const [popups, setShowPopups] = useState({\r\n    PopupAddCanLead: false,\r\n    callRemainder: false,\r\n    success: false,\r\n    confirmation: false,\r\n    notAttendConfiramtion: false,\r\n  });\r\n  const [showLoader, setShowLoader] = useState(false);\r\n  const [isRotating, setIsRotating] = useState(false);\r\n  const [date, setDate] = React.useState(new Date());\r\n  const [callRemainder, setCallRemainder] = useState({\r\n    notes: \"\",\r\n    date: null,\r\n  });\r\n  const [notAttendEventArray, setNotAttendEventArray] = useState([]);\r\n  const [notAttendEvent, setNotAttendEvent] = useState(\"\");\r\n  const [eventError, setEventError] = useState(\"\");\r\n  const [showRedDot, setShowRedDot] = useState(false);\r\n  const [dateTimeError, setDateTimeError] = useState(false);\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const Dispatch = useDispatch();\r\n\r\n  const handleCandidateDetails = async (candidateleadId, type) => {\r\n    let data;\r\n    if (type === \"CandidateLead\") {\r\n      data = await getCandidateLead(candidateleadId);\r\n    } else if (type === \"RegisterCandidate\") {\r\n      data = await getcandidateDetails(candidateleadId);\r\n    }\r\n\r\n    // Dispatch action to show the popup and pass the fetched data\r\n    Dispatch(\r\n      commonPopupActions.setShowPopup({\r\n        name: \"candidateDetails\",\r\n        id: candidateleadId,\r\n        type: type,\r\n        data: data,\r\n      })\r\n    );\r\n  };\r\n\r\n  async function fetchData() {\r\n    setIsRotating(true);\r\n    let data = await GetCanLeadPipeline(filterDetails);\r\n\r\n    if (data.status == \"success\") {\r\n      setLeadData(data);\r\n      setTotalCount(data.totalElements);\r\n    } else {\r\n      setLeadData({\r\n        data: [],\r\n      });\r\n      setTotalCount(0);\r\n    }\r\n    setTimeout(() => {\r\n      setIsRotating(false);\r\n    }, 1000);\r\n  }\r\n  useEffect(() => {\r\n    fetchData();\r\n    setShowRedDot(ShowRedDot(initialFilterObj, filterDetails));\r\n  }, [filterDetails, refreshPage]);\r\n\r\n  let initialFilterObj = {\r\n    mobileNumber: -1,\r\n    assignTo: localStorage.getItem(\"adminID\"),\r\n    profilePageNo: -1,\r\n    fromSource: \"\",\r\n    jobCategory: \"\",\r\n    currentStatus: \"\",\r\n    dateFilterType: \"\",\r\n    expYearsMax: -1,\r\n    expYearsMin: -1,\r\n    page: \"\",\r\n    followupStatus: 0,\r\n    currentPipeline: \"New candidate lead\",\r\n    // pipelineStage: \"Candidate Lead Lost\",\r\n    stages: 6,\r\n    startDate: dateFormate(modifyDate(\"sub\", 7)),\r\n    endDate: dateFormate(new Date()),\r\n  };\r\n\r\n  function ShowRedDot(obj1, obj2) {\r\n    // Omitting the 'page' key from both objects\r\n    const obj1WithoutPage = { ...obj1 };\r\n    delete obj1WithoutPage.page;\r\n\r\n    const obj2WithoutPage = { ...obj2 };\r\n    delete obj2WithoutPage.page;\r\n    for (let key in obj1WithoutPage) {\r\n      if (obj1WithoutPage.hasOwnProperty(key)) {\r\n        if (obj1WithoutPage[key] !== obj2WithoutPage[key]) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function handleOpenQualifyForm() {\r\n    setLeadQualifyFormOpen(true);\r\n    GetCandidateQualifyDetials(leadDetails.mobileNumber)\r\n      .then((data) => {\r\n        if (data && data.canLeadDetails) {\r\n          setSelectedOption(\r\n            data.canLeadDetails?.experienced === true ? \"experience\" : \"fresher\"\r\n          );\r\n        } else {\r\n          console.error(\"CanLeadDetails not available in data:\", data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching candidate details:\", error);\r\n      });\r\n  }\r\n  const handleOptionChange = (event) => {\r\n    const selectedValue = event.target.value;\r\n    setSelectedOption(selectedValue);\r\n\r\n    let experiencedValue = false;\r\n    if (selectedValue === \"experience\") {\r\n      experiencedValue = true;\r\n    }\r\n\r\n    PutCandidateType(experiencedValue, leadDetails.mobileNumber, \"\").then(\r\n      (data) => {\r\n        console.log(\r\n          \"Data Format\",\r\n          data,\r\n          \"mobile number \",\r\n          leadDetails.mobileNumber\r\n        );\r\n      }\r\n    );\r\n  };\r\n  function handleCloseQualifyForm() {\r\n    setSelectedOption(\"\");\r\n    setLeadQualifyFormOpen(false);\r\n    fetchData();\r\n  }\r\n  async function candidateDetils() {\r\n    try {\r\n      const data = await GetCandidatePipeline(filterDetailscandidate);\r\n\r\n      const firstCandidate = data.data.length > 0 ? data.data[0] : null;\r\n\r\n      console.log(firstCandidate, \"firstCandidate\");\r\n\r\n      if (firstCandidate) {\r\n        // const { candidateleadId, type } = firstCandidate;\r\n        handleCandidateDetails(firstCandidate.id, \"RegisterCandidate\");\r\n\r\n        Dispatch(CandidatePipelineActions.setRefreshCount());\r\n      } else {\r\n        console.log(\"No candidates found in the data.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching candidate pipeline data:\", error);\r\n    }\r\n  }\r\n  function handleQualifyFormSubmit() {\r\n    setshowSuccessForm(true);\r\n\r\n    setTimeout(() => {\r\n      setshowSuccessForm(false);\r\n      setSelectedOption(\"\");\r\n      setLeadQualifyFormOpen(false);\r\n    }, 1000);\r\n\r\n    fetchData();\r\n    // candidateDetils();\r\n    getMetaLead();\r\n  }\r\n  function handleQualifyFormSubmitupdate() {\r\n    setshowSuccessForm(true);\r\n\r\n    setTimeout(() => {\r\n      setshowSuccessForm(false);\r\n      setSelectedOption(\"\");\r\n      setLeadQualifyFormOpen(false);\r\n    }, 1000);\r\n\r\n    fetchData();\r\n    //  candidateDetils();\r\n    getMetaLead();\r\n  }\r\n\r\n  function paginationChange(event, page) {\r\n    Dispatch(\r\n      CandidatePipelineActions.setPageChange({\r\n        type: \"leadGenerationFilter\",\r\n        value: page - 1,\r\n      })\r\n    );\r\n  }\r\n\r\n  function handleCallRemainder(value) {\r\n    setShowPopups((prev) => ({ ...prev, callRemainder: value }));\r\n  }\r\n  function handleCallNotAttend(value) {\r\n    setShowPopups((prev) => ({ ...prev, notAttendConfiramtion: value }));\r\n  }\r\n  function showNotQualify(value) {\r\n    setShowPopups((prev) => ({ ...prev, confirmation: value }));\r\n  }\r\n\r\n  // function handleCallRemainderChange(name, value) {\r\n  //   if (name === \"date\" && value instanceof Date) {\r\n  //     // Extract the date value in the required format\r\n  //     const formattedDate = dateFormate(value.toISOString()); // or any other format that suits your backend\r\n  //     setCallRemainder((prev) => ({ ...prev, [name]: formattedDate }));\r\n  //   } else {\r\n  //     setCallRemainder((prev) => ({ ...prev, [name]: value }));\r\n  //   }\r\n  // }\r\n\r\n  // function submitCallRemainder(e) {\r\n  //   e.preventDefault();\r\n  //   let obj = {\r\n  //     callRemainder: dateFormate(callRemainder.date),\r\n  //     notes: callRemainder.notes,\r\n  //     id: leadDetails.id,\r\n  //   };\r\n  //   setShowLoader(true);\r\n  //   UpdateCanPipelineStatus(obj).then((res) => {\r\n  //     setShowLoader(false);\r\n  //     handleCallRemainder(false);\r\n  //     setCallRemainder({\r\n  //       notes: \"\",\r\n  //       date: \"\",\r\n  //     });\r\n  //     Dispatch(CandidatePipelineActions.setRefreshCount());\r\n  //     getMetaLead();\r\n  //   });\r\n  // }\r\n\r\n  function handleCallRemainderChange(name, value) {\r\n    console.log(value, \"date formate\");\r\n    if (name === \"date\") {\r\n      setDateTimeError(false);\r\n      setCallRemainder((prev) => ({ ...prev, [name]: value }));\r\n    } else {\r\n      setCallRemainder((prev) => ({ ...prev, [name]: value }));\r\n    }\r\n  }\r\n\r\n  function submitCallRemainder(e) {\r\n    e.preventDefault();\r\n    if (!callRemainder.date || !callRemainder.notes) {\r\n      setDateTimeError(!callRemainder.date);\r\n      return;\r\n    }\r\n\r\n    let obj = {\r\n      callRemainder:\r\n        callRemainder.date instanceof Date\r\n          ? callRemainder.date.toISOString().split(\"T\").join(\" \")\r\n          : callRemainder.date.split(\"T\").join(\" \"),\r\n      notes: callRemainder.notes,\r\n      id: leadDetails.id,\r\n    };\r\n    setShowLoader(true);\r\n    UpdateCanPipelineStatus(obj)\r\n      .then((res) => {\r\n        setShowLoader(false);\r\n        handleCallRemainder(false);\r\n        handleCallRemainderChange(\"date\", \"\"); // Reset date after successful submission\r\n        setCallRemainder({\r\n          notes: \"\",\r\n          date: \"\", // Reset date in state after submission\r\n        });\r\n        Dispatch(CandidatePipelineActions.setRefreshCount());\r\n        getMetaLead();\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error submitting call remainder:\", error);\r\n        setShowLoader(false);\r\n        // Handle error state or message display\r\n      });\r\n  }\r\n  const formattedDateTime = getCurrentDateTime();\r\n  console.log(formattedDateTime, \"CurrentDateandTime\");\r\n\r\n  function submitNotQualified(e) {\r\n    e.preventDefault();\r\n    if (!callRemainder.notes) {\r\n      // setDateTimeError(!callRemainder.date);\r\n      return;\r\n    }\r\n    let obj = {\r\n      notQualified: true,\r\n      notes: callRemainder.notes,\r\n      date: formattedDateTime,\r\n      id: leadDetails.id,\r\n    };\r\n    UpdateCanPipelineStatus(obj).then(() => {\r\n      showNotQualify(false);\r\n      setCallRemainder({\r\n        notes: \"\",\r\n      });\r\n      Dispatch(CandidatePipelineActions.setRefreshCount());\r\n      getMetaLead();\r\n    }, []);\r\n  }\r\n  function submitNotAttend() {\r\n    if (notAttendEvent === \"\") {\r\n      setEventError(\"Please select an event.\");\r\n      return;\r\n    }\r\n    let obj = {\r\n      notAttend: true,\r\n      event: notAttendEvent,\r\n      date: formattedDateTime,\r\n      id: leadDetails.id,\r\n    };\r\n    UpdateCanPipelineStatus(obj).then(() => {\r\n      handleCallNotAttend(false);\r\n      setNotAttendEvent(\"\");\r\n      Dispatch(CandidatePipelineActions.setRefreshCount());\r\n      getMetaLead();\r\n    }, []);\r\n  }\r\n\r\n  function getMetaLead() {\r\n    PutMetaLeadAssignToAdmin().then((res) => {\r\n      Dispatch(CandidatePipelineActions.setRefreshCount());\r\n    });\r\n  }\r\n\r\n  function ShowRedDot(obj1, obj2) {\r\n    // Omitting the 'page' key from both objects\r\n    const obj1WithoutPage = { ...obj1 };\r\n    delete obj1WithoutPage.page;\r\n\r\n    const obj2WithoutPage = { ...obj2 };\r\n    delete obj2WithoutPage.page;\r\n    for (let key in obj1WithoutPage) {\r\n      if (obj1WithoutPage.hasOwnProperty(key)) {\r\n        if (obj1WithoutPage[key] !== obj2WithoutPage[key]) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  useEffect(() => {\r\n    GetNotAttendEvent().then((data) => {\r\n      console.log(data, \"status\");\r\n      setNotAttendEventArray(data);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className={`${style.pipelineContainer} mx-2`}>\r\n      <div className={`${style.headerCard} p-2 d-flex justify-content-between`}>\r\n        <div>\r\n          <b>Lead Lost({totalCount}) </b>\r\n        </div>\r\n        <div className=\"mt-0\">\r\n          <div className=\"d-inline-block\">\r\n            <span\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => {\r\n                fetchData();\r\n              }}\r\n            >\r\n              {\" \"}\r\n              <HiOutlineRefresh\r\n                className={`${\r\n                  isRotating ? style.refreshRotate : style.refreshcolor\r\n                }`}\r\n              />\r\n            </span>\r\n          </div>{\" \"}\r\n          <div\r\n            onClick={() => {\r\n              setShowFilter(true);\r\n            }}\r\n            className=\"d-inline-block mx-2 \"\r\n            style={{ cursor: \"pointer\", color: \"#858585\" }}\r\n          >\r\n            <FaFilter />\r\n            <p\r\n              style={{\r\n                backgroundColor: showRedDot ? \"red\" : \"transparent\",\r\n                width: \"9px\",\r\n                height: \"9px\",\r\n                marginTop: \"-12px\",\r\n                zIndex: 1000,\r\n                marginLeft: \"10px\",\r\n                borderRadius: \"50%\",\r\n              }}\r\n            ></p>{\" \"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`${style.bodyContainer}`}>\r\n        {leadData.data.map((el) => (\r\n          <div\r\n            key={el.id}\r\n            onClick={() => {\r\n              setleadDetails(el);\r\n            }}\r\n          >\r\n            <div className={`${style.bodyCard}  `}>\r\n              <div className={`${style.textContent} p-1 `}>\r\n                <b\r\n                  onClick={() => {\r\n                    handleCandidateDetails(el.id, \"CandidateLead\");\r\n                  }}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  className={style.candidateName}\r\n                >\r\n                  {el.name ? el.name : \"-\"} {el.lastName ? el.lastName : \"\"}\r\n                </b>{\" \"}\r\n                <br />\r\n                {el.jobCategory ? el.jobCategory : \"-\"}\r\n                <br />\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <div>{el.mobileNumber ? el.mobileNumber : \"-\"}</div>\r\n                  <b\r\n                    style={{\r\n                      border: \"1px solid yellow\",\r\n                      backgroundColor: \"lightyellow\",\r\n                      fontSize: \"10px\",\r\n                      borderRadius: \"8px\",\r\n                      // marginRight: \"18px\",\r\n                      padding: \"4px\",\r\n                    }}\r\n                  >\r\n                    {el.fromSource === \"Retention\"\r\n                      ? \"Old lead\"\r\n                      : el.fromSource === null\r\n                      ? \"Meta lead\"\r\n                      : el.fromSource}\r\n                  </b>\r\n                </div>\r\n              </div>\r\n              {/* <div\r\n                    style={{ marginTop: \"-20px\" }}\r\n                    className=\"d-flex justify-content-end\"\r\n                >\r\n                    <div>\r\n                    <div className=\"dropdown\">\r\n                        <span\r\n                        style={{ cursor: \"pointer\" }}\r\n                        id=\"dropdownMenuButton1\"\r\n                        data-bs-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                        >\r\n                        <BsThreeDotsVertical />\r\n                        </span>\r\n                        <ul\r\n                        className=\"dropdown-menu\"\r\n                        aria-labelledby=\"dropdownMenuButton1\"\r\n                        >\r\n                        <li\r\n                            onClick={() => {\r\n                            handleOpenQualifyForm();\r\n                            }}\r\n                        >\r\n                            <a className=\"dropdown-item\" href=\"#\">\r\n                            Qualified\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a\r\n                            onClick={() => {\r\n                                showNotQualify(true);\r\n                            }}\r\n                            className=\"dropdown-item\"\r\n                            href=\"#\"\r\n                            >\r\n                            Not Qualified\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a\r\n                            onClick={() => {\r\n                                handleCallNotAttend(true);\r\n                            }}\r\n                            className=\"dropdown-item\"\r\n                            href=\"#\"\r\n                            >\r\n                            Not Attend\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a\r\n                            onClick={() => {\r\n                                handleCallRemainder(true);\r\n                            }}\r\n                            className=\"dropdown-item\"\r\n                            href=\"#\"\r\n                            >\r\n                            Call Remainder\r\n                            </a>\r\n                        </li>\r\n                        </ul>\r\n                    </div>\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"mt-3 d-grid justify-content-center\">\r\n        <Pagination\r\n          // variant=\"outlined\"\r\n          shape=\"rounded\"\r\n          color=\"success\"\r\n          boundaryCount={1}\r\n          siblingCount={0}\r\n          // onChange={paginationChange}\r\n          // count={leadData.totalPages}\r\n          size=\"small\"\r\n        />\r\n      </div>\r\n\r\n      {showFilter && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            // zIndex={2}\r\n            childComponent={\r\n              <>\r\n                <LeadlostFilter\r\n                  onclose={() => {\r\n                    setShowFilter(false);\r\n                  }}\r\n                />\r\n              </>\r\n            }\r\n          />\r\n        </MyModal>\r\n      )}\r\n\r\n      {leadQualifyFormOpen && (\r\n        <>\r\n          <MyModal>\r\n            <ModalContainer\r\n              childComponent={\r\n                <>\r\n                  <div\r\n                    className={`container d-flex align-itmes-center justify-content-between`}\r\n                  >\r\n                    <div className=\"\">\r\n                      <p>\r\n                        <b>Candidate lead qualify form</b>\r\n                      </p>\r\n                      <div className=\"d-flex\">\r\n                        {\" \"}\r\n                        <div className={`me-2  ${accordionstyle.radioInput}`}>\r\n                          {/* <label className=\"form-check-label me-3\"> */}\r\n                          <input\r\n                            type=\"radio\"\r\n                            name=\"fresher\"\r\n                            id=\"fresherYes\"\r\n                            value=\"fresher\"\r\n                            className={`form-check-input `}\r\n                            checked={selectedOption === \"fresher\"}\r\n                            onChange={handleOptionChange}\r\n                          />\r\n                          <label for=\"fresherYes\">Fresher</label>\r\n                          {/* </label> */}\r\n                        </div>\r\n                        <div className={`me-2  ${accordionstyle.radioInput}`}>\r\n                          <label className=\"form-check-label\">\r\n                            <input\r\n                              type=\"radio\"\r\n                              name=\"experience\"\r\n                              id=\"experienceNo\"\r\n                              value=\"experience\"\r\n                              className={`form-check-input `}\r\n                              checked={selectedOption === \"experience\"}\r\n                              onChange={handleOptionChange}\r\n                            />\r\n                            <label for=\"experienceNo\">Experience</label>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"ms-5\">\r\n                      <div\r\n                        className=\"btn btn-outline-danger\"\r\n                        onClick={handleCloseQualifyForm}\r\n                      >\r\n                        <AiOutlineClose />{\" \"}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <div>\r\n                      {selectedOption === \"fresher\" ? (\r\n                        <>\r\n                          {/* <div className={`${accordionstyle.Container}`}> */}{\" \"}\r\n                          <QualifyFresherform\r\n                            mobilenumber={leadDetails.mobileNumber}\r\n                            whatsappNumber={leadDetails.whatsappNumber}\r\n                            Reloadpage={handleQualifyFormSubmit}\r\n                          />\r\n                          {/* </div> */}\r\n                        </>\r\n                      ) : selectedOption === \"experience\" ? (\r\n                        // <ExperinenceWorkingform\r\n                        //   mobilenumber={leadDetails.mobileNumber}\r\n                        // />\r\n                        <ExperienceForm\r\n                          mobileNumber={leadDetails.mobileNumber}\r\n                          whatsappNumber={leadDetails.whatsappNumber}\r\n                          Reloadpage={handleQualifyFormSubmit}\r\n                        />\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n          </MyModal>\r\n        </>\r\n      )}\r\n      {showSuccessForm && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            zIndex=\"5000\"\r\n            childComponent={<SuccessTick HeadText=\"Successfully Submit\" />}\r\n          />\r\n        </MyModal>\r\n      )}\r\n\r\n      {popups.confirmation && (\r\n        <>\r\n          <MyModal>\r\n            <ModalContainer\r\n              zIndex=\"5000\"\r\n              childComponent={\r\n                <>\r\n                  <div>\r\n                    <h5 className=\"\"> Confirmation </h5>\r\n                    <div>\r\n                      Are you sure that you want to not qualify{\" \"}\r\n                      <b>\r\n                        {\" \"}\r\n                        {leadDetails.name} {leadDetails.lastName}{\" \"}\r\n                      </b>\r\n                      ?\r\n                    </div>\r\n                    <form action=\"#\" onSubmit={(e) => submitNotQualified(e)}>\r\n                      <div>\r\n                        {\" \"}\r\n                        <TextField\r\n                          label=\"Add Notes\"\r\n                          multiline\r\n                          value={callRemainder.notes}\r\n                          onChange={(e) => {\r\n                            handleCallRemainderChange(\"notes\", e.target.value);\r\n                          }}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          required\r\n                          margin=\"normal\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"d-flex justify-content-end flex-row mt-3 \">\r\n                        <button\r\n                          onClick={() => {\r\n                            showNotQualify(false);\r\n                          }}\r\n                          className=\"btn btn-danger mx-3\"\r\n                        >\r\n                          No\r\n                        </button>{\" \"}\r\n                        <button className=\"btn btn-success\">Yes</button>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n          </MyModal>\r\n        </>\r\n      )}\r\n      {popups.notAttendConfiramtion && (\r\n        <>\r\n          <MyModal>\r\n            <ModalContainer\r\n              // zIndex=\"5000\"\r\n              childComponent={\r\n                <>\r\n                  <div>\r\n                    <h5 className=\"\"> Confirmation </h5>\r\n                    <div>\r\n                      Are you sure that you want to not attend{\" \"}\r\n                      <b>\r\n                        {\" \"}\r\n                        {leadDetails.name} {leadDetails.lastName}\r\n                      </b>\r\n                      , please select <b>event</b>?\r\n                    </div>\r\n                    <div>\r\n                      <Autocomplete\r\n                        id=\"tags-outlined\"\r\n                        className=\"mt-3\"\r\n                        options={notAttendEventArray.map((option) => option)}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option}\r\n                        value={notAttendEvent}\r\n                        onChange={(e, newValue) => {\r\n                          setNotAttendEvent(newValue);\r\n                          console.log(newValue);\r\n                          setEventError(\"\");\r\n                        }}\r\n                        required\r\n                        filterSelectedOptions\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Event\"\r\n                            placeholder=\"Event\"\r\n                          />\r\n                        )}\r\n                      />\r\n                      {eventError && (\r\n                        <div className=\"text-danger\">{eventError}</div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end flex-row mt-3 \">\r\n                      <button\r\n                        onClick={() => {\r\n                          handleCallNotAttend(false);\r\n                          setNotAttendEvent(\"\");\r\n                          setEventError(\"\");\r\n                        }}\r\n                        className=\"btn btn-danger mx-3\"\r\n                      >\r\n                        No\r\n                      </button>{\" \"}\r\n                      <button\r\n                        onClick={submitNotAttend}\r\n                        className=\"btn btn-success\"\r\n                      >\r\n                        Yes\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              }\r\n            />\r\n          </MyModal>\r\n        </>\r\n      )}\r\n\r\n      {popups.callRemainder && (\r\n        <>\r\n          <MyModal>\r\n            <ModalContainer\r\n              childComponent={\r\n                <>\r\n                  <div style={{ width: \"300px\" }}>\r\n                    {\" \"}\r\n                    <div className=\"d-flex justify-content-between mb-3\">\r\n                      <h4 className=\"text-center\">Call Remainder</h4>\r\n                      <span\r\n                        onClick={() => {\r\n                          handleCallRemainder(false);\r\n                        }}\r\n                        className=\"btn btn-outline-danger\"\r\n                      >\r\n                        {\" \"}\r\n                        <IoMdClose />\r\n                      </span>\r\n                    </div>\r\n                    <form onSubmit={(e) => submitCallRemainder(e)}>\r\n                      {/* <div>\r\n                      {\" \"}\r\n                      <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                        <DateTimePicker\r\n                          label=\"Select date and time\"\r\n                          value={callRemainder.date}\r\n                          onChange={(newValue) => {\r\n                            handleCallRemainderChange(\"date\", newValue);\r\n                          }}\r\n                          renderInput={(props) => (\r\n                            <TextField\r\n                              {...props}\r\n                              error={dateTimeError}\r\n                              helperText={\r\n                                dateTimeError\r\n                                  ? \"Please select a date and time\"\r\n                                  : \"\"\r\n                              }\r\n                            />\r\n                          )}\r\n                        />\r\n                      </LocalizationProvider>\r\n                    </div> */}\r\n                      <label htmlFor=\"\">Follow up date : </label>\r\n                      <input\r\n                        type=\"datetime-local\"\r\n                        id=\"date\"\r\n                        name=\"date\"\r\n                        className=\"form-control\"\r\n                        onChange={(e) => {\r\n                          const inputDateTime = e.target.value;\r\n                          const formattedDateTime = inputDateTime + \":00\"; // Append \":00\" for seconds\r\n                          handleCallRemainderChange(\"date\", formattedDateTime);\r\n                        }}\r\n                        required\r\n                      />\r\n\r\n                      <div>\r\n                        {\" \"}\r\n                        {/* <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                        <ClockPicker\r\n                          date={date}\r\n                          onChange={(newDate) => setDate(newDate)}\r\n                        />\r\n                      </LocalizationProvider> */}\r\n                      </div>\r\n\r\n                      <div>\r\n                        {\" \"}\r\n                        <TextField\r\n                          label=\"Add Notes\"\r\n                          multiline\r\n                          value={callRemainder.notes}\r\n                          onChange={(e) => {\r\n                            handleCallRemainderChange(\"notes\", e.target.value);\r\n                          }}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          required\r\n                          margin=\"normal\"\r\n                        />\r\n                      </div>\r\n                      <LoadingButton\r\n                        type=\"submit\"\r\n                        loading={showLoader}\r\n                        variant=\"outlined\"\r\n                      >\r\n                        <span>Submit</span>\r\n                      </LoadingButton>\r\n                    </form>\r\n                  </div>\r\n\r\n                  {/* <div className=\"d-flex flex-row justify-content-end mt-3  \">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger mx-2\"\r\n                        onClick={() => {\r\n                          setShowPopups((prev) => ({\r\n                            ...prev,\r\n                            callRemainder: false,\r\n                          }));\r\n                        }}\r\n                      >\r\n                        Close\r\n                      </button>\r\n                      <button className=\"btn btn-success\" type=\"submit\">\r\n                        Submit\r\n                      </button>\r\n                    </div> */}\r\n                </>\r\n              }\r\n            />\r\n          </MyModal>\r\n        </>\r\n      )}\r\n      {popups.PopupAddCanLead && (\r\n        <MyModal>\r\n          <ModalContainer\r\n            childComponent={\r\n              <>\r\n                <div className=\"p-2\" style={{ width: \"800px\" }}>\r\n                  <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                    <div className=\"fs-4\">\r\n                      <b>Candidate Lead Generation</b>\r\n                    </div>\r\n                    <div\r\n                      className=\"btn btn-outline-danger\"\r\n                      onClick={() => {\r\n                        setShowPopups({\r\n                          PopupAddCanLead: false,\r\n                        });\r\n                      }}\r\n                    >\r\n                      <AiOutlineClose />\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    className=\"\"\r\n                    style={{ height: \"65vh\", overflow: \"auto\" }}\r\n                  >\r\n                    <CandidateLead\r\n                      oncloseLead={() =>\r\n                        setShowPopups((prev) => ({\r\n                          ...prev,\r\n                          PopupAddCanLead: false,\r\n                        }))\r\n                      }\r\n                      Reloadresponse={fetchData}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </>\r\n            }\r\n          />\r\n        </MyModal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CandidateLeadlost;\r\n","import React from \"react\";\r\nimport style from \"./pipeline.module.scss\";\r\nimport LeadGenerationPipeline from \"./components/leadGenerationPipeline\";\r\nimport CanCallRemainderPipeline from \"./components/callRemainderPipeline\";\r\nimport NotQualifiedPipeline from \"./components/notQualifiedPipeline\";\r\nimport CanRegisteredPipeline from \"./components/canRegisteredPipeline\";\r\nimport InterviewFollowUpPipeline from \"./components/interviewFollowUpPipeline\";\r\nimport CandidateLeadlost from \"./components/candidateLeadlost\";\r\nimport { modifyYear } from \"../../../utility\";\r\n\r\nfunction CandidatePipeline() {\r\n  return (\r\n    <div>\r\n      <div className={`${style.pipelineWrp}`}>\r\n        <div className={`${style.pipelineBox}`}>\r\n          <LeadGenerationPipeline />\r\n          <CanCallRemainderPipeline />\r\n          <NotQualifiedPipeline />\r\n          <CanRegisteredPipeline />\r\n          <InterviewFollowUpPipeline />\r\n          <CandidateLeadlost />\r\n         { console.log(modifyYear(\"add\",1))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CandidatePipeline;\r\n"],"names":["_ref","data","onClose","onAssignChange","textHeading","showSuccess","setShowSuccess","useState","candiateDetails","setCandidateDetails","putCandidateLead","setPutcandidateLead","canLeadId","qualified","notQualified","isSuperAdmin","useSelector","state","adminDetails","roleID","enableSubmit","setEnableSubmit","CanputLead","setCanputLead","activeTab","setActiveTab","showConfirmationPopup","setShowConfirmPopup","showConfirmationqualifiedPopup","setShowConfirmQualifiedPopup","console","log","assignAdminto","setAssignAdminto","metaLeadId","adminId","setAdminDetails","id","adminName","showScheduleInterview","setShowScheduleInterview","useEffect","params","window","location","href","isShowScheduleInterview","includes","handleTabClick","tabNumber","useRef","ConfirmFormSubmit","notes","PutCandidateLeadCheck","then","getCandidateLead","PutMetaLeadAssign","code","alert","setTimeout","GetAllsdminDetails","map","item","userName","adminid","prev","handleWhatsAppIconClick","phoneNumber","whatsappURL","concat","open","isCopied","setIsCopied","handleCopyNumber","whatsappNumber","navigator","clipboard","writeText","keySkill","split","_jsx","children","Detailsshow","DetailsContainer","topComponent","_Fragment","className","Candidatedetailstyle","boxcross","_jsxs","CrossStyle","RxCross2","onClick","childComponent","boxwidth","topcontainer","profilePic","src","alt","width","companylogo","candidateName","jobCategory","FBStyle","StatusStyle","Green_wrp","type","name","checked","htmlFor","chips_wrp","Createdon","DDMMYYYY_formate","dateValue","createdTime","flexContainer","LiaUserEditSolid","FaWhatsapp","class","style","border","ThreeOutline","PiDotsThreeOutlineVerticalFill","ScheduleInterview","candidateId","MdCall","mobileNumber","MdOutlineContentCopy","personalDetails","CanDetailsRow","lineHeight","numbersstyle","flag","Phonecall","Whatsapnumbersstyle","WhatsappImage","slice","educationQualification","specification","industry","experience","preferredLocation","Autocomplete","clearOnEscape","onChange","event","newValue","selectedAdminName","indexOf","adminNameIndex","undefined","handleLeadAssignfromAdmin","error","value","assignTo","options","renderInput","TextField","label","variant","DailyDetailsupdate","candidateTabsviewStyle","tab_buttons","tab_hr","activetag","unactivetag","borderTop","tab_content","TimelineFacebookMeta","facebookId","Card","maxWidth","minWidth","margin","CardContent","AddNotesFBLead","MyModal","ModalContainer","zIndex","multiline","required","target","maxRows","fullWidth","handleCancelClick","backgroundColor","disabled","handleCancelClicknotqualify","SuccessTick","HeadText","onclose","filterDetails","CandidatePipelineDetails","leadGenerationFilter","filterData","setFilterData","profilePageNo","fromSource","currentStatus","dateFilterType","expYearsMax","expYearsMin","createdTimeStart","createdTimeEnd","page","currentPipeline","pipelineStage","stages","adminList","setAdminList","anchorEl","setAnchorEl","React","Boolean","showCustom","setshowCustom","validationErrors","setValidationErrors","start","end","Dispatch","useDispatch","handleCustomDate","val","setOptions","handleDateSelect","selectedOption","today","Date","endDate","startDate","setDate","getDate","toISOString","setMonth","getMonth","handleFieldChange","field","test","getJobFilterOptions","filter","el","category","activeAdmins","Deactived","catch","CandidatePipelineActions","setLeadGenerationFilter","cursor","AiOutlineClose","fontSize","inputProps","maxLength","InputProps","startAdornment","display","alignItems","AiOutlinePhone","marginRight","e","select","defaultValue","MenuItem","placeholder","FormControl","InputLabel","Select","labelId","option","getOptionLabel","reason","filterSelectedOptions","currentTarget","Menu","MenuListProps","min","max","preventDefault","isFormValid","isValid","localStorage","getItem","dateFormate","addDaysToDate","leadData","setLeadData","refreshPage","candidateFilter","refreshCountIncrement","showFilter","setShowFilter","leadQualifyFormOpen","setLeadQualifyFormOpen","setenableSubmit","setSelectedOption","leadDetails","setleadDetails","showSuccessForm","setshowSuccessForm","popups","setShowPopups","PopupAddCanLead","callRemainder","success","confirmation","notAttendConfiramtion","showLoader","setShowLoader","isRotating","setIsRotating","date","setCallRemainder","notAttendEventArray","setNotAttendEventArray","notAttendEvent","setNotAttendEvent","eventError","setEventError","showRedDot","setShowRedDot","dateTimeError","setDateTimeError","totalCount","setTotalCount","currentDate","setSeconds","setMilliseconds","maxDate","getTime","handleCandidateDetails","async","candidateleadId","getcandidateDetails","commonPopupActions","setShowPopup","fetchData","GetCanLeadPipeline","status","firstData","shift","totalElements","obj1","obj2","obj1WithoutPage","obj2WithoutPage","key","hasOwnProperty","ShowRedDot","initialFilterObj","handleOptionChange","selectedValue","experiencedValue","PutCandidateType","handleQualifyFormSubmit","getMetaLead","handleCallRemainder","handleCallNotAttend","showNotQualify","handleCallRemainderChange","formattedDateTime","getCurrentDateTime","PutMetaLeadAssignToAdmin","res","setRefreshCount","GetNotAttendEvent","pipelineContainer","headerCard","TfiImport","FaPlus","faplus","HiOutlineRefresh","refreshRotate","refreshcolor","color","FaFilter","height","marginTop","marginLeft","borderRadius","bodyContainer","bodyCard","textContent","lastName","greengif","differenceDays","Math","floor","daysAgo","abs","padding","BsThreeDotsVertical","GetCandidateQualifyDetials","_data$canLeadDetails","canLeadDetails","experienced","Pagination","shape","boundaryCount","siblingCount","setPageChange","count","totalPages","size","LeadPipelineFilter","accordionstyle","radioInput","for","QualifyFresherform","mobilenumber","Reloadpage","ExperienceForm","action","onSubmit","obj","UpdateCanPipelineStatus","submitNotQualified","notAttend","IoMdClose","join","submitCallRemainder","LoadingButton","loading","overflow","CandidateLead","oncloseLead","Reloadresponse","callRemainderFilter","modifyDate","modifyYear","setCallRemainderFilter","showLeadDetails","setShowLeadDetails","show","notQualifyNotes","setNotQualifyNotes","textAlign","borderColor","fontWeight","marginBottom","callRemainderOn","callRemainderOnDate","setHours","differenceMs","ceil","CallRemainderFilter","notQualifiedFilter","setNotQualifiedFilter","NotQualifiedFilter","setCandidateFilter","GetCandidatePipeline","firstName","CanRegisterFilter","interviewFollowUpFilter","followupStatus","setInterviewFollowUpFilter","addOneyear","InterviewFollowUpFilter","candididateLeadLostFilter","setCandidateeadlostFilter","LeadlostFilter","pipelineWrp","pipelineBox","LeadGenerationPipeline","CanCallRemainderPipeline","NotQualifiedPipeline","CanRegisteredPipeline","InterviewFollowUpPipeline","CandidateLeadlost"],"sourceRoot":""}